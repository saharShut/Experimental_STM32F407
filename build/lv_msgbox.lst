ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_msgbox.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Lib/lvgl/src/widgets/msgbox/lv_msgbox.c"
  20              		.section	.text.lv_layer_top,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_layer_top:
  27              	.LFB90:
  28              		.file 2 "Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h"
   1:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
   2:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @file lv_disp.h
   3:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *
   4:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
   5:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
   6:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #ifndef LV_DISPLAY_H
   7:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #define LV_DISPLAY_H
   8:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
   9:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #ifdef __cplusplus
  10:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** extern "C" {
  11:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #endif
  12:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  13:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /*********************
  14:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *      INCLUDES
  15:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *********************/
  16:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #include "../misc/lv_types.h"
  17:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #include "../misc/lv_timer.h"
  18:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #include "../misc/lv_event.h"
  19:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #include "../misc/lv_color.h"
  20:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #include "../draw/lv_draw.h"
  21:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  22:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /*********************
  23:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *      DEFINES
  24:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *********************/
  25:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  26:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #ifndef LV_ATTRIBUTE_FLUSH_READY
  27:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #define LV_ATTRIBUTE_FLUSH_READY
  28:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** #endif
  29:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  30:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**********************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 2


  31:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *      TYPEDEFS
  32:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  **********************/
  33:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  34:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** typedef enum {
  35:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_ROTATION_0 = 0,
  36:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_ROTATION_90,
  37:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_ROTATION_180,
  38:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_ROTATION_270
  39:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** } lv_display_rotation_t;
  40:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  41:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** typedef enum {
  42:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     /**
  43:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * Use the buffer(s) to render the screen is smaller parts.
  44:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * This way the buffers can be smaller then the display to save RAM. At least 1/10 screen size 
  45:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      */
  46:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_RENDER_MODE_PARTIAL,
  47:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  48:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     /**
  49:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * The buffer(s) has to be screen sized and LVGL will render into the correct location of the b
  50:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * This way the buffer always contain the whole image. Only the changed ares will be updated.
  51:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * With 2 buffers the buffers' content are kept in sync automatically and in flush_cb only addr
  52:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      */
  53:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_RENDER_MODE_DIRECT,
  54:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  55:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     /**
  56:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * Always redraw the whole screen even if only one pixel has been changed.
  57:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      * With 2 buffers in flush_cb only and address change is required.
  58:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****      */
  59:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_DISPLAY_RENDER_MODE_FULL,
  60:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** } lv_display_render_mode_t;
  61:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  62:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** typedef enum {
  63:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_NONE,
  64:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  65:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  66:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  67:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  68:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  69:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  70:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  71:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  72:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  73:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  74:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  75:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  76:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  77:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  78:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  79:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** } lv_screen_load_anim_t;
  80:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  81:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** typedef void (*lv_display_flush_cb_t)(lv_display_t * disp, const lv_area_t * area, uint8_t * px_map
  82:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** typedef void (*lv_display_flush_wait_cb_t)(lv_display_t * disp);
  83:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  84:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**********************
  85:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * GLOBAL PROTOTYPES
  86:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  **********************/
  87:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 3


  88:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
  89:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Create a new display with the given resolution
  90:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param hor_res   horizontal resolution in pixels
  91:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param ver_res   vertical resolution in pixels
  92:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to a display object or `NULL` on error
  93:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
  94:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_display_t * lv_display_create(int32_t hor_res, int32_t ver_res);
  95:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
  96:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
  97:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Remove a display
  98:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display
  99:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 100:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_delete(lv_display_t * disp);
 101:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 102:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 103:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set a default display. The new screens will be created on it by default.
 104:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 105:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 106:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_default(lv_display_t * disp);
 107:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 108:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 109:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the default display
 110:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the default display
 111:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 112:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_display_t * lv_display_get_default(void);
 113:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 114:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 115:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the next display.
 116:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to the current display. NULL to initialize.
 117:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the next display or NULL if no more. Gives the first display when the parameter
 118:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 119:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_display_t * lv_display_get_next(lv_display_t * disp);
 120:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 121:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /*---------------------
 122:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * RESOLUTION
 123:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *--------------------*/
 124:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 125:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 126:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Sets the resolution of a display. `LV_EVENT_RESOLUTION_CHANGED` event will be sent.
 127:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Here the native resolution of the device should be set. If the display will be rotated later wit
 128:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * `lv_display_set_rotation` LVGL will swap the hor. and ver. resolution automatically.
 129:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 130:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param hor_res   the new horizontal resolution
 131:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param ver_res   the new vertical resolution
 132:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 133:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_resolution(lv_display_t * disp, int32_t hor_res, int32_t ver_res);
 134:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 135:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 136:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * It's not mandatory to use the whole display for LVGL, however in some cases physical resolution 
 137:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * For example the touchpad still sees whole resolution and the values needs to be converted
 138:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * to the active LVGL display area.
 139:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 140:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param hor_res   the new physical horizontal resolution, or -1 to assume it's the same as the no
 141:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param ver_res   the new physical vertical resolution, or -1 to assume it's the same as the norm
 142:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 143:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_physical_resolution(lv_display_t * disp, int32_t hor_res, int32_t ver_res);
 144:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 4


 145:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 146:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * If physical resolution is not the same as the normal resolution
 147:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * the offset of the active display area can be set here.
 148:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 149:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param x         X offset
 150:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param y         Y offset
 151:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 152:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_offset(lv_display_t * disp, int32_t x, int32_t y);
 153:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 154:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 155:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the rotation of this display. LVGL will swap the horizontal and vertical resolutions interna
 156:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 157:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param rotation  `LV_DISPLAY_ROTATION_0/90/180/270`
 158:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 159:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_rotation(lv_display_t * disp, lv_display_rotation_t rotation);
 160:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 161:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 162:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the DPI (dot per inch) of the display.
 163:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * dpi = sqrt(hor_res^2 + ver_res^2) / diagonal"
 164:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 165:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param dpi       the new DPI
 166:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 167:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_dpi(lv_display_t * disp, int32_t dpi);
 168:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 169:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 170:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the horizontal resolution of a display.
 171:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 172:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the horizontal resolution of the display.
 173:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 174:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_horizontal_resolution(const lv_display_t * disp);
 175:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 176:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 177:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the vertical resolution of a display
 178:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 179:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the vertical resolution of the display
 180:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 181:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_vertical_resolution(const lv_display_t * disp);
 182:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 183:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 184:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the physical horizontal resolution of a display
 185:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 186:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return the      physical horizontal resolution of the display
 187:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 188:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_physical_horizontal_resolution(const lv_display_t * disp);
 189:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 190:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 191:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the physical vertical resolution of a display
 192:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 193:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the physical vertical resolution of the display
 194:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 195:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_physical_vertical_resolution(const lv_display_t * disp);
 196:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 197:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 198:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the horizontal offset from the full / physical display
 199:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 200:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the horizontal offset from the physical display
 201:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 5


 202:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_offset_x(const lv_display_t * disp);
 203:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 204:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 205:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the vertical offset from the full / physical display
 206:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 207:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the horizontal offset from the physical display
 208:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 209:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_offset_y(const lv_display_t * disp);
 210:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 211:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 212:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the current rotation of this display.
 213:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 214:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          the current rotation
 215:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 216:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_display_rotation_t lv_display_get_rotation(lv_display_t * disp);
 217:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 218:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 219:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the DPI of the display
 220:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 221:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          dpi of the display
 222:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 223:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** int32_t lv_display_get_dpi(const lv_display_t * disp);
 224:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 225:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /*---------------------
 226:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * BUFFERING
 227:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *--------------------*/
 228:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 229:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 230:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the buffers for a display, similarly to `lv_display_set_draw_buffers`, but accept the raw bu
 231:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp              pointer to a display
 232:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param buf1              first buffer
 233:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param buf2              second buffer (can be `NULL`)
 234:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param buf_size          buffer size in byte
 235:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param render_mode       LV_DISPLAY_RENDER_MODE_PARTIAL/DIRECT/FULL
 236:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 237:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_buffers(lv_display_t * disp, void * buf1, void * buf2, uint32_t buf_size,
 238:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****                             lv_display_render_mode_t render_mode);
 239:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 240:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 241:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the buffers for a display, accept a draw buffer pointer.
 242:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Normally use `lv_display_set_buffers` is enough for most cases.
 243:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Use this function when an existing lv_draw_buf_t is available.
 244:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp              pointer to a display
 245:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param buf1              first buffer
 246:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param buf2              second buffer (can be `NULL`)
 247:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 248:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_draw_buffers(lv_display_t * disp, lv_draw_buf_t * buf1, lv_draw_buf_t * buf2);
 249:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 250:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 251:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set display render mode
 252:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp              pointer to a display
 253:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param render_mode       LV_DISPLAY_RENDER_MODE_PARTIAL/DIRECT/FULL
 254:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 255:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_render_mode(lv_display_t * disp, lv_display_render_mode_t render_mode);
 256:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 257:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 258:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the flush callback which will be called to copy the rendered image to the display.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 6


 259:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 260:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param flush_cb  the flush callback (`px_map` contains the rendered image as raw pixel map and i
 261:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 262:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_flush_cb(lv_display_t * disp, lv_display_flush_cb_t flush_cb);
 263:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 264:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 265:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set a callback to be used while LVGL is waiting flushing to be finished.
 266:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * It can do any complex logic to wait, including semaphores, mutexes, polling flags, etc.
 267:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * If not set the `disp->flushing` flag is used which can be cleared with `lv_display_flush_ready()
 268:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 269:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param wait_cb   a callback to call while LVGL is waiting for flush ready.
 270:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                  If NULL `lv_display_flush_ready()` can be used to signal that flushing is ready
 271:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 272:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_flush_wait_cb(lv_display_t * disp, lv_display_flush_wait_cb_t wait_cb);
 273:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 274:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 275:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Set the color format of the display.
 276:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp              pointer to a display
 277:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param color_format      Possible values are
 278:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                          - LV_COLOR_FORMAT_RGB565
 279:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                          - LV_COLOR_FORMAT_RGB888
 280:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                          - LV_COLOR_FORMAT_XRGB888
 281:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                          - LV_COLOR_FORMAT_ARGB888
 282:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *@note To change the endianness of the rendered image in case of RGB565 format
 283:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *      (i.e. swap the 2 bytes) call `lv_draw_sw_rgb565_swap` in the flush_cb
 284:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 285:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_color_format(lv_display_t * disp, lv_color_format_t color_format);
 286:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 287:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 288:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the color format of the display
 289:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp              pointer to a display
 290:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return                  the color format
 291:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 292:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_color_format_t lv_display_get_color_format(lv_display_t * disp);
 293:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 294:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 295:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Enable anti-aliasing for the render engine
 296:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display
 297:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param en        true/false
 298:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 299:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_display_set_antialiasing(lv_display_t * disp, bool en);
 300:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 301:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 302:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get if anti-aliasing is enabled for a display or not
 303:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to a display (NULL to use the default display)
 304:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          true/false
 305:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 306:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** bool lv_display_get_antialiasing(lv_display_t * disp);
 307:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 308:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** //! @cond Doxygen_Suppress
 309:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 310:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 311:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Call from the display driver when the flushing is finished
 312:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display whose `flush_cb` was called
 313:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 314:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** LV_ATTRIBUTE_FLUSH_READY void lv_display_flush_ready(lv_display_t * disp);
 315:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 7


 316:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 317:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Tell if it's the last area of the refreshing process.
 318:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Can be called from `flush_cb` to execute some special display refreshing if needed when all area
 319:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display
 320:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          true: it's the last area to flush;
 321:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                  false: there are other areas too which will be refreshed soon
 322:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 323:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** LV_ATTRIBUTE_FLUSH_READY bool lv_display_flush_is_last(lv_display_t * disp);
 324:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 325:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** //! @endcond
 326:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 327:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** bool lv_display_is_double_buffered(lv_display_t * disp);
 328:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 329:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /*---------------------
 330:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * SCREENS
 331:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *--------------------*/
 332:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 333:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 334:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Return a pointer to the active screen on a display
 335:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display which active screen should be get.
 336:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                  (NULL to use the default screen)
 337:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the active screen object (loaded by 'lv_screen_load()')
 338:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 339:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_obj_t * lv_display_get_screen_active(lv_display_t * disp);
 340:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 341:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 342:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
 343:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display which previous screen should be get.
 344:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  *                  (NULL to use the default screen)
 345:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the previous screen object or NULL if not used now
 346:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 347:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_obj_t * lv_display_get_screen_prev(lv_display_t * disp);
 348:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 349:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 350:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Return the top layer. The top layer is the same on all screens and it is above the normal screen
 351:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display which top layer should be get. (NULL to use the default scre
 352:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the top layer object
 353:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 354:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_obj_t * lv_display_get_layer_top(lv_display_t * disp);
 355:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 356:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 357:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Return the sys. layer. The system layer is the same on all screen and it is above the normal scr
 358:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display which sys. layer should be retrieved. (NULL to use the defau
 359:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the sys layer object
 360:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 361:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_obj_t * lv_display_get_layer_sys(lv_display_t * disp);
 362:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 363:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 364:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Return the bottom layer. The bottom layer is the same on all screen and it is under the normal s
 365:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * It's visible only if the the screen is transparent.
 366:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param disp      pointer to display (NULL to use the default screen)
 367:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the bottom layer object
 368:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 369:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** lv_obj_t * lv_display_get_layer_bottom(lv_display_t * disp);
 370:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 371:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 372:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Load a screen on the default display
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 8


 373:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param scr       pointer to a screen
 374:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 375:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_screen_load(struct _lv_obj_t * scr);
 376:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 377:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 378:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Switch screen with animation
 379:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param scr       pointer to the new screen to load
 380:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param anim_type type of the animation from `lv_screen_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE
 381:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param time      time of the animation
 382:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param delay     delay before the transition
 383:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @param auto_del  true: automatically delete the old screen
 384:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 385:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** void lv_screen_load_anim(lv_obj_t * scr, lv_screen_load_anim_t anim_type, uint32_t time, uint32_t d
 386:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****                          bool auto_del);
 387:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 388:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 389:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the active screen of the default display
 390:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the active screen
 391:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 392:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** static inline lv_obj_t * lv_screen_active(void)
 393:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** {
 394:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     return lv_display_get_screen_active(lv_display_get_default());
 395:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** }
 396:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** 
 397:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** /**
 398:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * Get the top layer  of the default display
 399:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  * @return          pointer to the top layer
 400:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****  */
 401:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** static inline lv_obj_t * lv_layer_top(void)
 402:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** {
  29              		.loc 2 402 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 403:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h ****     return lv_display_get_layer_top(lv_display_get_default());
  38              		.loc 2 403 5 view .LVU1
  39              		.loc 2 403 12 is_stmt 0 view .LVU2
  40 0002 FFF7FEFF 		bl	lv_display_get_default
  41              	.LVL0:
  42 0006 FFF7FEFF 		bl	lv_display_get_layer_top
  43              	.LVL1:
 404:Lib/lvgl/src/widgets/msgbox/../../core/../display/lv_display.h **** }
  44              		.loc 2 404 1 view .LVU3
  45 000a 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE90:
  49              		.section	.text.lv_msgbox_create,"ax",%progbits
  50              		.align	1
  51              		.global	lv_msgbox_create
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 9


  56              	lv_msgbox_create:
  57              	.LVL2:
  58              	.LFB234:
   1:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**
   2:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  * @file lv_msgbox.c
   3:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *
   4:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  */
   5:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
   6:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /*********************
   7:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *      INCLUDES
   8:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *********************/
   9:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "lv_msgbox.h"
  10:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #if LV_USE_MSGBOX
  11:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  12:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../label/lv_label.h"
  13:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../button/lv_button.h"
  14:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../image/lv_image.h"
  15:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../../misc/lv_assert.h"
  16:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../../display/lv_display.h"
  17:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../../layouts/flex/lv_flex.h"
  18:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #include "../../stdlib/lv_string.h"
  19:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  20:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /*********************
  21:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *      DEFINES
  22:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *********************/
  23:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #define LV_MSGBOX_FLAG_AUTO_PARENT  LV_OBJ_FLAG_WIDGET_1        /*Mark that the parent was automati
  24:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** #define MY_CLASS    &lv_msgbox_class
  25:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  26:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
  27:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *      TYPEDEFS
  28:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
  29:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  30:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
  31:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *  STATIC PROTOTYPES
  32:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
  33:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** static void msgbox_close_click_event_cb(lv_event_t * e);
  34:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  35:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
  36:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *  STATIC VARIABLES
  37:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
  38:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_class = {
  39:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  40:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_DPI_DEF * 2,
  41:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_SIZE_CONTENT,
  42:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_msgbox_t),
  43:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox",
  44:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  45:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  46:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_header_class = {
  47:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  48:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  49:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_DPI_DEF / 3,
  50:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  51:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-header",
  52:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  53:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  54:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_content_class = {
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 10


  55:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  56:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  57:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_SIZE_CONTENT,
  58:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  59:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-content",
  60:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  61:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  62:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_footer_class = {
  63:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  64:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  65:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_DPI_DEF / 3,
  66:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  67:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-footer",
  68:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  69:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  70:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_footer_button_class = {
  71:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  72:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_SIZE_CONTENT,
  73:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_PCT(100),
  74:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  75:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_TRUE,
  76:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-footer-button",
  77:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  78:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  79:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_header_button_class = {
  80:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  81:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_DPI_DEF / 3,
  82:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_PCT(100),
  83:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  84:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_TRUE,
  85:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-header-button",
  86:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  87:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  88:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_backdrop_class = {
  89:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  90:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  91:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_PCT(100),
  92:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t),
  93:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     .name = "msgbox-backdrop",
  94:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** };
  95:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
  96:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
  97:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *      MACROS
  98:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
  99:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 100:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
 101:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *   GLOBAL FUNCTIONS
 102:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
 103:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 104:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_create(lv_obj_t * parent)
 105:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
  59              		.loc 1 105 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		.loc 1 105 1 is_stmt 0 view .LVU5
  64 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 11


  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 16
  67              		.cfi_offset 3, -16
  68              		.cfi_offset 4, -12
  69              		.cfi_offset 5, -8
  70              		.cfi_offset 14, -4
 106:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_LOG_INFO("begin");
  71              		.loc 1 106 5 is_stmt 1 view .LVU6
  72              		.loc 1 106 5 view .LVU7
  73              		.loc 1 106 5 view .LVU8
 107:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     bool auto_parent = false;
  74              		.loc 1 107 5 view .LVU9
  75              	.LVL3:
 108:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(parent == NULL) {
  76              		.loc 1 108 5 view .LVU10
  77              		.loc 1 108 7 is_stmt 0 view .LVU11
  78 0002 10B3     		cbz	r0, .L14
  79 0004 0446     		mov	r4, r0
 107:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     bool auto_parent = false;
  80              		.loc 1 107 10 view .LVU12
  81 0006 0025     		movs	r5, #0
  82              	.LVL4:
  83              	.L4:
 109:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         auto_parent = true;
 110:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 112:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 113:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_remove_flag(parent, LV_OBJ_FLAG_IGNORE_LAYOUT);
 114:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(parent, LV_PCT(100), LV_PCT(100));
 115:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 116:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 117:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(&lv_msgbox_class, parent);
  84              		.loc 1 117 5 is_stmt 1 view .LVU13
  85              		.loc 1 117 22 is_stmt 0 view .LVU14
  86 0008 2146     		mov	r1, r4
  87 000a 2048     		ldr	r0, .L16
  88 000c FFF7FEFF 		bl	lv_obj_class_create_obj
  89              	.LVL5:
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(obj);
  90              		.loc 1 118 5 is_stmt 1 view .LVU15
  91              		.loc 1 118 5 view .LVU16
  92 0010 0446     		mov	r4, r0
  93              	.LVL6:
  94              		.loc 1 118 5 is_stmt 0 view .LVU17
  95 0012 88B3     		cbz	r0, .L8
  96              		.loc 1 118 5 is_stmt 1 view .LVU18
  97              		.loc 1 118 26 view .LVU19
 119:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
  98              		.loc 1 119 5 view .LVU20
 120:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(obj);
  99              		.loc 1 120 5 view .LVU21
 100 0014 FFF7FEFF 		bl	lv_obj_class_init_obj
 101              	.LVL7:
 121:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 102              		.loc 1 121 5 view .LVU22
 122:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_set_flex_flow(obj, LV_FLEX_FLOW_COLUMN);
 103              		.loc 1 122 5 view .LVU23
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 12


 104 0018 0121     		movs	r1, #1
 105 001a 2046     		mov	r0, r4
 106 001c FFF7FEFF 		bl	lv_obj_set_flex_flow
 107              	.LVL8:
 123:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 124:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(auto_parent) lv_obj_add_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT);
 108              		.loc 1 124 5 view .LVU24
 109              		.loc 1 124 7 is_stmt 0 view .LVU25
 110 0020 5DBB     		cbnz	r5, .L15
 111              	.L9:
 125:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 126:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     mbox->content = lv_obj_class_create_obj(&lv_msgbox_content_class, obj);
 112              		.loc 1 126 5 is_stmt 1 view .LVU26
 113              		.loc 1 126 21 is_stmt 0 view .LVU27
 114 0022 2146     		mov	r1, r4
 115 0024 1A48     		ldr	r0, .L16+4
 116 0026 FFF7FEFF 		bl	lv_obj_class_create_obj
 117              	.LVL9:
 118              		.loc 1 126 19 view .LVU28
 119 002a 2063     		str	r0, [r4, #48]
 127:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(obj);
 120              		.loc 1 127 5 is_stmt 1 view .LVU29
 121              		.loc 1 127 5 view .LVU30
 122              		.loc 1 127 5 view .LVU31
 123              		.loc 1 127 26 view .LVU32
 128:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 124              		.loc 1 128 5 view .LVU33
 125              		.loc 1 128 7 is_stmt 0 view .LVU34
 126 002c 58B3     		cbz	r0, .L12
 129:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(mbox->content);
 127              		.loc 1 129 5 is_stmt 1 view .LVU35
 128 002e FFF7FEFF 		bl	lv_obj_class_init_obj
 129              	.LVL10:
 130:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_set_flex_flow(mbox->content, LV_FLEX_FLOW_COLUMN);
 130              		.loc 1 130 5 view .LVU36
 131 0032 0121     		movs	r1, #1
 132 0034 206B     		ldr	r0, [r4, #48]
 133 0036 FFF7FEFF 		bl	lv_obj_set_flex_flow
 134              	.LVL11:
 131:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 132:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_center(obj);
 135              		.loc 1 132 5 view .LVU37
 136              	.LBB8:
 137              	.LBI8:
 138              		.file 3 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h"
   1:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
   2:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *
   4:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
   5:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
   6:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
   9:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** extern "C" {
  11:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** #endif
  12:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 13


  13:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /*********************
  14:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *      INCLUDES
  15:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *********************/
  16:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  18:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /*********************
  19:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *      DEFINES
  20:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *********************/
  21:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  22:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**********************
  23:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  **********************/
  25:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  26:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**********************
  27:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  28:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  **********************/
  29:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  30:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  31:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  32:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  33:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param x         new x coordinate
  34:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param y         new y coordinate
  35:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  36:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  37:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  38:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  39:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  40:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_pos(lv_obj_t * obj, int32_t x, int32_t y);
  41:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  42:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  43:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the x coordinate of an object
  44:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  45:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param x         new x coordinate
  46:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  47:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  48:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  49:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  50:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  51:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_x(lv_obj_t * obj, int32_t x);
  52:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  53:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  54:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the y coordinate of an object
  55:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  56:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param y         new y coordinate
  57:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  58:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  59:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  60:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  61:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  62:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_y(lv_obj_t * obj, int32_t y);
  63:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  64:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  65:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the size of an object.
  66:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  67:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param w         the new width
  68:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param h         the new height
  69:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            possible values are:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 14


  70:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  71:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  72:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  73:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  74:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  75:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_size(lv_obj_t * obj, int32_t w, int32_t h);
  76:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  77:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  78:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Recalculate the size of the object
  79:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  80:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @return          true: the size has been changed
  81:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  82:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** bool lv_obj_refr_size(lv_obj_t * obj);
  83:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  84:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  85:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the width of an object
  86:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  87:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param w         the new width
  88:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            possible values are:
  89:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  90:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  91:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  92:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  93:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
  94:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_width(lv_obj_t * obj, int32_t w);
  95:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
  96:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
  97:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the height of an object
  98:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
  99:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param h         the new height
 100:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            possible values are:
 101:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 102:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 103:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 104:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 105:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 106:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_height(lv_obj_t * obj, int32_t h);
 107:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 108:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 109:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 110:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
 111:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 112:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 113:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_content_width(lv_obj_t * obj, int32_t w);
 114:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 115:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 116:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 117:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
 118:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 119:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 120:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_content_height(lv_obj_t * obj, int32_t h);
 121:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 122:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 123:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Set a layout for an object
 124:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object
 125:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 126:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 15


 127:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_layout(lv_obj_t * obj, uint32_t layout);
 128:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 129:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 130:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 131:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 132:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 133:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 134:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const lv_obj_t * obj);
 135:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 136:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 137:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Mark the object for layout update.
 138:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 139:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 140:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(lv_obj_t * obj);
 141:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 142:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 143:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Update the layout of an object.
 144:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 145:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 146:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_update_layout(const lv_obj_t * obj);
 147:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 148:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 149:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Change the alignment of an object.
 150:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 151:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 152:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 153:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_set_align(lv_obj_t * obj, lv_align_t align);
 154:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 155:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 156:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 157:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Equivalent to:
 158:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 159:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 160:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 161:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 162:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 163:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 164:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 165:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_align(lv_obj_t * obj, lv_align_t align, int32_t x_ofs, int32_t y_ofs);
 166:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 167:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 168:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Align an object to an other object.
 169:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 170:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 171:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 172:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 173:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 174:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 175:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
 176:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** void lv_obj_align_to(lv_obj_t * obj, const lv_obj_t * base, lv_align_t align, int32_t x_ofs,
 177:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****                      int32_t y_ofs);
 178:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** 
 179:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** /**
 180:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 181:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 182:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 183:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****  */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 16


 184:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** static inline void lv_obj_center(lv_obj_t * obj)
 139              		.loc 3 184 20 view .LVU38
 140              	.LBB9:
 185:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h **** {
 186:Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 141              		.loc 3 186 5 view .LVU39
 142 003a 0023     		movs	r3, #0
 143 003c 1A46     		mov	r2, r3
 144 003e 0921     		movs	r1, #9
 145 0040 2046     		mov	r0, r4
 146 0042 FFF7FEFF 		bl	lv_obj_align
 147              	.LVL12:
 148              		.loc 3 186 5 is_stmt 0 view .LVU40
 149              	.LBE9:
 150              	.LBE8:
 133:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return obj;
 151              		.loc 1 133 5 is_stmt 1 view .LVU41
 152              	.L3:
 134:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 153              		.loc 1 134 1 is_stmt 0 view .LVU42
 154 0046 2046     		mov	r0, r4
 155 0048 38BD     		pop	{r3, r4, r5, pc}
 156              	.LVL13:
 157              	.L14:
 109:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
 158              		.loc 1 109 9 is_stmt 1 view .LVU43
 110:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 159              		.loc 1 110 9 view .LVU44
 110:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 160              		.loc 1 110 18 is_stmt 0 view .LVU45
 161 004a FFF7FEFF 		bl	lv_layer_top
 162              	.LVL14:
 110:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 163              		.loc 1 110 18 view .LVU46
 164 004e 0146     		mov	r1, r0
 165 0050 1048     		ldr	r0, .L16+8
 166 0052 FFF7FEFF 		bl	lv_obj_class_create_obj
 167              	.LVL15:
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 168              		.loc 1 111 9 is_stmt 1 view .LVU47
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 169              		.loc 1 111 9 view .LVU48
 170 0056 0446     		mov	r4, r0
 171 0058 68B1     		cbz	r0, .L6
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 172              		.loc 1 111 9 discriminator 2 view .LVU49
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 173              		.loc 1 111 33 discriminator 2 view .LVU50
 112:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_remove_flag(parent, LV_OBJ_FLAG_IGNORE_LAYOUT);
 174              		.loc 1 112 9 discriminator 2 view .LVU51
 175 005a FFF7FEFF 		bl	lv_obj_class_init_obj
 176              	.LVL16:
 113:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(parent, LV_PCT(100), LV_PCT(100));
 177              		.loc 1 113 9 discriminator 2 view .LVU52
 178 005e 4FF40031 		mov	r1, #131072
 179 0062 2046     		mov	r0, r4
 180 0064 FFF7FEFF 		bl	lv_obj_remove_flag
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 17


 181              	.LVL17:
 114:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 182              		.loc 1 114 9 discriminator 2 view .LVU53
 183 0068 0B49     		ldr	r1, .L16+12
 184 006a 0A46     		mov	r2, r1
 185 006c 2046     		mov	r0, r4
 186 006e FFF7FEFF 		bl	lv_obj_set_size
 187              	.LVL18:
 109:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
 188              		.loc 1 109 21 is_stmt 0 discriminator 2 view .LVU54
 189 0072 0125     		movs	r5, #1
 190 0074 C8E7     		b	.L4
 191              	.LVL19:
 192              	.L6:
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 193              		.loc 1 111 9 is_stmt 1 discriminator 1 view .LVU55
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 194              		.loc 1 111 9 discriminator 1 view .LVU56
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 195              		.loc 1 111 9 discriminator 1 view .LVU57
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 196              		.loc 1 111 9 discriminator 1 view .LVU58
 111:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 197              		.loc 1 111 9 discriminator 1 view .LVU59
 198 0076 FEE7     		b	.L6
 199              	.LVL20:
 200              	.L8:
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 201              		.loc 1 118 5 discriminator 2 view .LVU60
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 202              		.loc 1 118 5 discriminator 2 view .LVU61
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 203              		.loc 1 118 5 discriminator 2 view .LVU62
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 204              		.loc 1 118 5 discriminator 2 view .LVU63
 118:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 205              		.loc 1 118 5 discriminator 2 view .LVU64
 206 0078 FEE7     		b	.L8
 207              	.LVL21:
 208              	.L15:
 124:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 209              		.loc 1 124 21 discriminator 1 view .LVU65
 210 007a 4FF00071 		mov	r1, #33554432
 211 007e 2046     		mov	r0, r4
 212 0080 FFF7FEFF 		bl	lv_obj_add_flag
 213              	.LVL22:
 214 0084 CDE7     		b	.L9
 215              	.L12:
 128:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(mbox->content);
 216              		.loc 1 128 38 is_stmt 0 view .LVU66
 217 0086 0446     		mov	r4, r0
 218              	.LVL23:
 128:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(mbox->content);
 219              		.loc 1 128 38 view .LVU67
 220 0088 DDE7     		b	.L3
 221              	.L17:
 222 008a 00BF     		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 18


 223              	.L16:
 224 008c 00000000 		.word	lv_msgbox_class
 225 0090 00000000 		.word	lv_msgbox_content_class
 226 0094 00000000 		.word	lv_msgbox_backdrop_class
 227 0098 64000020 		.word	536871012
 228              		.cfi_endproc
 229              	.LFE234:
 231              		.section	.text.lv_msgbox_add_title,"ax",%progbits
 232              		.align	1
 233              		.global	lv_msgbox_add_title
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	lv_msgbox_add_title:
 239              	.LVL24:
 240              	.LFB235:
 135:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 136:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_add_title(lv_obj_t * obj, const char * title)
 137:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 241              		.loc 1 137 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		.loc 1 137 1 is_stmt 0 view .LVU69
 246 0000 70B5     		push	{r4, r5, r6, lr}
 247              	.LCFI2:
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 4, -16
 250              		.cfi_offset 5, -12
 251              		.cfi_offset 6, -8
 252              		.cfi_offset 14, -4
 253 0002 0446     		mov	r4, r0
 254 0004 0D46     		mov	r5, r1
 138:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 255              		.loc 1 138 5 is_stmt 1 view .LVU70
 256              	.LVL25:
 139:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(mbox->header == NULL) {
 257              		.loc 1 139 5 view .LVU71
 258              		.loc 1 139 12 is_stmt 0 view .LVU72
 259 0006 C36A     		ldr	r3, [r0, #44]
 260              		.loc 1 139 7 view .LVU73
 261 0008 3BB1     		cbz	r3, .L25
 262              	.LVL26:
 263              	.L19:
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         mbox->header = lv_obj_class_create_obj(&lv_msgbox_header_class, obj);
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 142:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 143:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->header);
 144:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 145:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->header, lv_pct(100), lv_display_get_dpi(lv_obj_get_display(obj)) / 3)
 146:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->header, LV_FLEX_FLOW_ROW);
 147:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_align(mbox->header, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIG
 148:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_move_to_index(mbox->header, 0);
 149:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 150:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 151:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(mbox->title == NULL) {
 264              		.loc 1 151 5 is_stmt 1 view .LVU74
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 19


 265              		.loc 1 151 12 is_stmt 0 view .LVU75
 266 000a A36B     		ldr	r3, [r4, #56]
 267              		.loc 1 151 7 view .LVU76
 268 000c 73B3     		cbz	r3, .L26
 269              	.L23:
 152:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         mbox->title = lv_label_create(mbox->header);
 153:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_grow(mbox->title, 1);
 154:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 155:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 156:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_label_set_text(mbox->title, title);
 270              		.loc 1 156 5 is_stmt 1 view .LVU77
 271 000e 2946     		mov	r1, r5
 272 0010 A06B     		ldr	r0, [r4, #56]
 273 0012 FFF7FEFF 		bl	lv_label_set_text
 274              	.LVL27:
 157:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 158:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return mbox->title;
 275              		.loc 1 158 5 view .LVU78
 276              		.loc 1 158 16 is_stmt 0 view .LVU79
 277 0016 A06B     		ldr	r0, [r4, #56]
 278              	.L18:
 159:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 279              		.loc 1 159 1 view .LVU80
 280 0018 70BD     		pop	{r4, r5, r6, pc}
 281              	.LVL28:
 282              	.L25:
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 283              		.loc 1 140 9 is_stmt 1 view .LVU81
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 284              		.loc 1 140 24 is_stmt 0 view .LVU82
 285 001a 0146     		mov	r1, r0
 286              	.LVL29:
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 287              		.loc 1 140 24 view .LVU83
 288 001c 1748     		ldr	r0, .L27
 289              	.LVL30:
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 290              		.loc 1 140 24 view .LVU84
 291 001e FFF7FEFF 		bl	lv_obj_class_create_obj
 292              	.LVL31:
 140:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 293              		.loc 1 140 22 view .LVU85
 294 0022 E062     		str	r0, [r4, #44]
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 295              		.loc 1 141 9 is_stmt 1 view .LVU86
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 296              		.loc 1 141 9 view .LVU87
 297 0024 0CB3     		cbz	r4, .L21
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 298              		.loc 1 141 9 discriminator 2 view .LVU88
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 299              		.loc 1 141 30 discriminator 2 view .LVU89
 142:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->header);
 300              		.loc 1 142 9 discriminator 2 view .LVU90
 142:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->header);
 301              		.loc 1 142 11 is_stmt 0 discriminator 2 view .LVU91
 302 0026 0028     		cmp	r0, #0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 20


 303 0028 F6D0     		beq	.L18
 143:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 304              		.loc 1 143 9 is_stmt 1 view .LVU92
 305 002a FFF7FEFF 		bl	lv_obj_class_init_obj
 306              	.LVL32:
 145:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->header, LV_FLEX_FLOW_ROW);
 307              		.loc 1 145 9 view .LVU93
 308 002e E66A     		ldr	r6, [r4, #44]
 145:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->header, LV_FLEX_FLOW_ROW);
 309              		.loc 1 145 71 is_stmt 0 view .LVU94
 310 0030 2046     		mov	r0, r4
 311 0032 FFF7FEFF 		bl	lv_obj_get_display
 312              	.LVL33:
 145:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->header, LV_FLEX_FLOW_ROW);
 313              		.loc 1 145 52 view .LVU95
 314 0036 FFF7FEFF 		bl	lv_display_get_dpi
 315              	.LVL34:
 145:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->header, LV_FLEX_FLOW_ROW);
 316              		.loc 1 145 9 view .LVU96
 317 003a 114A     		ldr	r2, .L27+4
 318 003c 82FB0032 		smull	r3, r2, r2, r0
 319 0040 A2EBE072 		sub	r2, r2, r0, asr #31
 320 0044 0F49     		ldr	r1, .L27+8
 321 0046 3046     		mov	r0, r6
 322 0048 FFF7FEFF 		bl	lv_obj_set_size
 323              	.LVL35:
 146:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_align(mbox->header, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIG
 324              		.loc 1 146 9 is_stmt 1 view .LVU97
 325 004c 0021     		movs	r1, #0
 326 004e E06A     		ldr	r0, [r4, #44]
 327 0050 FFF7FEFF 		bl	lv_obj_set_flex_flow
 328              	.LVL36:
 147:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_move_to_index(mbox->header, 0);
 329              		.loc 1 147 9 view .LVU98
 330 0054 0223     		movs	r3, #2
 331 0056 1A46     		mov	r2, r3
 332 0058 0021     		movs	r1, #0
 333 005a E06A     		ldr	r0, [r4, #44]
 334 005c FFF7FEFF 		bl	lv_obj_set_flex_align
 335              	.LVL37:
 148:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 336              		.loc 1 148 9 view .LVU99
 337 0060 0021     		movs	r1, #0
 338 0062 E06A     		ldr	r0, [r4, #44]
 339 0064 FFF7FEFF 		bl	lv_obj_move_to_index
 340              	.LVL38:
 341 0068 CFE7     		b	.L19
 342              	.L21:
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 343              		.loc 1 141 9 discriminator 1 view .LVU100
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 344              		.loc 1 141 9 discriminator 1 view .LVU101
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 345              		.loc 1 141 9 discriminator 1 view .LVU102
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
 346              		.loc 1 141 9 discriminator 1 view .LVU103
 141:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->header == NULL) return NULL;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 21


 347              		.loc 1 141 9 discriminator 1 view .LVU104
 348 006a FEE7     		b	.L21
 349              	.L26:
 152:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_grow(mbox->title, 1);
 350              		.loc 1 152 9 view .LVU105
 152:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_grow(mbox->title, 1);
 351              		.loc 1 152 23 is_stmt 0 view .LVU106
 352 006c E06A     		ldr	r0, [r4, #44]
 353 006e FFF7FEFF 		bl	lv_label_create
 354              	.LVL39:
 152:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_grow(mbox->title, 1);
 355              		.loc 1 152 21 view .LVU107
 356 0072 A063     		str	r0, [r4, #56]
 153:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 357              		.loc 1 153 9 is_stmt 1 view .LVU108
 358 0074 0121     		movs	r1, #1
 359 0076 FFF7FEFF 		bl	lv_obj_set_flex_grow
 360              	.LVL40:
 361 007a C8E7     		b	.L23
 362              	.L28:
 363              		.align	2
 364              	.L27:
 365 007c 00000000 		.word	lv_msgbox_header_class
 366 0080 56555555 		.word	1431655766
 367 0084 64000020 		.word	536871012
 368              		.cfi_endproc
 369              	.LFE235:
 371              		.section	.rodata.lv_msgbox_add_header_button.str1.4,"aMS",%progbits,1
 372              		.align	2
 373              	.LC0:
 374 0000 00       		.ascii	"\000"
 375              		.section	.text.lv_msgbox_add_header_button,"ax",%progbits
 376              		.align	1
 377              		.global	lv_msgbox_add_header_button
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	lv_msgbox_add_header_button:
 383              	.LVL41:
 384              	.LFB236:
 160:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 161:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_add_header_button(lv_obj_t * obj, const void * icon)
 162:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 385              		.loc 1 162 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		.loc 1 162 1 is_stmt 0 view .LVU110
 390 0000 70B5     		push	{r4, r5, r6, lr}
 391              	.LCFI3:
 392              		.cfi_def_cfa_offset 16
 393              		.cfi_offset 4, -16
 394              		.cfi_offset 5, -12
 395              		.cfi_offset 6, -8
 396              		.cfi_offset 14, -4
 397 0002 0446     		mov	r4, r0
 398 0004 0E46     		mov	r6, r1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 22


 163:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 399              		.loc 1 163 5 is_stmt 1 view .LVU111
 400              	.LVL42:
 164:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(mbox->header == NULL) {
 401              		.loc 1 164 5 view .LVU112
 402              		.loc 1 164 12 is_stmt 0 view .LVU113
 403 0006 C36A     		ldr	r3, [r0, #44]
 404              		.loc 1 164 7 view .LVU114
 405 0008 C3B1     		cbz	r3, .L35
 406              	.LVL43:
 407              	.L30:
 165:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_msgbox_add_title(obj, ""); /*Just to push the buttons to the right*/
 166:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 167:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 168:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btn = lv_obj_class_create_obj(&lv_msgbox_header_button_class, mbox->header);
 408              		.loc 1 168 5 is_stmt 1 view .LVU115
 409              		.loc 1 168 22 is_stmt 0 view .LVU116
 410 000a E16A     		ldr	r1, [r4, #44]
 411 000c 0E48     		ldr	r0, .L36
 412 000e FFF7FEFF 		bl	lv_obj_class_create_obj
 413              	.LVL44:
 414 0012 0546     		mov	r5, r0
 415              	.LVL45:
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(obj);
 416              		.loc 1 169 5 is_stmt 1 view .LVU117
 417              		.loc 1 169 5 view .LVU118
 418 0014 B4B1     		cbz	r4, .L32
 419              		.loc 1 169 5 discriminator 2 view .LVU119
 420              		.loc 1 169 26 discriminator 2 view .LVU120
 170:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 421              		.loc 1 170 5 discriminator 2 view .LVU121
 422              		.loc 1 170 7 is_stmt 0 discriminator 2 view .LVU122
 423 0016 78B1     		cbz	r0, .L29
 171:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(btn);
 424              		.loc 1 171 5 is_stmt 1 view .LVU123
 425 0018 FFF7FEFF 		bl	lv_obj_class_init_obj
 426              	.LVL46:
 172:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 173:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(icon) {
 427              		.loc 1 173 5 view .LVU124
 428              		.loc 1 173 7 is_stmt 0 view .LVU125
 429 001c 66B1     		cbz	r6, .L29
 430              	.LBB10:
 174:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_t * img = lv_image_create(btn);
 431              		.loc 1 174 9 is_stmt 1 view .LVU126
 432              		.loc 1 174 26 is_stmt 0 view .LVU127
 433 001e 2846     		mov	r0, r5
 434 0020 FFF7FEFF 		bl	lv_image_create
 435              	.LVL47:
 436 0024 0446     		mov	r4, r0
 437              	.LVL48:
 175:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_image_set_src(img, icon);
 438              		.loc 1 175 9 is_stmt 1 view .LVU128
 439 0026 3146     		mov	r1, r6
 440 0028 FFF7FEFF 		bl	lv_image_set_src
 441              	.LVL49:
 176:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_align(img, LV_ALIGN_CENTER, 0, 0);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 23


 442              		.loc 1 176 9 view .LVU129
 443 002c 0023     		movs	r3, #0
 444 002e 1A46     		mov	r2, r3
 445 0030 0921     		movs	r1, #9
 446 0032 2046     		mov	r0, r4
 447 0034 FFF7FEFF 		bl	lv_obj_align
 448              	.LVL50:
 449              	.L29:
 450              		.loc 1 176 9 is_stmt 0 view .LVU130
 451              	.LBE10:
 177:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 178:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 179:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return btn;
 180:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 452              		.loc 1 180 1 view .LVU131
 453 0038 2846     		mov	r0, r5
 454 003a 70BD     		pop	{r4, r5, r6, pc}
 455              	.LVL51:
 456              	.L35:
 165:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 457              		.loc 1 165 9 is_stmt 1 view .LVU132
 458 003c 0349     		ldr	r1, .L36+4
 459              	.LVL52:
 165:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 460              		.loc 1 165 9 is_stmt 0 view .LVU133
 461 003e FFF7FEFF 		bl	lv_msgbox_add_title
 462              	.LVL53:
 165:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 463              		.loc 1 165 9 view .LVU134
 464 0042 E2E7     		b	.L30
 465              	.LVL54:
 466              	.L32:
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 467              		.loc 1 169 5 is_stmt 1 discriminator 1 view .LVU135
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 468              		.loc 1 169 5 discriminator 1 view .LVU136
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 469              		.loc 1 169 5 discriminator 1 view .LVU137
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 470              		.loc 1 169 5 discriminator 1 view .LVU138
 169:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 471              		.loc 1 169 5 discriminator 1 view .LVU139
 472 0044 FEE7     		b	.L32
 473              	.L37:
 474 0046 00BF     		.align	2
 475              	.L36:
 476 0048 00000000 		.word	lv_msgbox_header_button_class
 477 004c 00000000 		.word	.LC0
 478              		.cfi_endproc
 479              	.LFE236:
 481              		.section	.text.lv_msgbox_add_text,"ax",%progbits
 482              		.align	1
 483              		.global	lv_msgbox_add_text
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	lv_msgbox_add_text:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 24


 489              	.LVL55:
 490              	.LFB237:
 181:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 182:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_add_text(lv_obj_t * obj, const char * text)
 183:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 491              		.loc 1 183 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 183 1 is_stmt 0 view .LVU141
 496 0000 38B5     		push	{r3, r4, r5, lr}
 497              	.LCFI4:
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 3, -16
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 0D46     		mov	r5, r1
 184:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 504              		.loc 1 184 5 is_stmt 1 view .LVU142
 505              	.LVL56:
 185:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 186:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * label = lv_label_create(mbox->content);
 506              		.loc 1 186 5 view .LVU143
 507              		.loc 1 186 24 is_stmt 0 view .LVU144
 508 0004 006B     		ldr	r0, [r0, #48]
 509              	.LVL57:
 510              		.loc 1 186 24 view .LVU145
 511 0006 FFF7FEFF 		bl	lv_label_create
 512              	.LVL58:
 513              		.loc 1 186 24 view .LVU146
 514 000a 0446     		mov	r4, r0
 515              	.LVL59:
 187:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_label_set_text(label, text);
 516              		.loc 1 187 5 is_stmt 1 view .LVU147
 517 000c 2946     		mov	r1, r5
 518 000e FFF7FEFF 		bl	lv_label_set_text
 519              	.LVL60:
 188:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_set_width(label, lv_pct(100));
 520              		.loc 1 188 5 view .LVU148
 521 0012 0349     		ldr	r1, .L40
 522 0014 2046     		mov	r0, r4
 523 0016 FFF7FEFF 		bl	lv_obj_set_width
 524              	.LVL61:
 189:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 190:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return label;
 525              		.loc 1 190 5 view .LVU149
 191:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 526              		.loc 1 191 1 is_stmt 0 view .LVU150
 527 001a 2046     		mov	r0, r4
 528 001c 38BD     		pop	{r3, r4, r5, pc}
 529              	.LVL62:
 530              	.L41:
 531              		.loc 1 191 1 view .LVU151
 532 001e 00BF     		.align	2
 533              	.L40:
 534 0020 64000020 		.word	536871012
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 25


 535              		.cfi_endproc
 536              	.LFE237:
 538              		.section	.text.lv_msgbox_add_footer_button,"ax",%progbits
 539              		.align	1
 540              		.global	lv_msgbox_add_footer_button
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	lv_msgbox_add_footer_button:
 546              	.LVL63:
 547              	.LFB238:
 192:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 193:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_add_footer_button(lv_obj_t * obj, const char * text)
 194:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 548              		.loc 1 194 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		.loc 1 194 1 is_stmt 0 view .LVU153
 553 0000 70B5     		push	{r4, r5, r6, lr}
 554              	.LCFI5:
 555              		.cfi_def_cfa_offset 16
 556              		.cfi_offset 4, -16
 557              		.cfi_offset 5, -12
 558              		.cfi_offset 6, -8
 559              		.cfi_offset 14, -4
 560 0002 0446     		mov	r4, r0
 561 0004 0E46     		mov	r6, r1
 195:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 562              		.loc 1 195 5 is_stmt 1 view .LVU154
 563              	.LVL64:
 196:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(mbox->footer == NULL) {
 564              		.loc 1 196 5 view .LVU155
 565              		.loc 1 196 12 is_stmt 0 view .LVU156
 566 0006 436B     		ldr	r3, [r0, #52]
 567              		.loc 1 196 7 view .LVU157
 568 0008 C3B1     		cbz	r3, .L50
 569              	.LVL65:
 570              	.L43:
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         mbox->footer = lv_obj_class_create_obj(&lv_msgbox_footer_class, obj);
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 199:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 200:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->footer);
 201:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 202:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_flow(mbox->footer, LV_FLEX_FLOW_ROW);
 203:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_align(mbox->footer, LV_FLEX_ALIGN_SPACE_EVENLY, LV_FLEX_ALIGN_CENTER, LV_FL
 204:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 205:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 206:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btn = lv_obj_class_create_obj(&lv_msgbox_footer_button_class, mbox->footer);
 571              		.loc 1 206 5 is_stmt 1 view .LVU158
 572              		.loc 1 206 22 is_stmt 0 view .LVU159
 573 000a 616B     		ldr	r1, [r4, #52]
 574 000c 1748     		ldr	r0, .L51
 575 000e FFF7FEFF 		bl	lv_obj_class_create_obj
 576              	.LVL66:
 577 0012 0546     		mov	r5, r0
 578              	.LVL67:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 26


 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(obj);
 579              		.loc 1 207 5 is_stmt 1 view .LVU160
 580              		.loc 1 207 5 view .LVU161
 581 0014 4CB3     		cbz	r4, .L48
 582              		.loc 1 207 5 discriminator 2 view .LVU162
 583              		.loc 1 207 26 discriminator 2 view .LVU163
 208:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 584              		.loc 1 208 5 discriminator 2 view .LVU164
 585              		.loc 1 208 7 is_stmt 0 discriminator 2 view .LVU165
 586 0016 78B1     		cbz	r0, .L42
 209:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(btn);
 587              		.loc 1 209 5 is_stmt 1 view .LVU166
 588 0018 FFF7FEFF 		bl	lv_obj_class_init_obj
 589              	.LVL68:
 210:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 211:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(text) {
 590              		.loc 1 211 5 view .LVU167
 591              		.loc 1 211 7 is_stmt 0 view .LVU168
 592 001c 66B1     		cbz	r6, .L42
 593              	.LBB11:
 212:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_t * label = lv_label_create(btn);
 594              		.loc 1 212 9 is_stmt 1 view .LVU169
 595              		.loc 1 212 28 is_stmt 0 view .LVU170
 596 001e 2846     		mov	r0, r5
 597 0020 FFF7FEFF 		bl	lv_label_create
 598              	.LVL69:
 599 0024 0446     		mov	r4, r0
 600              	.LVL70:
 213:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(label, text);
 601              		.loc 1 213 9 is_stmt 1 view .LVU171
 602 0026 3146     		mov	r1, r6
 603 0028 FFF7FEFF 		bl	lv_label_set_text
 604              	.LVL71:
 214:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);
 605              		.loc 1 214 9 view .LVU172
 606 002c 0023     		movs	r3, #0
 607 002e 1A46     		mov	r2, r3
 608 0030 0921     		movs	r1, #9
 609 0032 2046     		mov	r0, r4
 610 0034 FFF7FEFF 		bl	lv_obj_align
 611              	.LVL72:
 612              	.L42:
 613              		.loc 1 214 9 is_stmt 0 view .LVU173
 614              	.LBE11:
 215:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 216:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 217:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return btn;
 218:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 615              		.loc 1 218 1 view .LVU174
 616 0038 2846     		mov	r0, r5
 617 003a 70BD     		pop	{r4, r5, r6, pc}
 618              	.LVL73:
 619              	.L50:
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 620              		.loc 1 197 9 is_stmt 1 view .LVU175
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 621              		.loc 1 197 24 is_stmt 0 view .LVU176
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 27


 622 003c 0146     		mov	r1, r0
 623              	.LVL74:
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 624              		.loc 1 197 24 view .LVU177
 625 003e 0C48     		ldr	r0, .L51+4
 626              	.LVL75:
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 627              		.loc 1 197 24 view .LVU178
 628 0040 FFF7FEFF 		bl	lv_obj_class_create_obj
 629              	.LVL76:
 630 0044 0546     		mov	r5, r0
 197:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(obj);
 631              		.loc 1 197 22 view .LVU179
 632 0046 6063     		str	r0, [r4, #52]
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 633              		.loc 1 198 9 is_stmt 1 view .LVU180
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 634              		.loc 1 198 9 view .LVU181
 635 0048 74B1     		cbz	r4, .L45
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 636              		.loc 1 198 9 discriminator 2 view .LVU182
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 637              		.loc 1 198 30 discriminator 2 view .LVU183
 199:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->footer);
 638              		.loc 1 199 9 discriminator 2 view .LVU184
 199:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(mbox->footer);
 639              		.loc 1 199 11 is_stmt 0 discriminator 2 view .LVU185
 640 004a 0028     		cmp	r0, #0
 641 004c F4D0     		beq	.L42
 200:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 642              		.loc 1 200 9 is_stmt 1 view .LVU186
 643 004e FFF7FEFF 		bl	lv_obj_class_init_obj
 644              	.LVL77:
 202:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_flex_align(mbox->footer, LV_FLEX_ALIGN_SPACE_EVENLY, LV_FLEX_ALIGN_CENTER, LV_FL
 645              		.loc 1 202 9 view .LVU187
 646 0052 0021     		movs	r1, #0
 647 0054 606B     		ldr	r0, [r4, #52]
 648 0056 FFF7FEFF 		bl	lv_obj_set_flex_flow
 649              	.LVL78:
 203:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     }
 650              		.loc 1 203 9 view .LVU188
 651 005a 0223     		movs	r3, #2
 652 005c 1A46     		mov	r2, r3
 653 005e 0321     		movs	r1, #3
 654 0060 606B     		ldr	r0, [r4, #52]
 655 0062 FFF7FEFF 		bl	lv_obj_set_flex_align
 656              	.LVL79:
 657 0066 D0E7     		b	.L43
 658              	.L45:
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 659              		.loc 1 198 9 discriminator 1 view .LVU189
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 660              		.loc 1 198 9 discriminator 1 view .LVU190
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 661              		.loc 1 198 9 discriminator 1 view .LVU191
 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 662              		.loc 1 198 9 discriminator 1 view .LVU192
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 28


 198:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****         if(mbox->footer == NULL) return NULL;
 663              		.loc 1 198 9 discriminator 1 view .LVU193
 664 0068 FEE7     		b	.L45
 665              	.LVL80:
 666              	.L48:
 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 667              		.loc 1 207 5 discriminator 2 view .LVU194
 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 668              		.loc 1 207 5 discriminator 2 view .LVU195
 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 669              		.loc 1 207 5 discriminator 2 view .LVU196
 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 670              		.loc 1 207 5 discriminator 2 view .LVU197
 207:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(btn == NULL) return NULL;
 671              		.loc 1 207 5 discriminator 2 view .LVU198
 672 006a FEE7     		b	.L48
 673              	.L52:
 674              		.align	2
 675              	.L51:
 676 006c 00000000 		.word	lv_msgbox_footer_button_class
 677 0070 00000000 		.word	lv_msgbox_footer_class
 678              		.cfi_endproc
 679              	.LFE238:
 681              		.section	.rodata.lv_msgbox_add_close_button.str1.4,"aMS",%progbits,1
 682              		.align	2
 683              	.LC1:
 684 0000 EF808D00 		.ascii	"\357\200\215\000"
 685              		.section	.text.lv_msgbox_add_close_button,"ax",%progbits
 686              		.align	1
 687              		.global	lv_msgbox_add_close_button
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 692              	lv_msgbox_add_close_button:
 693              	.LVL81:
 694              	.LFB239:
 219:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 220:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_add_close_button(lv_obj_t * obj)
 221:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 695              		.loc 1 221 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		.loc 1 221 1 is_stmt 0 view .LVU200
 700 0000 10B5     		push	{r4, lr}
 701              	.LCFI6:
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 4, -8
 704              		.cfi_offset 14, -4
 222:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btn = lv_msgbox_add_header_button(obj, LV_SYMBOL_CLOSE);
 705              		.loc 1 222 5 is_stmt 1 view .LVU201
 706              		.loc 1 222 22 is_stmt 0 view .LVU202
 707 0002 0549     		ldr	r1, .L55
 708 0004 FFF7FEFF 		bl	lv_msgbox_add_header_button
 709              	.LVL82:
 710              		.loc 1 222 22 view .LVU203
 711 0008 0446     		mov	r4, r0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 29


 712              	.LVL83:
 223:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_add_event_cb(btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 713              		.loc 1 223 5 is_stmt 1 view .LVU204
 714 000a 0023     		movs	r3, #0
 715 000c 0722     		movs	r2, #7
 716 000e 0349     		ldr	r1, .L55+4
 717 0010 FFF7FEFF 		bl	lv_obj_add_event_cb
 718              	.LVL84:
 224:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return btn;
 719              		.loc 1 224 5 view .LVU205
 225:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 720              		.loc 1 225 1 is_stmt 0 view .LVU206
 721 0014 2046     		mov	r0, r4
 722 0016 10BD     		pop	{r4, pc}
 723              	.LVL85:
 724              	.L56:
 725              		.loc 1 225 1 view .LVU207
 726              		.align	2
 727              	.L55:
 728 0018 00000000 		.word	.LC1
 729 001c 00000000 		.word	msgbox_close_click_event_cb
 730              		.cfi_endproc
 731              	.LFE239:
 733              		.section	.text.lv_msgbox_get_header,"ax",%progbits
 734              		.align	1
 735              		.global	lv_msgbox_get_header
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	lv_msgbox_get_header:
 741              	.LVL86:
 742              	.LFB240:
 226:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 227:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_header(lv_obj_t * obj)
 228:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 743              		.loc 1 228 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 229:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 748              		.loc 1 229 5 view .LVU209
 749              		.loc 1 229 5 view .LVU210
 750              		.loc 1 229 5 view .LVU211
 230:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 751              		.loc 1 230 5 view .LVU212
 231:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return mbox->header;
 752              		.loc 1 231 5 view .LVU213
 232:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 753              		.loc 1 232 1 is_stmt 0 view .LVU214
 754 0000 C06A     		ldr	r0, [r0, #44]
 755              	.LVL87:
 756              		.loc 1 232 1 view .LVU215
 757 0002 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE240:
 761              		.section	.text.lv_msgbox_get_footer,"ax",%progbits
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 30


 762              		.align	1
 763              		.global	lv_msgbox_get_footer
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 768              	lv_msgbox_get_footer:
 769              	.LVL88:
 770              	.LFB241:
 233:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 234:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_footer(lv_obj_t * obj)
 235:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 771              		.loc 1 235 1 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 236:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 776              		.loc 1 236 5 view .LVU217
 777              		.loc 1 236 5 view .LVU218
 778              		.loc 1 236 5 view .LVU219
 237:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 779              		.loc 1 237 5 view .LVU220
 238:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return mbox->header;
 780              		.loc 1 238 5 view .LVU221
 239:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 781              		.loc 1 239 1 is_stmt 0 view .LVU222
 782 0000 C06A     		ldr	r0, [r0, #44]
 783              	.LVL89:
 784              		.loc 1 239 1 view .LVU223
 785 0002 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE241:
 789              		.section	.text.lv_msgbox_get_content,"ax",%progbits
 790              		.align	1
 791              		.global	lv_msgbox_get_content
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	lv_msgbox_get_content:
 797              	.LVL90:
 798              	.LFB242:
 240:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 241:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_content(lv_obj_t * obj)
 242:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 799              		.loc 1 242 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 243:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 804              		.loc 1 243 5 view .LVU225
 805              		.loc 1 243 5 view .LVU226
 806              		.loc 1 243 5 view .LVU227
 244:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 807              		.loc 1 244 5 view .LVU228
 245:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return mbox->content;
 808              		.loc 1 245 5 view .LVU229
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 31


 246:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 809              		.loc 1 246 1 is_stmt 0 view .LVU230
 810 0000 006B     		ldr	r0, [r0, #48]
 811              	.LVL91:
 812              		.loc 1 246 1 view .LVU231
 813 0002 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE242:
 817              		.section	.text.lv_msgbox_get_title,"ax",%progbits
 818              		.align	1
 819              		.global	lv_msgbox_get_title
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	lv_msgbox_get_title:
 825              	.LVL92:
 826              	.LFB243:
 247:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 248:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_title(lv_obj_t * obj)
 249:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 827              		.loc 1 249 1 is_stmt 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		@ link register save eliminated.
 250:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 832              		.loc 1 250 5 view .LVU233
 833              		.loc 1 250 5 view .LVU234
 834              		.loc 1 250 5 view .LVU235
 251:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 835              		.loc 1 251 5 view .LVU236
 252:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     return mbox->title;
 836              		.loc 1 252 5 view .LVU237
 253:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 837              		.loc 1 253 1 is_stmt 0 view .LVU238
 838 0000 806B     		ldr	r0, [r0, #56]
 839              	.LVL93:
 840              		.loc 1 253 1 view .LVU239
 841 0002 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE243:
 845              		.section	.text.lv_msgbox_close,"ax",%progbits
 846              		.align	1
 847              		.global	lv_msgbox_close
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 852              	lv_msgbox_close:
 853              	.LVL94:
 854              	.LFB244:
 254:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 255:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** void lv_msgbox_close(lv_obj_t * obj)
 256:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 855              		.loc 1 256 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 32


 859              		.loc 1 256 1 is_stmt 0 view .LVU241
 860 0000 10B5     		push	{r4, lr}
 861              	.LCFI7:
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 4, -8
 864              		.cfi_offset 14, -4
 865 0002 0446     		mov	r4, r0
 257:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_delete(lv_obj_get_parent(obj));
 866              		.loc 1 257 5 is_stmt 1 view .LVU242
 867              		.loc 1 257 8 is_stmt 0 view .LVU243
 868 0004 4FF00071 		mov	r1, #33554432
 869 0008 FFF7FEFF 		bl	lv_obj_has_flag
 870              	.LVL95:
 871              		.loc 1 257 7 view .LVU244
 872 000c 28B1     		cbz	r0, .L62
 873              		.loc 1 257 58 is_stmt 1 discriminator 1 view .LVU245
 874 000e 2046     		mov	r0, r4
 875 0010 FFF7FEFF 		bl	lv_obj_get_parent
 876              	.LVL96:
 877 0014 FFF7FEFF 		bl	lv_obj_delete
 878              	.LVL97:
 879              	.L61:
 258:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete(obj);
 259:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 880              		.loc 1 259 1 is_stmt 0 view .LVU246
 881 0018 10BD     		pop	{r4, pc}
 882              	.LVL98:
 883              	.L62:
 258:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete(obj);
 884              		.loc 1 258 10 is_stmt 1 view .LVU247
 885 001a 2046     		mov	r0, r4
 886 001c FFF7FEFF 		bl	lv_obj_delete
 887              	.LVL99:
 888              		.loc 1 259 1 is_stmt 0 view .LVU248
 889 0020 FAE7     		b	.L61
 890              		.cfi_endproc
 891              	.LFE244:
 893              		.section	.text.msgbox_close_click_event_cb,"ax",%progbits
 894              		.align	1
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 899              	msgbox_close_click_event_cb:
 900              	.LVL100:
 901              	.LFB246:
 260:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 261:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** void lv_msgbox_close_async(lv_obj_t * obj)
 262:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 263:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_delete_async(lv_obj_get_parent(obj)
 264:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete_async(obj);
 265:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 266:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 267:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** /**********************
 268:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  *   STATIC FUNCTIONS
 269:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****  **********************/
 270:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 271:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** static void msgbox_close_click_event_cb(lv_event_t * e)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 33


 272:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** {
 902              		.loc 1 272 1 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		.loc 1 272 1 is_stmt 0 view .LVU250
 907 0000 08B5     		push	{r3, lr}
 908              	.LCFI8:
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 3, -8
 911              		.cfi_offset 14, -4
 273:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btn = lv_event_get_current_target(e);
 912              		.loc 1 273 5 is_stmt 1 view .LVU251
 913              		.loc 1 273 22 is_stmt 0 view .LVU252
 914 0002 FFF7FEFF 		bl	lv_event_get_current_target
 915              	.LVL101:
 274:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * mbox = lv_obj_get_parent(lv_obj_get_parent(btn));
 916              		.loc 1 274 5 is_stmt 1 view .LVU253
 917              		.loc 1 274 41 is_stmt 0 view .LVU254
 918 0006 FFF7FEFF 		bl	lv_obj_get_parent
 919              	.LVL102:
 920              		.loc 1 274 23 view .LVU255
 921 000a FFF7FEFF 		bl	lv_obj_get_parent
 922              	.LVL103:
 275:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_close(mbox);
 923              		.loc 1 275 5 is_stmt 1 view .LVU256
 924 000e FFF7FEFF 		bl	lv_msgbox_close
 925              	.LVL104:
 276:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 926              		.loc 1 276 1 is_stmt 0 view .LVU257
 927 0012 08BD     		pop	{r3, pc}
 928              		.cfi_endproc
 929              	.LFE246:
 931              		.section	.text.lv_msgbox_close_async,"ax",%progbits
 932              		.align	1
 933              		.global	lv_msgbox_close_async
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 938              	lv_msgbox_close_async:
 939              	.LVL105:
 940              	.LFB245:
 262:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_delete_async(lv_obj_get_parent(obj)
 941              		.loc 1 262 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_delete_async(lv_obj_get_parent(obj)
 945              		.loc 1 262 1 is_stmt 0 view .LVU259
 946 0000 10B5     		push	{r4, lr}
 947              	.LCFI9:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 14, -4
 951 0002 0446     		mov	r4, r0
 263:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete_async(obj);
 952              		.loc 1 263 5 is_stmt 1 view .LVU260
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 34


 263:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete_async(obj);
 953              		.loc 1 263 8 is_stmt 0 view .LVU261
 954 0004 4FF00071 		mov	r1, #33554432
 955 0008 FFF7FEFF 		bl	lv_obj_has_flag
 956              	.LVL106:
 263:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete_async(obj);
 957              		.loc 1 263 7 view .LVU262
 958 000c 28B1     		cbz	r0, .L68
 263:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c ****     else lv_obj_delete_async(obj);
 959              		.loc 1 263 58 is_stmt 1 discriminator 1 view .LVU263
 960 000e 2046     		mov	r0, r4
 961 0010 FFF7FEFF 		bl	lv_obj_get_parent
 962              	.LVL107:
 963 0014 FFF7FEFF 		bl	lv_obj_delete_async
 964              	.LVL108:
 965              	.L67:
 265:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 966              		.loc 1 265 1 is_stmt 0 view .LVU264
 967 0018 10BD     		pop	{r4, pc}
 968              	.LVL109:
 969              	.L68:
 264:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** }
 970              		.loc 1 264 10 is_stmt 1 view .LVU265
 971 001a 2046     		mov	r0, r4
 972 001c FFF7FEFF 		bl	lv_obj_delete_async
 973              	.LVL110:
 265:Lib/lvgl/src/widgets/msgbox/lv_msgbox.c **** 
 974              		.loc 1 265 1 is_stmt 0 view .LVU266
 975 0020 FAE7     		b	.L67
 976              		.cfi_endproc
 977              	.LFE245:
 979              		.global	lv_msgbox_backdrop_class
 980              		.section	.rodata.str1.4,"aMS",%progbits,1
 981              		.align	2
 982              	.LC2:
 983 0000 6D736762 		.ascii	"msgbox-backdrop\000"
 983      6F782D62 
 983      61636B64 
 983      726F7000 
 984              		.section	.rodata.lv_msgbox_backdrop_class,"a"
 985              		.align	2
 988              	lv_msgbox_backdrop_class:
 989 0000 00000000 		.word	lv_obj_class
 990 0004 00000000 		.space	16
 990      00000000 
 990      00000000 
 990      00000000 
 991 0014 00000000 		.word	.LC2
 992 0018 64000020 		.word	536871012
 993 001c 64000020 		.word	536871012
 994 0020 C0       		.byte	192
 995 0021 02       		.byte	2
 996 0022 00       		.byte	0
 997 0023 00       		.space	1
 998              		.global	lv_msgbox_header_button_class
 999              		.section	.rodata.str1.4
 1000              		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 35


 1001              	.LC3:
 1002 0010 6D736762 		.ascii	"msgbox-header-button\000"
 1002      6F782D68 
 1002      65616465 
 1002      722D6275 
 1002      74746F6E 
 1003              		.section	.rodata.lv_msgbox_header_button_class,"a"
 1004              		.align	2
 1007              	lv_msgbox_header_button_class:
 1008 0000 00000000 		.word	lv_obj_class
 1009 0004 00000000 		.space	16
 1009      00000000 
 1009      00000000 
 1009      00000000 
 1010 0014 10000000 		.word	.LC3
 1011 0018 2B000000 		.word	43
 1012 001c 64000020 		.word	536871012
 1013 0020 C4       		.byte	196
 1014 0021 02       		.byte	2
 1015 0022 00       		.byte	0
 1016 0023 00       		.space	1
 1017              		.global	lv_msgbox_footer_button_class
 1018              		.section	.rodata.str1.4
 1019 0025 000000   		.align	2
 1020              	.LC4:
 1021 0028 6D736762 		.ascii	"msgbox-footer-button\000"
 1021      6F782D66 
 1021      6F6F7465 
 1021      722D6275 
 1021      74746F6E 
 1022              		.section	.rodata.lv_msgbox_footer_button_class,"a"
 1023              		.align	2
 1026              	lv_msgbox_footer_button_class:
 1027 0000 00000000 		.word	lv_obj_class
 1028 0004 00000000 		.space	16
 1028      00000000 
 1028      00000000 
 1028      00000000 
 1029 0014 28000000 		.word	.LC4
 1030 0018 D1070020 		.word	536872913
 1031 001c 64000020 		.word	536871012
 1032 0020 C4       		.byte	196
 1033 0021 02       		.byte	2
 1034 0022 00       		.byte	0
 1035 0023 00       		.space	1
 1036              		.global	lv_msgbox_footer_class
 1037              		.section	.rodata.str1.4
 1038 003d 000000   		.align	2
 1039              	.LC5:
 1040 0040 6D736762 		.ascii	"msgbox-footer\000"
 1040      6F782D66 
 1040      6F6F7465 
 1040      7200
 1041              		.section	.rodata.lv_msgbox_footer_class,"a"
 1042              		.align	2
 1045              	lv_msgbox_footer_class:
 1046 0000 00000000 		.word	lv_obj_class
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 36


 1047 0004 00000000 		.space	16
 1047      00000000 
 1047      00000000 
 1047      00000000 
 1048 0014 40000000 		.word	.LC5
 1049 0018 64000020 		.word	536871012
 1050 001c 2B000000 		.word	43
 1051 0020 C0       		.byte	192
 1052 0021 02       		.byte	2
 1053 0022 00       		.byte	0
 1054 0023 00       		.space	1
 1055              		.global	lv_msgbox_content_class
 1056              		.section	.rodata.str1.4
 1057 004e 0000     		.align	2
 1058              	.LC6:
 1059 0050 6D736762 		.ascii	"msgbox-content\000"
 1059      6F782D63 
 1059      6F6E7465 
 1059      6E7400
 1060              		.section	.rodata.lv_msgbox_content_class,"a"
 1061              		.align	2
 1064              	lv_msgbox_content_class:
 1065 0000 00000000 		.word	lv_obj_class
 1066 0004 00000000 		.space	16
 1066      00000000 
 1066      00000000 
 1066      00000000 
 1067 0014 50000000 		.word	.LC6
 1068 0018 64000020 		.word	536871012
 1069 001c D1070020 		.word	536872913
 1070 0020 C0       		.byte	192
 1071 0021 02       		.byte	2
 1072 0022 00       		.byte	0
 1073 0023 00       		.space	1
 1074              		.global	lv_msgbox_header_class
 1075              		.section	.rodata.str1.4
 1076 005f 00       		.align	2
 1077              	.LC7:
 1078 0060 6D736762 		.ascii	"msgbox-header\000"
 1078      6F782D68 
 1078      65616465 
 1078      7200
 1079              		.section	.rodata.lv_msgbox_header_class,"a"
 1080              		.align	2
 1083              	lv_msgbox_header_class:
 1084 0000 00000000 		.word	lv_obj_class
 1085 0004 00000000 		.space	16
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1086 0014 60000000 		.word	.LC7
 1087 0018 64000020 		.word	536871012
 1088 001c 2B000000 		.word	43
 1089 0020 C0       		.byte	192
 1090 0021 02       		.byte	2
 1091 0022 00       		.byte	0
 1092 0023 00       		.space	1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 37


 1093              		.global	lv_msgbox_class
 1094              		.section	.rodata.str1.4
 1095 006e 0000     		.align	2
 1096              	.LC8:
 1097 0070 6D736762 		.ascii	"msgbox\000"
 1097      6F7800
 1098              		.section	.rodata.lv_msgbox_class,"a"
 1099              		.align	2
 1102              	lv_msgbox_class:
 1103 0000 00000000 		.word	lv_obj_class
 1104 0004 00000000 		.space	16
 1104      00000000 
 1104      00000000 
 1104      00000000 
 1105 0014 70000000 		.word	.LC8
 1106 0018 04010000 		.word	260
 1107 001c D1070020 		.word	536872913
 1108 0020 C0       		.byte	192
 1109 0021 03       		.byte	3
 1110 0022 00       		.byte	0
 1111 0023 00       		.space	1
 1112              		.text
 1113              	.Letext0:
 1114              		.file 4 "e:\\programms\\gnu_mcu_eclipse\\toolchain\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-
 1115              		.file 5 "e:\\programms\\gnu_mcu_eclipse\\toolchain\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-
 1116              		.file 6 "Lib/lvgl/src/widgets/msgbox/../../core/../misc/lv_types.h"
 1117              		.file 7 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj.h"
 1118              		.file 8 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_class.h"
 1119              		.file 9 "Lib/lvgl/src/widgets/msgbox/../../core/../indev/../core/lv_group.h"
 1120              		.file 10 "Lib/lvgl/src/widgets/msgbox/../../core/../display/../misc/lv_event.h"
 1121              		.file 11 "c:\\users\\alex\\eclipse-workspace\\lvgs_test\\lib\\lvgl\\src\\misc\\lv_area.h"
 1122              		.file 12 "Lib/lvgl/src/widgets/msgbox/../../core/../misc/lv_ll.h"
 1123              		.file 13 "Lib/lvgl/src/widgets/msgbox/../../core/../misc/../layouts/flex/lv_flex.h"
 1124              		.file 14 "Lib/lvgl/src/widgets/msgbox/../../core/../misc/lv_style.h"
 1125              		.file 15 "Lib/lvgl/src/widgets/msgbox/../../core/../display/../misc/lv_array.h"
 1126              		.file 16 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_style.h"
 1127              		.file 17 "Lib/lvgl/src/widgets/msgbox/lv_msgbox.h"
 1128              		.file 18 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_tree.h"
 1129              		.file 19 "Lib/lvgl/src/widgets/msgbox/../../core/lv_obj_event.h"
 1130              		.file 20 "Lib/lvgl/src/widgets/msgbox/../image/lv_image.h"
 1131              		.file 21 "Lib/lvgl/src/widgets/msgbox/../label/lv_label.h"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 lv_msgbox.c
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:21     .text.lv_layer_top:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:26     .text.lv_layer_top:00000000 lv_layer_top
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:50     .text.lv_msgbox_create:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:56     .text.lv_msgbox_create:00000000 lv_msgbox_create
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:224    .text.lv_msgbox_create:0000008c $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1102   .rodata.lv_msgbox_class:00000000 lv_msgbox_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1064   .rodata.lv_msgbox_content_class:00000000 lv_msgbox_content_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:988    .rodata.lv_msgbox_backdrop_class:00000000 lv_msgbox_backdrop_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:232    .text.lv_msgbox_add_title:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:238    .text.lv_msgbox_add_title:00000000 lv_msgbox_add_title
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:365    .text.lv_msgbox_add_title:0000007c $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1083   .rodata.lv_msgbox_header_class:00000000 lv_msgbox_header_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:372    .rodata.lv_msgbox_add_header_button.str1.4:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:376    .text.lv_msgbox_add_header_button:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:382    .text.lv_msgbox_add_header_button:00000000 lv_msgbox_add_header_button
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:476    .text.lv_msgbox_add_header_button:00000048 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1007   .rodata.lv_msgbox_header_button_class:00000000 lv_msgbox_header_button_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:482    .text.lv_msgbox_add_text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:488    .text.lv_msgbox_add_text:00000000 lv_msgbox_add_text
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:534    .text.lv_msgbox_add_text:00000020 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:539    .text.lv_msgbox_add_footer_button:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:545    .text.lv_msgbox_add_footer_button:00000000 lv_msgbox_add_footer_button
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:676    .text.lv_msgbox_add_footer_button:0000006c $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1026   .rodata.lv_msgbox_footer_button_class:00000000 lv_msgbox_footer_button_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1045   .rodata.lv_msgbox_footer_class:00000000 lv_msgbox_footer_class
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:682    .rodata.lv_msgbox_add_close_button.str1.4:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:686    .text.lv_msgbox_add_close_button:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:692    .text.lv_msgbox_add_close_button:00000000 lv_msgbox_add_close_button
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:728    .text.lv_msgbox_add_close_button:00000018 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:899    .text.msgbox_close_click_event_cb:00000000 msgbox_close_click_event_cb
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:734    .text.lv_msgbox_get_header:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:740    .text.lv_msgbox_get_header:00000000 lv_msgbox_get_header
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:762    .text.lv_msgbox_get_footer:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:768    .text.lv_msgbox_get_footer:00000000 lv_msgbox_get_footer
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:790    .text.lv_msgbox_get_content:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:796    .text.lv_msgbox_get_content:00000000 lv_msgbox_get_content
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:818    .text.lv_msgbox_get_title:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:824    .text.lv_msgbox_get_title:00000000 lv_msgbox_get_title
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:846    .text.lv_msgbox_close:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:852    .text.lv_msgbox_close:00000000 lv_msgbox_close
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:894    .text.msgbox_close_click_event_cb:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:932    .text.lv_msgbox_close_async:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:938    .text.lv_msgbox_close_async:00000000 lv_msgbox_close_async
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:981    .rodata.str1.4:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:985    .rodata.lv_msgbox_backdrop_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1004   .rodata.lv_msgbox_header_button_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1023   .rodata.lv_msgbox_footer_button_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1042   .rodata.lv_msgbox_footer_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1061   .rodata.lv_msgbox_content_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1080   .rodata.lv_msgbox_header_class:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s:1099   .rodata.lv_msgbox_class:00000000 $d

UNDEFINED SYMBOLS
lv_display_get_default
lv_display_get_layer_top
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccEcgb3m.s 			page 39


lv_obj_class_create_obj
lv_obj_class_init_obj
lv_obj_set_flex_flow
lv_obj_align
lv_obj_remove_flag
lv_obj_set_size
lv_obj_add_flag
lv_label_set_text
lv_obj_get_display
lv_display_get_dpi
lv_obj_set_flex_align
lv_obj_move_to_index
lv_label_create
lv_obj_set_flex_grow
lv_image_create
lv_image_set_src
lv_obj_set_width
lv_obj_add_event_cb
lv_obj_has_flag
lv_obj_get_parent
lv_obj_delete
lv_event_get_current_target
lv_obj_delete_async
lv_obj_class
