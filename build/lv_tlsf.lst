ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_tlsf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Lib/lvgl/src/stdlib/builtin/lv_tlsf.c"
  20              		.section	.text.block_size,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	block_size:
  27              	.LVL0:
  28              	.LFB4:
   1:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include "../../lv_conf_internal.h"
   2:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if LV_USE_STDLIB_MALLOC == LV_STDLIB_BUILTIN
   3:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
   4:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include <limits.h>
   5:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include "lv_tlsf.h"
   6:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include "../../stdlib/lv_string.h"
   7:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include "../../misc/lv_log.h"
   8:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include "../../misc/lv_assert.h"
   9:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  10:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #undef  printf
  11:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define printf LV_LOG_ERROR
  12:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  13:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE (LV_MEM_SIZE + LV_MEM_POOL_EXPAND_SIZE)
  14:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  15:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if !defined(_DEBUG)
  16:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define _DEBUG 0
  17:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
  18:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  19:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined(__cplusplus)
  20:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define tlsf_decl inline
  21:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
  22:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define tlsf_decl static
  23:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
  24:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  25:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
  26:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  27:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **
  28:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  29:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  30:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 2


  31:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
  32:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** routines.
  33:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **
  34:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  35:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  36:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  37:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  38:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **
  39:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  40:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  41:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
  42:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  43:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
  44:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  45:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  46:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
  47:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  48:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     || defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  49:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define TLSF_64BIT
  50:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
  51:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  52:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
  53:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  54:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** or if n is zero, returns zero.
  55:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
  56:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #ifdef TLSF_64BIT
  57:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FL
  58:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
  59:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define TLSF_FLS(n) TLSF_FLS32(n)
  60:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
  61:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  62:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  63:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  64:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  65:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  66:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  67:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  68:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  69:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
  70:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Returns round up value of log2(n).
  71:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Note: it is used at compile time.
  72:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
  73:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  74:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  75:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
  76:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  77:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  78:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
  79:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  80:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     && defined (__GNUC_PATCHLEVEL__)
  81:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  82:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (__SNC__)
  83:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* SNC for Playstation 3. */
  84:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  85:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  86:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
  87:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const unsigned int reverse = word & (~word + 1);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 3


  88:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = 32 - __builtin_clz(reverse);
  89:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
  90:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
  91:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  92:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
  93:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  94:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  95:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
  96:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return __builtin_ffs(word) - 1;
  97:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
  98:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
  99:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 100:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 101:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 102:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = word ? 32 - __builtin_clz(word) : 0;
 104:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 105:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 106:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 107:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 108:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 109:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 110:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include <intrin.h>
 111:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 112:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 113:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 114:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 115:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 116:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 117:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     unsigned long index;
 118:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return _BitScanReverse(&index, word) ? index : -1;
 119:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 120:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 121:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 122:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 123:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     unsigned long index;
 124:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return _BitScanForward(&index, word) ? index : -1;
 125:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 126:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 127:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 128:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 129:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 130:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include <ppcintrinsics.h>
 131:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 132:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 133:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 134:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = 32 - _CountLeadingZeros(word);
 135:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 136:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 137:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 138:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 139:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 140:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const unsigned int reverse = word & (~word + 1);
 141:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = 32 - _CountLeadingZeros(reverse);
 142:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 143:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 144:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 4


 145:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
 146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
 147:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 148:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 149:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 150:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const unsigned int reverse = word & (~word + 1);
 151:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = 32 - __clz(reverse);
 152:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 153:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 154:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 155:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 156:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 157:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = word ? 32 - __clz(word) : 0;
 158:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 159:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 160:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 161:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #elif defined (__ghs__)
 162:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Green Hills support for PowerPC */
 163:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 164:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #include <ppc_ghs.h>
 165:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 166:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 167:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 168:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const unsigned int reverse = word & (~word + 1);
 169:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = 32 - __CLZ32(reverse);
 170:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 171:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 172:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 173:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 174:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 175:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = word ? 32 - __CLZ32(word) : 0;
 176:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 177:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 178:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 179:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
 180:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Fall back to generic implementation. */
 181:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 182:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 183:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 184:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 185:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const unsigned int reverse = word & (~word + 1);
 186:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return TLSF_FLS32(reverse) - 1;
 187:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 188:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 189:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 190:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 191:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return TLSF_FLS32(word) - 1;
 192:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 193:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 194:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 195:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 196:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 197:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (TLSF_64BIT)
 198:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 199:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 200:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int high = (int)(size >> 32);
 201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int bits = 0;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 5


 202:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(high) {
 203:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         bits = 32 + tlsf_fls(high);
 204:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 205:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     else {
 206:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         bits = tlsf_fls((int)size & 0xffffffff);
 207:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 208:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 209:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bits;
 210:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 211:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
 212:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 213:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 214:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 215:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #undef tlsf_decl
 216:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 217:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 218:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Constants.
 219:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 220:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Public constants: may be modified. */
 222:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** enum tlsf_public {
 223:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* log2 of number of linear subdivisions of block sizes. Larger
 224:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** values require more memory in the control structure. Values of
 225:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** 4 or 5 are typical.
 226:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
 227:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     SL_INDEX_COUNT_LOG2 = 5,
 228:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** };
 229:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 230:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Private constants: do not modify. */
 231:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** enum tlsf_private {
 232:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (TLSF_64BIT)
 233:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* All allocation sizes and addresses are aligned to 8 bytes. */
 234:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ALIGN_SIZE_LOG2 = 3,
 235:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
 236:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* All allocation sizes and addresses are aligned to 4 bytes. */
 237:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ALIGN_SIZE_LOG2 = 2,
 238:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 239:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 240:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 241:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
 242:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 243:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** However, because we linearly subdivide the second-level lists, and
 244:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** our minimum size granularity is 4 bytes, it doesn't make sense to
 245:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 246:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 247:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** trying to split size ranges into more slots than we have available.
 248:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** Instead, we calculate the minimum threshold size, and place all
 249:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** blocks below that size into the 0th first-level list.
 250:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
 251:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 252:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 253:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 254:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 255:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
 256:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** TODO: We can increase this to support larger sizes, at the expense
 257:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** of more overhead in the TLSF structure.
 258:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 6


 259:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     FL_INDEX_MAX = 32,
 260:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
 261:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     FL_INDEX_MAX = 30,
 262:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 263:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 264:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 265:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 266:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 267:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 268:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** };
 269:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 270:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 271:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Cast and min/max macros.
 272:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 273:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 274:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_cast(t, exp)   ((t) (exp))
 275:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_min(a, b)      ((a) < (b) ? (a) : (b))
 276:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_max(a, b)      ((a) > (b) ? (a) : (b))
 277:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 278:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 279:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 280:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 281:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 282:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 283:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if !defined (tlsf_assert)
 284:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     #define tlsf_assert assert
 285:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 286:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 287:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 288:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Static assertion mechanism.
 289:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 290:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 291:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 292:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 293:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 294:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 295:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 296:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 297:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 298:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 299:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 300:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 301:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 302:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 303:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 304:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 305:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 306:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 307:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 308:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Data structures and associated constants.
 309:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 310:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 311:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 312:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Block header structure.
 313:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **
 314:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** There are several implementation subtleties involved:
 315:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 7


 316:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 317:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 318:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **   simplify the implementation.
 319:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 320:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 321:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** typedef struct block_header_t {
 322:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Points to the previous physical block. */
 323:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     struct block_header_t * prev_phys_block;
 324:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 325:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* The size of this block, excluding the block header. */
 326:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     size_t size;
 327:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 328:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Next and previous free blocks. */
 329:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     struct block_header_t * next_free;
 330:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     struct block_header_t * prev_free;
 331:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** } block_header_t;
 332:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 333:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 334:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 335:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 336:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 337:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 338:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 339:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 340:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 341:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 342:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 343:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 344:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 345:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 346:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 347:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 348:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 349:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_start_offset =
 350:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     offsetof(block_header_t, size) + sizeof(size_t);
 351:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 352:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 353:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 354:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 355:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** bits for FL_INDEX.
 356:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 357:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_size_min =
 358:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sizeof(block_header_t) - sizeof(block_header_t *);
 359:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 360:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 361:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* The TLSF control structure. */
 362:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** typedef struct control_t {
 363:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Empty lists point at this block to indicate they are free. */
 364:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t block_null;
 365:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 366:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Bitmaps for free lists. */
 367:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     unsigned int fl_bitmap;
 368:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     unsigned int sl_bitmap[FL_INDEX_COUNT];
 369:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 370:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Head of free lists. */
 371:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 372:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** } control_t;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 8


 373:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 374:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 375:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 376:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 377:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 378:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** block_header_t member functions.
 379:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 380:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 381:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static size_t block_size(const block_header_t * block)
 382:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
  29              		.loc 1 382 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 383:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  34              		.loc 1 383 5 view .LVU1
  35              		.loc 1 383 17 is_stmt 0 view .LVU2
  36 0000 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
 384:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
  38              		.loc 1 384 1 view .LVU3
  39 0002 20F00300 		bic	r0, r0, #3
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE4:
  44              		.section	.text.block_set_size,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	block_set_size:
  51              	.LVL2:
  52              	.LFB5:
 385:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 386:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_set_size(block_header_t * block, size_t size)
 387:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
  53              		.loc 1 387 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 388:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t oldsize = block->size;
  58              		.loc 1 388 5 view .LVU5
  59              		.loc 1 388 18 is_stmt 0 view .LVU6
  60 0000 4368     		ldr	r3, [r0, #4]
  61              	.LVL3:
 389:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  62              		.loc 1 389 5 is_stmt 1 view .LVU7
  63              		.loc 1 389 35 is_stmt 0 view .LVU8
  64 0002 03F00303 		and	r3, r3, #3
  65              	.LVL4:
  66              		.loc 1 389 24 view .LVU9
  67 0006 0B43     		orrs	r3, r3, r1
  68              		.loc 1 389 17 view .LVU10
  69 0008 4360     		str	r3, [r0, #4]
  70              	.LVL5:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 9


 390:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
  71              		.loc 1 390 1 view .LVU11
  72 000a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE5:
  76              		.section	.text.block_is_last,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	block_is_last:
  83              	.LVL6:
  84              	.LFB6:
 391:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 392:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static int block_is_last(const block_header_t * block)
 393:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
  85              		.loc 1 393 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 393 1 is_stmt 0 view .LVU13
  90 0000 08B5     		push	{r3, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 394:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_size(block) == 0;
  95              		.loc 1 394 5 is_stmt 1 view .LVU14
  96              		.loc 1 394 12 is_stmt 0 view .LVU15
  97 0002 FFF7FEFF 		bl	block_size
  98              	.LVL7:
 395:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
  99              		.loc 1 395 1 view .LVU16
 100 0006 B0FA80F0 		clz	r0, r0
 101 000a 4009     		lsrs	r0, r0, #5
 102 000c 08BD     		pop	{r3, pc}
 103              		.cfi_endproc
 104              	.LFE6:
 106              		.section	.text.block_is_free,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	block_is_free:
 113              	.LVL8:
 114              	.LFB7:
 396:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 397:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static int block_is_free(const block_header_t * block)
 398:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 115              		.loc 1 398 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 399:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(int, block->size & block_header_free_bit);
 120              		.loc 1 399 5 view .LVU18
 121              		.loc 1 399 12 is_stmt 0 view .LVU19
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 10


 122 0000 4068     		ldr	r0, [r0, #4]
 123              	.LVL9:
 400:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 124              		.loc 1 400 1 view .LVU20
 125 0002 00F00100 		and	r0, r0, #1
 126 0006 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE7:
 130              		.section	.text.block_set_free,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	block_set_free:
 137              	.LVL10:
 138              	.LFB8:
 401:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 402:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_set_free(block_header_t * block)
 403:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 139              		.loc 1 403 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 404:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->size |= block_header_free_bit;
 144              		.loc 1 404 5 view .LVU22
 145              		.loc 1 404 10 is_stmt 0 view .LVU23
 146 0000 4368     		ldr	r3, [r0, #4]
 147              		.loc 1 404 17 view .LVU24
 148 0002 43F00103 		orr	r3, r3, #1
 149 0006 4360     		str	r3, [r0, #4]
 405:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 150              		.loc 1 405 1 view .LVU25
 151 0008 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE8:
 155              		.section	.text.block_set_used,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	block_set_used:
 162              	.LVL11:
 163              	.LFB9:
 406:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 407:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_set_used(block_header_t * block)
 408:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 164              		.loc 1 408 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 409:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->size &= ~block_header_free_bit;
 169              		.loc 1 409 5 view .LVU27
 170              		.loc 1 409 10 is_stmt 0 view .LVU28
 171 0000 4368     		ldr	r3, [r0, #4]
 172              		.loc 1 409 17 view .LVU29
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 11


 173 0002 23F00103 		bic	r3, r3, #1
 174 0006 4360     		str	r3, [r0, #4]
 410:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 175              		.loc 1 410 1 view .LVU30
 176 0008 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE9:
 180              		.section	.text.block_is_prev_free,"ax",%progbits
 181              		.align	1
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	block_is_prev_free:
 187              	.LVL12:
 188              	.LFB10:
 411:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 412:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static int block_is_prev_free(const block_header_t * block)
 413:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 189              		.loc 1 413 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 414:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(int, block->size & block_header_prev_free_bit);
 194              		.loc 1 414 5 view .LVU32
 195              		.loc 1 414 12 is_stmt 0 view .LVU33
 196 0000 4068     		ldr	r0, [r0, #4]
 197              	.LVL13:
 415:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 198              		.loc 1 415 1 view .LVU34
 199 0002 00F00200 		and	r0, r0, #2
 200 0006 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE10:
 204              		.section	.text.block_set_prev_free,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 210              	block_set_prev_free:
 211              	.LVL14:
 212              	.LFB11:
 416:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 417:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_set_prev_free(block_header_t * block)
 418:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 213              		.loc 1 418 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 419:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->size |= block_header_prev_free_bit;
 218              		.loc 1 419 5 view .LVU36
 219              		.loc 1 419 10 is_stmt 0 view .LVU37
 220 0000 4368     		ldr	r3, [r0, #4]
 221              		.loc 1 419 17 view .LVU38
 222 0002 43F00203 		orr	r3, r3, #2
 223 0006 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 12


 420:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 224              		.loc 1 420 1 view .LVU39
 225 0008 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE11:
 229              		.section	.text.block_set_prev_used,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	block_set_prev_used:
 236              	.LVL15:
 237              	.LFB12:
 421:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 422:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_set_prev_used(block_header_t * block)
 423:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 238              		.loc 1 423 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 424:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->size &= ~block_header_prev_free_bit;
 243              		.loc 1 424 5 view .LVU41
 244              		.loc 1 424 10 is_stmt 0 view .LVU42
 245 0000 4368     		ldr	r3, [r0, #4]
 246              		.loc 1 424 17 view .LVU43
 247 0002 23F00203 		bic	r3, r3, #2
 248 0006 4360     		str	r3, [r0, #4]
 425:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 249              		.loc 1 425 1 view .LVU44
 250 0008 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE12:
 254              		.section	.text.block_from_ptr,"ax",%progbits
 255              		.align	1
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	block_from_ptr:
 261              	.LVL16:
 262              	.LFB13:
 426:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 427:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_from_ptr(const void * ptr)
 428:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 263              		.loc 1 428 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 429:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(block_header_t *,
 268              		.loc 1 429 5 view .LVU46
 430:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                      tlsf_cast(unsigned char *, ptr) - block_start_offset);
 431:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 269              		.loc 1 431 1 is_stmt 0 view .LVU47
 270 0000 0838     		subs	r0, r0, #8
 271              	.LVL17:
 272              		.loc 1 431 1 view .LVU48
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 13


 273 0002 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE13:
 277              		.section	.text.block_to_ptr,"ax",%progbits
 278              		.align	1
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	block_to_ptr:
 284              	.LVL18:
 285              	.LFB14:
 432:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 433:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void * block_to_ptr(const block_header_t * block)
 434:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 286              		.loc 1 434 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 435:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(void *,
 291              		.loc 1 435 5 view .LVU50
 436:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                      tlsf_cast(unsigned char *, block) + block_start_offset);
 437:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 292              		.loc 1 437 1 is_stmt 0 view .LVU51
 293 0000 0830     		adds	r0, r0, #8
 294              	.LVL19:
 295              		.loc 1 437 1 view .LVU52
 296 0002 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE14:
 300              		.section	.text.offset_to_block,"ax",%progbits
 301              		.align	1
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	offset_to_block:
 307              	.LVL20:
 308              	.LFB15:
 438:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 439:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Return location of next block after block of given size. */
 440:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * offset_to_block(const void * ptr, size_t size)
 441:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 309              		.loc 1 441 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 442:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(block_header_t *, tlsf_cast(tlsfptr_t, ptr) + size);
 314              		.loc 1 442 5 view .LVU54
 443:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 315              		.loc 1 443 1 is_stmt 0 view .LVU55
 316 0000 0844     		add	r0, r0, r1
 317              	.LVL21:
 318              		.loc 1 443 1 view .LVU56
 319 0002 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE15:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 14


 323              		.section	.text.block_prev,"ax",%progbits
 324              		.align	1
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	block_prev:
 330              	.LVL22:
 331              	.LFB16:
 444:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 445:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Return location of previous block. */
 446:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_prev(const block_header_t * block)
 447:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 332              		.loc 1 447 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		.loc 1 447 1 is_stmt 0 view .LVU58
 337 0000 10B5     		push	{r4, lr}
 338              	.LCFI1:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 342 0002 0446     		mov	r4, r0
 448:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 343              		.loc 1 448 5 is_stmt 1 view .LVU59
 344              		.loc 1 448 5 view .LVU60
 345 0004 FFF7FEFF 		bl	block_is_prev_free
 346              	.LVL23:
 347              		.loc 1 448 5 is_stmt 0 view .LVU61
 348 0008 00B9     		cbnz	r0, .L15
 349              	.L16:
 350              		.loc 1 448 5 is_stmt 1 discriminator 1 view .LVU62
 351              		.loc 1 448 5 discriminator 1 view .LVU63
 352              		.loc 1 448 5 discriminator 1 view .LVU64
 353              		.loc 1 448 5 discriminator 1 view .LVU65
 354              		.loc 1 448 5 discriminator 1 view .LVU66
 355 000a FEE7     		b	.L16
 356              	.L15:
 357              		.loc 1 448 5 discriminator 4 view .LVU67
 449:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block->prev_phys_block;
 358              		.loc 1 449 5 discriminator 4 view .LVU68
 450:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 359              		.loc 1 450 1 is_stmt 0 discriminator 4 view .LVU69
 360 000c 2068     		ldr	r0, [r4]
 361 000e 10BD     		pop	{r4, pc}
 362              		.loc 1 450 1 discriminator 4 view .LVU70
 363              		.cfi_endproc
 364              	.LFE16:
 366              		.section	.text.block_next,"ax",%progbits
 367              		.align	1
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	block_next:
 373              	.LVL24:
 374              	.LFB17:
 451:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 15


 452:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Return location of next existing block. */
 453:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_next(const block_header_t * block)
 454:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 375              		.loc 1 454 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		.loc 1 454 1 is_stmt 0 view .LVU72
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              	.LCFI2:
 382              		.cfi_def_cfa_offset 16
 383              		.cfi_offset 3, -16
 384              		.cfi_offset 4, -12
 385              		.cfi_offset 5, -8
 386              		.cfi_offset 14, -4
 387 0002 0446     		mov	r4, r0
 455:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = offset_to_block(block_to_ptr(block),
 388              		.loc 1 455 5 is_stmt 1 view .LVU73
 389              		.loc 1 455 45 is_stmt 0 view .LVU74
 390 0004 FFF7FEFF 		bl	block_to_ptr
 391              	.LVL25:
 392              		.loc 1 455 45 view .LVU75
 393 0008 0546     		mov	r5, r0
 456:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                                             block_size(block) - block_header_overhead);
 394              		.loc 1 456 45 view .LVU76
 395 000a 2046     		mov	r0, r4
 396 000c FFF7FEFF 		bl	block_size
 397              	.LVL26:
 455:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = offset_to_block(block_to_ptr(block),
 398              		.loc 1 455 29 view .LVU77
 399 0010 011F     		subs	r1, r0, #4
 400 0012 2846     		mov	r0, r5
 401 0014 FFF7FEFF 		bl	offset_to_block
 402              	.LVL27:
 403 0018 0546     		mov	r5, r0
 404              	.LVL28:
 457:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_last(block));
 405              		.loc 1 457 5 is_stmt 1 view .LVU78
 406              		.loc 1 457 5 view .LVU79
 407 001a 2046     		mov	r0, r4
 408              	.LVL29:
 409              		.loc 1 457 5 is_stmt 0 view .LVU80
 410 001c FFF7FEFF 		bl	block_is_last
 411              	.LVL30:
 412 0020 00B1     		cbz	r0, .L18
 413              	.L20:
 414              		.loc 1 457 5 is_stmt 1 discriminator 1 view .LVU81
 415              		.loc 1 457 5 discriminator 1 view .LVU82
 416              		.loc 1 457 5 discriminator 1 view .LVU83
 417              		.loc 1 457 5 discriminator 1 view .LVU84
 418              		.loc 1 457 5 discriminator 1 view .LVU85
 419 0022 FEE7     		b	.L20
 420              	.L18:
 458:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return next;
 459:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 421              		.loc 1 459 1 is_stmt 0 view .LVU86
 422 0024 2846     		mov	r0, r5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 16


 423 0026 38BD     		pop	{r3, r4, r5, pc}
 424              		.loc 1 459 1 view .LVU87
 425              		.cfi_endproc
 426              	.LFE17:
 428              		.section	.text.block_link_next,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	block_link_next:
 435              	.LVL31:
 436              	.LFB18:
 460:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 461:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 462:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_link_next(block_header_t * block)
 463:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 437              		.loc 1 463 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		.loc 1 463 1 is_stmt 0 view .LVU89
 442 0000 10B5     		push	{r4, lr}
 443              	.LCFI3:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 447 0002 0446     		mov	r4, r0
 464:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_next(block);
 448              		.loc 1 464 5 is_stmt 1 view .LVU90
 449              		.loc 1 464 29 is_stmt 0 view .LVU91
 450 0004 FFF7FEFF 		bl	block_next
 451              	.LVL32:
 465:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_phys_block = block;
 452              		.loc 1 465 5 is_stmt 1 view .LVU92
 453              		.loc 1 465 27 is_stmt 0 view .LVU93
 454 0008 0460     		str	r4, [r0]
 466:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return next;
 455              		.loc 1 466 5 is_stmt 1 view .LVU94
 467:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 456              		.loc 1 467 1 is_stmt 0 view .LVU95
 457 000a 10BD     		pop	{r4, pc}
 458              		.loc 1 467 1 view .LVU96
 459              		.cfi_endproc
 460              	.LFE18:
 462              		.section	.text.block_mark_as_free,"ax",%progbits
 463              		.align	1
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	block_mark_as_free:
 469              	.LVL33:
 470              	.LFB19:
 468:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 469:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_mark_as_free(block_header_t * block)
 470:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 471              		.loc 1 470 1 is_stmt 1 view -0
 472              		.cfi_startproc
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 17


 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		.loc 1 470 1 is_stmt 0 view .LVU98
 476 0000 10B5     		push	{r4, lr}
 477              	.LCFI4:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 14, -4
 481 0002 0446     		mov	r4, r0
 471:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Link the block to the next block, first. */
 472:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_link_next(block);
 482              		.loc 1 472 5 is_stmt 1 view .LVU99
 483              		.loc 1 472 29 is_stmt 0 view .LVU100
 484 0004 FFF7FEFF 		bl	block_link_next
 485              	.LVL34:
 473:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_prev_free(next);
 486              		.loc 1 473 5 is_stmt 1 view .LVU101
 487 0008 FFF7FEFF 		bl	block_set_prev_free
 488              	.LVL35:
 474:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_free(block);
 489              		.loc 1 474 5 view .LVU102
 490 000c 2046     		mov	r0, r4
 491 000e FFF7FEFF 		bl	block_set_free
 492              	.LVL36:
 475:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 493              		.loc 1 475 1 is_stmt 0 view .LVU103
 494 0012 10BD     		pop	{r4, pc}
 495              		.loc 1 475 1 view .LVU104
 496              		.cfi_endproc
 497              	.LFE19:
 499              		.section	.text.block_mark_as_used,"ax",%progbits
 500              		.align	1
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	block_mark_as_used:
 506              	.LVL37:
 507              	.LFB20:
 476:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 477:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_mark_as_used(block_header_t * block)
 478:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 508              		.loc 1 478 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		.loc 1 478 1 is_stmt 0 view .LVU106
 513 0000 10B5     		push	{r4, lr}
 514              	.LCFI5:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 518 0002 0446     		mov	r4, r0
 479:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_next(block);
 519              		.loc 1 479 5 is_stmt 1 view .LVU107
 520              		.loc 1 479 29 is_stmt 0 view .LVU108
 521 0004 FFF7FEFF 		bl	block_next
 522              	.LVL38:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 18


 480:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_prev_used(next);
 523              		.loc 1 480 5 is_stmt 1 view .LVU109
 524 0008 FFF7FEFF 		bl	block_set_prev_used
 525              	.LVL39:
 481:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_used(block);
 526              		.loc 1 481 5 view .LVU110
 527 000c 2046     		mov	r0, r4
 528 000e FFF7FEFF 		bl	block_set_used
 529              	.LVL40:
 482:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 530              		.loc 1 482 1 is_stmt 0 view .LVU111
 531 0012 10BD     		pop	{r4, pc}
 532              		.loc 1 482 1 view .LVU112
 533              		.cfi_endproc
 534              	.LFE20:
 536              		.section	.text.align_up,"ax",%progbits
 537              		.align	1
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 542              	align_up:
 543              	.LVL41:
 544              	.LFB21:
 483:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 484:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 485:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 545              		.loc 1 485 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 486:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 550              		.loc 1 486 5 view .LVU114
 551              		.loc 1 486 5 view .LVU115
 552 0000 4B1E     		subs	r3, r1, #1
 553 0002 0B42     		tst	r3, r1
 554 0004 00D0     		beq	.L29
 555              	.L30:
 556              		.loc 1 486 5 discriminator 1 view .LVU116
 557              		.loc 1 486 5 discriminator 1 view .LVU117
 558              		.loc 1 486 5 discriminator 1 view .LVU118
 559              		.loc 1 486 5 discriminator 1 view .LVU119
 560              		.loc 1 486 5 discriminator 1 view .LVU120
 561 0006 FEE7     		b	.L30
 562              	.L29:
 563              		.loc 1 486 5 discriminator 2 view .LVU121
 487:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return (x + (align - 1)) & ~(align - 1);
 564              		.loc 1 487 5 discriminator 2 view .LVU122
 565              		.loc 1 487 15 is_stmt 0 discriminator 2 view .LVU123
 566 0008 0844     		add	r0, r0, r1
 567              	.LVL42:
 568              		.loc 1 487 15 discriminator 2 view .LVU124
 569 000a 0138     		subs	r0, r0, #1
 570              		.loc 1 487 32 discriminator 2 view .LVU125
 571 000c 4942     		rsbs	r1, r1, #0
 572              	.LVL43:
 488:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 19


 573              		.loc 1 488 1 discriminator 2 view .LVU126
 574 000e 0840     		ands	r0, r0, r1
 575 0010 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE21:
 579              		.section	.text.align_down,"ax",%progbits
 580              		.align	1
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 585              	align_down:
 586              	.LVL44:
 587              	.LFB22:
 489:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 490:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 491:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 588              		.loc 1 491 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 492:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 593              		.loc 1 492 5 view .LVU128
 594              		.loc 1 492 5 view .LVU129
 595 0000 4B1E     		subs	r3, r1, #1
 596 0002 0B42     		tst	r3, r1
 597 0004 00D0     		beq	.L32
 598              	.L33:
 599              		.loc 1 492 5 discriminator 1 view .LVU130
 600              		.loc 1 492 5 discriminator 1 view .LVU131
 601              		.loc 1 492 5 discriminator 1 view .LVU132
 602              		.loc 1 492 5 discriminator 1 view .LVU133
 603              		.loc 1 492 5 discriminator 1 view .LVU134
 604 0006 FEE7     		b	.L33
 605              	.L32:
 606              		.loc 1 492 5 discriminator 2 view .LVU135
 493:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return x - (x & (align - 1));
 607              		.loc 1 493 5 discriminator 2 view .LVU136
 608              		.loc 1 493 14 is_stmt 0 discriminator 2 view .LVU137
 609 0008 4942     		rsbs	r1, r1, #0
 610              	.LVL45:
 494:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 611              		.loc 1 494 1 discriminator 2 view .LVU138
 612 000a 0840     		ands	r0, r0, r1
 613              	.LVL46:
 614              		.loc 1 494 1 discriminator 2 view .LVU139
 615 000c 7047     		bx	lr
 616              		.cfi_endproc
 617              	.LFE22:
 619              		.section	.text.align_ptr,"ax",%progbits
 620              		.align	1
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 625              	align_ptr:
 626              	.LVL47:
 627              	.LFB23:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 20


 495:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 496:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void * align_ptr(const void * ptr, size_t align)
 497:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 628              		.loc 1 497 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 498:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const tlsfptr_t aligned =
 633              		.loc 1 498 5 view .LVU141
 499:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         (tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 634              		.loc 1 499 36 is_stmt 0 view .LVU142
 635 0000 0844     		add	r0, r0, r1
 636              	.LVL48:
 637              		.loc 1 499 36 view .LVU143
 638 0002 0138     		subs	r0, r0, #1
 639              		.loc 1 499 53 view .LVU144
 640 0004 4B42     		rsbs	r3, r1, #0
 641              		.loc 1 499 51 view .LVU145
 642 0006 1840     		ands	r0, r0, r3
 643              	.LVL49:
 500:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 644              		.loc 1 500 5 is_stmt 1 view .LVU146
 645              		.loc 1 500 5 view .LVU147
 646 0008 4B1E     		subs	r3, r1, #1
 647 000a 0B42     		tst	r3, r1
 648 000c 00D0     		beq	.L35
 649              	.L36:
 650              		.loc 1 500 5 discriminator 1 view .LVU148
 651              		.loc 1 500 5 discriminator 1 view .LVU149
 652              		.loc 1 500 5 discriminator 1 view .LVU150
 653              		.loc 1 500 5 discriminator 1 view .LVU151
 654              		.loc 1 500 5 discriminator 1 view .LVU152
 655 000e FEE7     		b	.L36
 656              	.L35:
 657              		.loc 1 500 5 discriminator 2 view .LVU153
 501:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(void *, aligned);
 658              		.loc 1 501 5 discriminator 2 view .LVU154
 502:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 659              		.loc 1 502 1 is_stmt 0 discriminator 2 view .LVU155
 660 0010 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE23:
 664              		.section	.text.adjust_request_size,"ax",%progbits
 665              		.align	1
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	adjust_request_size:
 671              	.LVL50:
 672              	.LFB24:
 503:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 504:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 505:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 506:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** than internal minimum.
 507:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 508:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 21


 509:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 673              		.loc 1 509 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		.loc 1 509 1 is_stmt 0 view .LVU157
 678 0000 08B5     		push	{r3, lr}
 679              	.LCFI6:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 3, -8
 682              		.cfi_offset 14, -4
 510:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     size_t adjust = 0;
 683              		.loc 1 510 5 is_stmt 1 view .LVU158
 684              	.LVL51:
 511:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size) {
 685              		.loc 1 511 5 view .LVU159
 686              		.loc 1 511 7 is_stmt 0 view .LVU160
 687 0002 00B9     		cbnz	r0, .L41
 688              	.LVL52:
 689              	.L38:
 512:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t aligned = align_up(size, align);
 513:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 514:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 515:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(aligned < block_size_max) {
 516:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             adjust = tlsf_max(aligned, block_size_min);
 517:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 518:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 519:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return adjust;
 690              		.loc 1 519 5 is_stmt 1 view .LVU161
 520:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 691              		.loc 1 520 1 is_stmt 0 view .LVU162
 692 0004 08BD     		pop	{r3, pc}
 693              	.LVL53:
 694              	.L41:
 695              	.LBB2:
 512:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t aligned = align_up(size, align);
 696              		.loc 1 512 9 is_stmt 1 view .LVU163
 512:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t aligned = align_up(size, align);
 697              		.loc 1 512 32 is_stmt 0 view .LVU164
 698 0006 FFF7FEFF 		bl	align_up
 699              	.LVL54:
 515:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             adjust = tlsf_max(aligned, block_size_min);
 700              		.loc 1 515 9 is_stmt 1 view .LVU165
 515:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             adjust = tlsf_max(aligned, block_size_min);
 701              		.loc 1 515 11 is_stmt 0 view .LVU166
 702 000a B0F5803F 		cmp	r0, #65536
 703 000e 03D2     		bcs	.L39
 516:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 704              		.loc 1 516 13 is_stmt 1 view .LVU167
 516:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 705              		.loc 1 516 20 is_stmt 0 view .LVU168
 706 0010 0C28     		cmp	r0, #12
 707 0012 38BF     		it	cc
 708 0014 0C20     		movcc	r0, #12
 709              	.LVL55:
 516:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 710              		.loc 1 516 20 view .LVU169
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 22


 711 0016 F5E7     		b	.L38
 712              	.LVL56:
 713              	.L39:
 516:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 714              		.loc 1 516 20 view .LVU170
 715              	.LBE2:
 510:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size) {
 716              		.loc 1 510 12 view .LVU171
 717 0018 0020     		movs	r0, #0
 718              	.LVL57:
 510:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size) {
 719              		.loc 1 510 12 view .LVU172
 720 001a F3E7     		b	.L38
 721              		.cfi_endproc
 722              	.LFE24:
 724              		.section	.text.remove_free_block,"ax",%progbits
 725              		.align	1
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 730              	remove_free_block:
 731              	.LVL58:
 732              	.LFB28:
 521:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 522:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 523:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 524:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** the documentation found in the white paper.
 525:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 526:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 527:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void mapping_insert(size_t size, int * fli, int * sli)
 528:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 529:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 530:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size < SMALL_BLOCK_SIZE) {
 531:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* Store small blocks in first list. */
 532:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl = 0;
 533:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 534:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 535:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     else {
 536:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl = tlsf_fls_sizet(size);
 537:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 538:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl -= (FL_INDEX_SHIFT - 1);
 539:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 540:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *fli = fl;
 541:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 542:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 543:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 544:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 545:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void mapping_search(size_t size, int * fli, int * sli)
 546:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 547:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size >= SMALL_BLOCK_SIZE) {
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 549:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 550:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 551:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(size, fli, sli);
 552:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 553:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 554:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * search_suitable_block(control_t * control, int * fli, int * sli)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 23


 555:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 556:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = *fli;
 557:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int sl = *sli;
 558:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 559:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
 560:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** First, search for a block in the list associated with the given
 561:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** fl/sl index.
 562:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
 563:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 564:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(!sl_map) {
 565:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* No block exists. Search in the next largest first-level list. */
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 567:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 568:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* No free blocks available, memory has been exhausted. */
 569:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             return 0;
 570:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 571:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 572:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl = tlsf_ffs(fl_map);
 573:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         *fli = fl;
 574:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl_map = control->sl_bitmap[fl];
 575:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(sl_map && "internal error - second level bitmap is null");
 577:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 578:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 579:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 580:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Return the first block in the free list. */
 581:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return control->blocks[fl][sl];
 582:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 583:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 584:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Remove a free block from the free list.*/
 585:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void remove_free_block(control_t * control, block_header_t * block, int fl, int sl)
 586:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 733              		.loc 1 586 1 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		.loc 1 586 1 is_stmt 0 view .LVU174
 738 0000 10B5     		push	{r4, lr}
 739              	.LCFI7:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 4, -8
 742              		.cfi_offset 14, -4
 743 0002 1446     		mov	r4, r2
 744 0004 9E46     		mov	lr, r3
 587:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * prev = block->prev_free;
 745              		.loc 1 587 5 is_stmt 1 view .LVU175
 746              		.loc 1 587 22 is_stmt 0 view .LVU176
 747 0006 CB68     		ldr	r3, [r1, #12]
 748              	.LVL59:
 588:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block->next_free;
 749              		.loc 1 588 5 is_stmt 1 view .LVU177
 750              		.loc 1 588 22 is_stmt 0 view .LVU178
 751 0008 8A68     		ldr	r2, [r1, #8]
 752              	.LVL60:
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(prev && "prev_free field can not be null");
 753              		.loc 1 589 5 is_stmt 1 view .LVU179
 754              		.loc 1 589 5 view .LVU180
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 24


 755 000a 6BB1     		cbz	r3, .L44
 756              		.loc 1 589 5 discriminator 2 view .LVU181
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 757              		.loc 1 590 5 discriminator 2 view .LVU182
 758              		.loc 1 590 5 discriminator 2 view .LVU183
 759 000c 6AB1     		cbz	r2, .L46
 760              		.loc 1 590 5 discriminator 2 view .LVU184
 591:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 761              		.loc 1 591 5 discriminator 2 view .LVU185
 762              		.loc 1 591 21 is_stmt 0 discriminator 2 view .LVU186
 763 000e D360     		str	r3, [r2, #12]
 592:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     prev->next_free = next;
 764              		.loc 1 592 5 is_stmt 1 discriminator 2 view .LVU187
 765              		.loc 1 592 21 is_stmt 0 discriminator 2 view .LVU188
 766 0010 9A60     		str	r2, [r3, #8]
 593:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 594:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* If this block is the head of the free list, set new head. */
 595:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(control->blocks[fl][sl] == block) {
 767              		.loc 1 595 5 is_stmt 1 discriminator 2 view .LVU189
 768              		.loc 1 595 27 is_stmt 0 discriminator 2 view .LVU190
 769 0012 0EEB441C 		add	ip, lr, r4, lsl #5
 770 0016 0CF10E0C 		add	ip, ip, #14
 771 001a 00EB8C0C 		add	ip, r0, ip, lsl #2
 772 001e DCF80430 		ldr	r3, [ip, #4]
 773              	.LVL61:
 774              		.loc 1 595 7 discriminator 2 view .LVU191
 775 0022 8B42     		cmp	r3, r1
 776 0024 02D0     		beq	.L49
 777              	.LVL62:
 778              	.L42:
 596:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->blocks[fl][sl] = next;
 597:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 598:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If the new head is null, clear the bitmap. */
 599:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(next == &control->block_null) {
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->sl_bitmap[fl] &= ~(1U << sl);
 601:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 602:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* If the second bitmap is now empty, clear the fl bitmap. */
 603:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(!control->sl_bitmap[fl]) {
 604:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 control->fl_bitmap &= ~(1U << fl);
 605:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 606:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 607:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 608:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 779              		.loc 1 608 1 view .LVU192
 780 0026 10BD     		pop	{r4, pc}
 781              	.LVL63:
 782              	.L44:
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 783              		.loc 1 589 5 is_stmt 1 discriminator 1 view .LVU193
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 784              		.loc 1 589 5 discriminator 1 view .LVU194
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 785              		.loc 1 589 5 discriminator 1 view .LVU195
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 786              		.loc 1 589 5 discriminator 1 view .LVU196
 589:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next_free field can not be null");
 787              		.loc 1 589 5 discriminator 1 view .LVU197
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 25


 788 0028 FEE7     		b	.L44
 789              	.L46:
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 790              		.loc 1 590 5 discriminator 2 view .LVU198
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 791              		.loc 1 590 5 discriminator 2 view .LVU199
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 792              		.loc 1 590 5 discriminator 2 view .LVU200
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 793              		.loc 1 590 5 discriminator 2 view .LVU201
 590:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next->prev_free = prev;
 794              		.loc 1 590 5 discriminator 2 view .LVU202
 795 002a FEE7     		b	.L46
 796              	.LVL64:
 797              	.L49:
 596:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->blocks[fl][sl] = next;
 798              		.loc 1 596 9 view .LVU203
 596:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->blocks[fl][sl] = next;
 799              		.loc 1 596 33 is_stmt 0 view .LVU204
 800 002c CCF80420 		str	r2, [ip, #4]
 599:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->sl_bitmap[fl] &= ~(1U << sl);
 801              		.loc 1 599 9 is_stmt 1 view .LVU205
 599:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->sl_bitmap[fl] &= ~(1U << sl);
 802              		.loc 1 599 11 is_stmt 0 view .LVU206
 803 0030 9042     		cmp	r0, r2
 804 0032 F8D1     		bne	.L42
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 805              		.loc 1 600 13 is_stmt 1 view .LVU207
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 806              		.loc 1 600 31 is_stmt 0 view .LVU208
 807 0034 221D     		adds	r2, r4, #4
 808              	.LVL65:
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 809              		.loc 1 600 31 view .LVU209
 810 0036 00EB8202 		add	r2, r0, r2, lsl #2
 811 003a 5368     		ldr	r3, [r2, #4]
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 812              		.loc 1 600 44 view .LVU210
 813 003c 0121     		movs	r1, #1
 814              	.LVL66:
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 815              		.loc 1 600 44 view .LVU211
 816 003e 01FA0EF1 		lsl	r1, r1, lr
 600:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 817              		.loc 1 600 36 view .LVU212
 818 0042 23EA0103 		bic	r3, r3, r1
 819 0046 5360     		str	r3, [r2, #4]
 820              	.LVL67:
 603:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 control->fl_bitmap &= ~(1U << fl);
 821              		.loc 1 603 13 is_stmt 1 view .LVU213
 603:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 control->fl_bitmap &= ~(1U << fl);
 822              		.loc 1 603 15 is_stmt 0 view .LVU214
 823 0048 002B     		cmp	r3, #0
 824 004a ECD1     		bne	.L42
 604:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 825              		.loc 1 604 17 is_stmt 1 view .LVU215
 604:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 26


 826              		.loc 1 604 24 is_stmt 0 view .LVU216
 827 004c 0369     		ldr	r3, [r0, #16]
 604:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 828              		.loc 1 604 44 view .LVU217
 829 004e 0122     		movs	r2, #1
 830 0050 A240     		lsls	r2, r2, r4
 604:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 831              		.loc 1 604 36 view .LVU218
 832 0052 23EA0203 		bic	r3, r3, r2
 833 0056 0361     		str	r3, [r0, #16]
 834              		.loc 1 608 1 view .LVU219
 835 0058 E5E7     		b	.L42
 836              		.cfi_endproc
 837              	.LFE28:
 839              		.section	.text.insert_free_block,"ax",%progbits
 840              		.align	1
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	insert_free_block:
 846              	.LVL68:
 847              	.LFB29:
 609:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 610:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Insert a free block into the free block list. */
 611:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void insert_free_block(control_t * control, block_header_t * block, int fl, int sl)
 612:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 848              		.loc 1 612 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		.loc 1 612 1 is_stmt 0 view .LVU221
 853 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 854              	.LCFI8:
 855              		.cfi_def_cfa_offset 24
 856              		.cfi_offset 4, -24
 857              		.cfi_offset 5, -20
 858              		.cfi_offset 6, -16
 859              		.cfi_offset 7, -12
 860              		.cfi_offset 8, -8
 861              		.cfi_offset 14, -4
 862 0004 1F46     		mov	r7, r3
 613:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * current = control->blocks[fl][sl];
 863              		.loc 1 613 5 is_stmt 1 view .LVU222
 864              		.loc 1 613 22 is_stmt 0 view .LVU223
 865 0006 03EB421C 		add	ip, r3, r2, lsl #5
 866 000a 0CF10E0C 		add	ip, ip, #14
 867 000e 00EB8C0C 		add	ip, r0, ip, lsl #2
 868 0012 DCF80430 		ldr	r3, [ip, #4]
 869              	.LVL69:
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(current && "free list cannot have a null entry");
 870              		.loc 1 614 5 is_stmt 1 view .LVU224
 871              		.loc 1 614 5 view .LVU225
 872 0016 83B1     		cbz	r3, .L52
 873 0018 0546     		mov	r5, r0
 874 001a 0C46     		mov	r4, r1
 875 001c 1646     		mov	r6, r2
 876              		.loc 1 614 5 discriminator 2 view .LVU226
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 27


 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 877              		.loc 1 615 5 discriminator 2 view .LVU227
 878              		.loc 1 615 5 discriminator 2 view .LVU228
 879 001e 69B1     		cbz	r1, .L54
 880              		.loc 1 615 5 discriminator 2 view .LVU229
 616:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
 881              		.loc 1 616 5 discriminator 2 view .LVU230
 882              		.loc 1 616 22 is_stmt 0 discriminator 2 view .LVU231
 883 0020 8B60     		str	r3, [r1, #8]
 617:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->prev_free = &control->block_null;
 884              		.loc 1 617 5 is_stmt 1 discriminator 2 view .LVU232
 885              		.loc 1 617 22 is_stmt 0 discriminator 2 view .LVU233
 886 0022 C860     		str	r0, [r1, #12]
 618:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     current->prev_free = block;
 887              		.loc 1 618 5 is_stmt 1 discriminator 2 view .LVU234
 888              		.loc 1 618 24 is_stmt 0 discriminator 2 view .LVU235
 889 0024 D960     		str	r1, [r3, #12]
 619:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 620:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 890              		.loc 1 620 5 is_stmt 1 discriminator 2 view .LVU236
 891              		.loc 1 620 5 discriminator 2 view .LVU237
 892 0026 0846     		mov	r0, r1
 893              	.LVL70:
 894              		.loc 1 620 5 is_stmt 0 discriminator 2 view .LVU238
 895 0028 FFF7FEFF 		bl	block_to_ptr
 896              	.LVL71:
 897              		.loc 1 620 5 discriminator 2 view .LVU239
 898 002c 8046     		mov	r8, r0
 899 002e 0421     		movs	r1, #4
 900 0030 FFF7FEFF 		bl	align_ptr
 901              	.LVL72:
 902 0034 8045     		cmp	r8, r0
 903 0036 02D0     		beq	.L55
 904              	.L56:
 905              		.loc 1 620 5 is_stmt 1 discriminator 3 view .LVU240
 906              		.loc 1 620 5 discriminator 3 view .LVU241
 907              		.loc 1 620 5 discriminator 3 view .LVU242
 908              		.loc 1 620 5 discriminator 3 view .LVU243
 909              		.loc 1 620 5 discriminator 3 view .LVU244
 910 0038 FEE7     		b	.L56
 911              	.LVL73:
 912              	.L52:
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 913              		.loc 1 614 5 discriminator 1 view .LVU245
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 914              		.loc 1 614 5 discriminator 1 view .LVU246
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 915              		.loc 1 614 5 discriminator 1 view .LVU247
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 916              		.loc 1 614 5 discriminator 1 view .LVU248
 614:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block && "cannot insert a null entry into the free list");
 917              		.loc 1 614 5 discriminator 1 view .LVU249
 918 003a FEE7     		b	.L52
 919              	.L54:
 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
 920              		.loc 1 615 5 discriminator 2 view .LVU250
 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 28


 921              		.loc 1 615 5 discriminator 2 view .LVU251
 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
 922              		.loc 1 615 5 discriminator 2 view .LVU252
 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
 923              		.loc 1 615 5 discriminator 2 view .LVU253
 615:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block->next_free = current;
 924              		.loc 1 615 5 discriminator 2 view .LVU254
 925 003c FEE7     		b	.L54
 926              	.LVL74:
 927              	.L55:
 928              		.loc 1 620 5 discriminator 2 view .LVU255
 621:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 && "block not aligned properly");
 622:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
 623:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** Insert the new block at the head of the list, and mark the first-
 624:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** and second-level bitmaps appropriately.
 625:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
 626:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->blocks[fl][sl] = block;
 929              		.loc 1 626 5 discriminator 2 view .LVU256
 930              		.loc 1 626 29 is_stmt 0 discriminator 2 view .LVU257
 931 003e 07EB4613 		add	r3, r7, r6, lsl #5
 932 0042 0E33     		adds	r3, r3, #14
 933 0044 05EB8303 		add	r3, r5, r3, lsl #2
 934 0048 5C60     		str	r4, [r3, #4]
 627:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->fl_bitmap |= (1U << fl);
 935              		.loc 1 627 5 is_stmt 1 discriminator 2 view .LVU258
 936              		.loc 1 627 12 is_stmt 0 discriminator 2 view .LVU259
 937 004a 2A69     		ldr	r2, [r5, #16]
 938              		.loc 1 627 31 discriminator 2 view .LVU260
 939 004c 0123     		movs	r3, #1
 940 004e 03FA06F1 		lsl	r1, r3, r6
 941              		.loc 1 627 24 discriminator 2 view .LVU261
 942 0052 0A43     		orrs	r2, r2, r1
 943 0054 2A61     		str	r2, [r5, #16]
 628:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->sl_bitmap[fl] |= (1U << sl);
 944              		.loc 1 628 5 is_stmt 1 discriminator 2 view .LVU262
 945              		.loc 1 628 23 is_stmt 0 discriminator 2 view .LVU263
 946 0056 0436     		adds	r6, r6, #4
 947              	.LVL75:
 948              		.loc 1 628 23 discriminator 2 view .LVU264
 949 0058 05EB8605 		add	r5, r5, r6, lsl #2
 950              	.LVL76:
 951              		.loc 1 628 23 discriminator 2 view .LVU265
 952 005c 6A68     		ldr	r2, [r5, #4]
 953              		.loc 1 628 35 discriminator 2 view .LVU266
 954 005e BB40     		lsls	r3, r3, r7
 955              		.loc 1 628 28 discriminator 2 view .LVU267
 956 0060 1A43     		orrs	r2, r2, r3
 957 0062 6A60     		str	r2, [r5, #4]
 629:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 958              		.loc 1 629 1 discriminator 2 view .LVU268
 959 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 960              		.loc 1 629 1 discriminator 2 view .LVU269
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.block_can_split,"ax",%progbits
 965              		.align	1
 966              		.syntax unified
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 29


 967              		.thumb
 968              		.thumb_func
 970              	block_can_split:
 971              	.LVL77:
 972              	.LFB32:
 630:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 631:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Remove a given block from the free list. */
 632:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_remove(control_t * control, block_header_t * block)
 633:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 634:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 635:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(block_size(block), &fl, &sl);
 636:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     remove_free_block(control, block, fl, sl);
 637:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 638:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 639:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Insert a given block into the free list. */
 640:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_insert(control_t * control, block_header_t * block)
 641:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 642:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 643:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(block_size(block), &fl, &sl);
 644:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     insert_free_block(control, block, fl, sl);
 645:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 646:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 647:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static int block_can_split(block_header_t * block, size_t size)
 648:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 973              		.loc 1 648 1 is_stmt 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              		.loc 1 648 1 is_stmt 0 view .LVU271
 978 0000 10B5     		push	{r4, lr}
 979              	.LCFI9:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 4, -8
 982              		.cfi_offset 14, -4
 983 0002 0C46     		mov	r4, r1
 649:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_size(block) >= sizeof(block_header_t) + size;
 984              		.loc 1 649 5 is_stmt 1 view .LVU272
 985              		.loc 1 649 12 is_stmt 0 view .LVU273
 986 0004 FFF7FEFF 		bl	block_size
 987              	.LVL78:
 988              		.loc 1 649 56 view .LVU274
 989 0008 1034     		adds	r4, r4, #16
 990              	.LVL79:
 650:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 991              		.loc 1 650 1 view .LVU275
 992 000a A042     		cmp	r0, r4
 993 000c 34BF     		ite	cc
 994 000e 0020     		movcc	r0, #0
 995 0010 0120     		movcs	r0, #1
 996 0012 10BD     		pop	{r4, pc}
 997              		.loc 1 650 1 view .LVU276
 998              		.cfi_endproc
 999              	.LFE32:
 1001              		.section	.text.block_split,"ax",%progbits
 1002              		.align	1
 1003              		.syntax unified
 1004              		.thumb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 30


 1005              		.thumb_func
 1007              	block_split:
 1008              	.LVL80:
 1009              	.LFB33:
 651:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 652:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 653:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_split(block_header_t * block, size_t size)
 654:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 1010              		.loc 1 654 1 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              		.loc 1 654 1 is_stmt 0 view .LVU278
 1015 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1016              	.LCFI10:
 1017              		.cfi_def_cfa_offset 32
 1018              		.cfi_offset 3, -32
 1019              		.cfi_offset 4, -28
 1020              		.cfi_offset 5, -24
 1021              		.cfi_offset 6, -20
 1022              		.cfi_offset 7, -16
 1023              		.cfi_offset 8, -12
 1024              		.cfi_offset 9, -8
 1025              		.cfi_offset 14, -4
 1026 0004 0746     		mov	r7, r0
 1027 0006 0C46     		mov	r4, r1
 655:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Calculate the amount of space left in the remaining block. */
 656:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * remaining =
 1028              		.loc 1 656 5 is_stmt 1 view .LVU279
 657:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1029              		.loc 1 657 25 is_stmt 0 view .LVU280
 1030 0008 FFF7FEFF 		bl	block_to_ptr
 1031              	.LVL81:
 1032              		.loc 1 657 9 view .LVU281
 1033 000c 211F     		subs	r1, r4, #4
 1034 000e FFF7FEFF 		bl	offset_to_block
 1035              	.LVL82:
 1036 0012 0546     		mov	r5, r0
 1037              	.LVL83:
 658:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 659:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t remain_size = block_size(block) - (size + block_header_overhead);
 1038              		.loc 1 659 5 is_stmt 1 view .LVU282
 1039              		.loc 1 659 32 is_stmt 0 view .LVU283
 1040 0014 3846     		mov	r0, r7
 1041              	.LVL84:
 1042              		.loc 1 659 32 view .LVU284
 1043 0016 FFF7FEFF 		bl	block_size
 1044              	.LVL85:
 1045 001a 0646     		mov	r6, r0
 1046              		.loc 1 659 50 view .LVU285
 1047 001c 031B     		subs	r3, r0, r4
 1048              		.loc 1 659 18 view .LVU286
 1049 001e A3F10409 		sub	r9, r3, #4
 1050              	.LVL86:
 660:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 661:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1051              		.loc 1 661 5 is_stmt 1 view .LVU287
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 31


 1052              		.loc 1 661 5 view .LVU288
 1053 0022 2846     		mov	r0, r5
 1054 0024 FFF7FEFF 		bl	block_to_ptr
 1055              	.LVL87:
 1056 0028 8046     		mov	r8, r0
 1057 002a 0421     		movs	r1, #4
 1058 002c FFF7FEFF 		bl	align_ptr
 1059              	.LVL88:
 1060 0030 8045     		cmp	r8, r0
 1061 0032 00D0     		beq	.L61
 1062              	.L62:
 1063              		.loc 1 661 5 discriminator 1 view .LVU289
 1064              		.loc 1 661 5 discriminator 1 view .LVU290
 1065              		.loc 1 661 5 discriminator 1 view .LVU291
 1066              		.loc 1 661 5 discriminator 1 view .LVU292
 1067              		.loc 1 661 5 discriminator 1 view .LVU293
 1068 0034 FEE7     		b	.L62
 1069              	.L61:
 1070              		.loc 1 661 5 discriminator 2 view .LVU294
 662:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 && "remaining block not aligned properly");
 663:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 664:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1071              		.loc 1 664 5 discriminator 2 view .LVU295
 1072              		.loc 1 664 5 discriminator 2 view .LVU296
 1073 0036 04EB0903 		add	r3, r4, r9
 1074 003a 0433     		adds	r3, r3, #4
 1075 003c 9E42     		cmp	r6, r3
 1076 003e 00D0     		beq	.L63
 1077              	.L64:
 1078              		.loc 1 664 5 discriminator 2 view .LVU297
 1079              		.loc 1 664 5 discriminator 2 view .LVU298
 1080              		.loc 1 664 5 discriminator 2 view .LVU299
 1081              		.loc 1 664 5 discriminator 2 view .LVU300
 1082              		.loc 1 664 5 discriminator 2 view .LVU301
 1083 0040 FEE7     		b	.L64
 1084              	.L63:
 1085              		.loc 1 664 5 discriminator 2 view .LVU302
 665:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_size(remaining, remain_size);
 1086              		.loc 1 665 5 discriminator 2 view .LVU303
 1087 0042 4946     		mov	r1, r9
 1088 0044 2846     		mov	r0, r5
 1089 0046 FFF7FEFF 		bl	block_set_size
 1090              	.LVL89:
 666:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1091              		.loc 1 666 5 discriminator 2 view .LVU304
 1092              		.loc 1 666 5 discriminator 2 view .LVU305
 1093 004a 2846     		mov	r0, r5
 1094 004c FFF7FEFF 		bl	block_size
 1095              	.LVL90:
 1096 0050 0B28     		cmp	r0, #11
 1097 0052 00D8     		bhi	.L65
 1098              	.L66:
 1099              		.loc 1 666 5 discriminator 3 view .LVU306
 1100              		.loc 1 666 5 discriminator 3 view .LVU307
 1101              		.loc 1 666 5 discriminator 3 view .LVU308
 1102              		.loc 1 666 5 discriminator 3 view .LVU309
 1103              		.loc 1 666 5 discriminator 3 view .LVU310
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 32


 1104 0054 FEE7     		b	.L66
 1105              	.L65:
 1106              		.loc 1 666 5 discriminator 4 view .LVU311
 667:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 668:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_size(block, size);
 1107              		.loc 1 668 5 discriminator 4 view .LVU312
 1108 0056 2146     		mov	r1, r4
 1109 0058 3846     		mov	r0, r7
 1110 005a FFF7FEFF 		bl	block_set_size
 1111              	.LVL91:
 669:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_mark_as_free(remaining);
 1112              		.loc 1 669 5 discriminator 4 view .LVU313
 1113 005e 2846     		mov	r0, r5
 1114 0060 FFF7FEFF 		bl	block_mark_as_free
 1115              	.LVL92:
 670:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 671:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return remaining;
 1116              		.loc 1 671 5 discriminator 4 view .LVU314
 672:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1117              		.loc 1 672 1 is_stmt 0 discriminator 4 view .LVU315
 1118 0064 2846     		mov	r0, r5
 1119 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1120              		.loc 1 672 1 discriminator 4 view .LVU316
 1121              		.cfi_endproc
 1122              	.LFE33:
 1124              		.section	.text.block_absorb,"ax",%progbits
 1125              		.align	1
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1130              	block_absorb:
 1131              	.LVL93:
 1132              	.LFB34:
 673:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 674:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 675:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_absorb(block_header_t * prev, block_header_t * block)
 676:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 1133              		.loc 1 676 1 is_stmt 1 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		.loc 1 676 1 is_stmt 0 view .LVU318
 1138 0000 38B5     		push	{r3, r4, r5, lr}
 1139              	.LCFI11:
 1140              		.cfi_def_cfa_offset 16
 1141              		.cfi_offset 3, -16
 1142              		.cfi_offset 4, -12
 1143              		.cfi_offset 5, -8
 1144              		.cfi_offset 14, -4
 1145 0002 0446     		mov	r4, r0
 1146 0004 0D46     		mov	r5, r1
 677:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1147              		.loc 1 677 5 is_stmt 1 view .LVU319
 1148              		.loc 1 677 5 view .LVU320
 1149 0006 FFF7FEFF 		bl	block_is_last
 1150              	.LVL94:
 1151              		.loc 1 677 5 is_stmt 0 view .LVU321
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 33


 1152 000a 00B1     		cbz	r0, .L69
 1153              	.L70:
 1154              		.loc 1 677 5 is_stmt 1 discriminator 1 view .LVU322
 1155              		.loc 1 677 5 discriminator 1 view .LVU323
 1156              		.loc 1 677 5 discriminator 1 view .LVU324
 1157              		.loc 1 677 5 discriminator 1 view .LVU325
 1158              		.loc 1 677 5 discriminator 1 view .LVU326
 1159 000c FEE7     		b	.L70
 1160              	.L69:
 1161              		.loc 1 677 5 discriminator 2 view .LVU327
 678:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Note: Leaves flags untouched. */
 679:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     prev->size += block_size(block) + block_header_overhead;
 1162              		.loc 1 679 5 discriminator 2 view .LVU328
 1163              		.loc 1 679 19 is_stmt 0 discriminator 2 view .LVU329
 1164 000e 2846     		mov	r0, r5
 1165 0010 FFF7FEFF 		bl	block_size
 1166              	.LVL95:
 1167              		.loc 1 679 37 discriminator 2 view .LVU330
 1168 0014 021D     		adds	r2, r0, #4
 1169              		.loc 1 679 9 discriminator 2 view .LVU331
 1170 0016 6368     		ldr	r3, [r4, #4]
 1171              		.loc 1 679 16 discriminator 2 view .LVU332
 1172 0018 1344     		add	r3, r3, r2
 1173 001a 6360     		str	r3, [r4, #4]
 680:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_link_next(prev);
 1174              		.loc 1 680 5 is_stmt 1 discriminator 2 view .LVU333
 1175 001c 2046     		mov	r0, r4
 1176 001e FFF7FEFF 		bl	block_link_next
 1177              	.LVL96:
 681:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return prev;
 1178              		.loc 1 681 5 discriminator 2 view .LVU334
 682:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1179              		.loc 1 682 1 is_stmt 0 discriminator 2 view .LVU335
 1180 0022 2046     		mov	r0, r4
 1181 0024 38BD     		pop	{r3, r4, r5, pc}
 1182              		.loc 1 682 1 discriminator 2 view .LVU336
 1183              		.cfi_endproc
 1184              	.LFE34:
 1186              		.section	.text.control_constructor,"ax",%progbits
 1187              		.align	1
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1192              	control_constructor:
 1193              	.LVL97:
 1194              	.LFB42:
 683:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 684:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 685:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_merge_prev(control_t * control, block_header_t * block)
 686:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 687:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_is_prev_free(block)) {
 688:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * prev = block_prev(block);
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(prev && "prev physical block can't be null");
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 691:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 692:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_absorb(prev, block);
 693:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 34


 694:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 695:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block;
 696:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 697:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 698:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 699:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_merge_next(control_t * control, block_header_t * block)
 700:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 701:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_next(block);
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next physical block can't be null");
 703:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 704:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_is_free(next)) {
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_last(block) && "previous block can't be last");
 706:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 707:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_absorb(block, next);
 708:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 709:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 710:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block;
 711:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 712:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 713:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 714:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_trim_free(control_t * control, block_header_t * block, size_t size)
 715:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_is_free(block) && "block must be free");
 717:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 718:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * remaining_block = block_split(block, size);
 719:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_link_next(block);
 720:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 721:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, remaining_block);
 722:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 723:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 724:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 725:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 726:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void block_trim_used(control_t * control, block_header_t * block, size_t size)
 727:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_free(block) && "block must be used");
 729:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 730:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If the next block is free, we must coalesce. */
 731:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * remaining_block = block_split(block, size);
 732:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_used(remaining_block);
 733:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 734:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remaining_block = block_merge_next(control, remaining_block);
 735:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, remaining_block);
 736:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 737:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 738:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 739:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_trim_free_leading(control_t * control, block_header_t * block, size_t
 740:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 741:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * remaining_block = block;
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 743:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 744:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remaining_block = block_split(block, size - block_header_overhead);
 745:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 746:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 747:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_link_next(block);
 748:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, block);
 749:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 750:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 35


 751:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return remaining_block;
 752:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 753:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 754:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static block_header_t * block_locate_free(control_t * control, size_t size)
 755:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 756:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = 0, sl = 0;
 757:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = 0;
 758:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 759:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size) {
 760:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         mapping_search(size, &fl, &sl);
 761:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 762:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /*
 763:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** mapping_search can futz with the size, so for excessively large sizes it can sometimes w
 764:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** with indices that are off the end of the block array.
 765:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** So, we protect against that here, since this is the only callsite of mapping_search.
 766:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** Note that we don't need to check sl, since it comes from a modulo operation that guarant
 767:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         */
 768:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(fl < FL_INDEX_COUNT) {
 769:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block = search_suitable_block(control, &fl, &sl);
 770:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 771:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 772:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 773:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block) {
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_size(block) >= size);
 775:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 776:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 777:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 778:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block;
 779:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 780:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 781:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void * block_prepare_used(control_t * control, block_header_t * block, size_t size)
 782:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 783:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     void * p = 0;
 784:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block) {
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(size && "size must be non-zero");
 786:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 787:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_mark_as_used(block);
 788:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         p = block_to_ptr(block);
 789:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 790:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return p;
 791:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 792:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 793:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 794:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void control_constructor(control_t * control)
 795:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 1195              		.loc 1 795 1 is_stmt 1 view -0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 796:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int i, j;
 1200              		.loc 1 796 5 view .LVU338
 797:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 798:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->block_null.next_free = &control->block_null;
 1201              		.loc 1 798 5 view .LVU339
 1202              		.loc 1 798 35 is_stmt 0 view .LVU340
 1203 0000 8060     		str	r0, [r0, #8]
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 36


 799:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->block_null.prev_free = &control->block_null;
 1204              		.loc 1 799 5 is_stmt 1 view .LVU341
 1205              		.loc 1 799 35 is_stmt 0 view .LVU342
 1206 0002 C060     		str	r0, [r0, #12]
 800:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 801:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control->fl_bitmap = 0;
 1207              		.loc 1 801 5 is_stmt 1 view .LVU343
 1208              		.loc 1 801 24 is_stmt 0 view .LVU344
 1209 0004 0021     		movs	r1, #0
 1210 0006 0161     		str	r1, [r0, #16]
 802:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     for(i = 0; i < FL_INDEX_COUNT; ++i) {
 1211              		.loc 1 802 5 is_stmt 1 view .LVU345
 1212              	.LVL98:
 1213              		.loc 1 802 5 is_stmt 0 view .LVU346
 1214 0008 09E0     		b	.L73
 1215              	.LVL99:
 1216              	.L75:
 803:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->sl_bitmap[i] = 0;
 804:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 805:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->blocks[i][j] = &control->block_null;
 1217              		.loc 1 805 13 is_stmt 1 discriminator 3 view .LVU347
 1218              		.loc 1 805 35 is_stmt 0 discriminator 3 view .LVU348
 1219 000a 02EB4113 		add	r3, r2, r1, lsl #5
 1220 000e 0E33     		adds	r3, r3, #14
 1221 0010 00EB8303 		add	r3, r0, r3, lsl #2
 1222 0014 5860     		str	r0, [r3, #4]
 804:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->blocks[i][j] = &control->block_null;
 1223              		.loc 1 804 40 is_stmt 1 discriminator 3 view .LVU349
 1224 0016 0132     		adds	r2, r2, #1
 1225              	.LVL100:
 1226              	.L74:
 804:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->blocks[i][j] = &control->block_null;
 1227              		.loc 1 804 22 discriminator 1 view .LVU350
 1228 0018 1F2A     		cmp	r2, #31
 1229 001a F6DD     		ble	.L75
 802:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     for(i = 0; i < FL_INDEX_COUNT; ++i) {
 1230              		.loc 1 802 36 discriminator 2 view .LVU351
 1231 001c 0131     		adds	r1, r1, #1
 1232              	.LVL101:
 1233              	.L73:
 802:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     for(i = 0; i < FL_INDEX_COUNT; ++i) {
 1234              		.loc 1 802 18 discriminator 1 view .LVU352
 1235 001e 0929     		cmp	r1, #9
 1236 0020 05DC     		bgt	.L77
 803:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->sl_bitmap[i] = 0;
 1237              		.loc 1 803 9 view .LVU353
 803:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control->sl_bitmap[i] = 0;
 1238              		.loc 1 803 31 is_stmt 0 view .LVU354
 1239 0022 0B1D     		adds	r3, r1, #4
 1240 0024 00EB8303 		add	r3, r0, r3, lsl #2
 1241 0028 0022     		movs	r2, #0
 1242 002a 5A60     		str	r2, [r3, #4]
 804:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->blocks[i][j] = &control->block_null;
 1243              		.loc 1 804 9 is_stmt 1 view .LVU355
 1244              	.LVL102:
 804:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             control->blocks[i][j] = &control->block_null;
 1245              		.loc 1 804 9 is_stmt 0 view .LVU356
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 37


 1246 002c F4E7     		b	.L74
 1247              	.LVL103:
 1248              	.L77:
 806:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 807:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 808:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1249              		.loc 1 808 1 view .LVU357
 1250 002e 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE42:
 1254              		.section	.text.integrity_walker,"ax",%progbits
 1255              		.align	1
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1260              	integrity_walker:
 1261              	.LVL104:
 1262              	.LFB43:
 809:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 810:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 811:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Debugging utilities.
 812:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 813:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 814:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** typedef struct integrity_t {
 815:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int prev_status;
 816:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int status;
 817:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** } integrity_t;
 818:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 819:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 820:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 821:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void integrity_walker(void * ptr, size_t size, int used, void * user)
 822:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 1263              		.loc 1 822 1 is_stmt 1 view -0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              		.loc 1 822 1 is_stmt 0 view .LVU359
 1268 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1269              	.LCFI12:
 1270              		.cfi_def_cfa_offset 24
 1271              		.cfi_offset 4, -24
 1272              		.cfi_offset 5, -20
 1273              		.cfi_offset 6, -16
 1274              		.cfi_offset 7, -12
 1275              		.cfi_offset 8, -8
 1276              		.cfi_offset 14, -4
 1277 0004 0F46     		mov	r7, r1
 1278 0006 1D46     		mov	r5, r3
 823:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = block_from_ptr(ptr);
 1279              		.loc 1 823 5 is_stmt 1 view .LVU360
 1280              		.loc 1 823 30 is_stmt 0 view .LVU361
 1281 0008 FFF7FEFF 		bl	block_from_ptr
 1282              	.LVL105:
 1283              		.loc 1 823 30 view .LVU362
 1284 000c 0446     		mov	r4, r0
 1285              	.LVL106:
 824:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     integrity_t * integ = tlsf_cast(integrity_t *, user);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 38


 1286              		.loc 1 824 5 is_stmt 1 view .LVU363
 825:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1287              		.loc 1 825 5 view .LVU364
 1288              		.loc 1 825 34 is_stmt 0 view .LVU365
 1289 000e FFF7FEFF 		bl	block_is_prev_free
 1290              	.LVL107:
 1291              		.loc 1 825 64 view .LVU366
 1292 0012 061E     		subs	r6, r0, #0
 1293 0014 18BF     		it	ne
 1294 0016 0126     		movne	r6, #1
 1295              	.LVL108:
 826:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int this_status = block_is_free(block) ? 1 : 0;
 1296              		.loc 1 826 5 is_stmt 1 view .LVU367
 1297              		.loc 1 826 29 is_stmt 0 view .LVU368
 1298 0018 2046     		mov	r0, r4
 1299 001a FFF7FEFF 		bl	block_is_free
 1300              	.LVL109:
 1301              		.loc 1 826 54 view .LVU369
 1302 001e B0F10008 		subs	r8, r0, #0
 1303 0022 18BF     		it	ne
 1304 0024 4FF00108 		movne	r8, #1
 1305              	.LVL110:
 827:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t this_block_size = block_size(block);
 1306              		.loc 1 827 5 is_stmt 1 view .LVU370
 1307              		.loc 1 827 36 is_stmt 0 view .LVU371
 1308 0028 2046     		mov	r0, r4
 1309 002a FFF7FEFF 		bl	block_size
 1310              	.LVL111:
 828:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 829:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int status = 0;
 1311              		.loc 1 829 5 is_stmt 1 view .LVU372
 830:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     LV_UNUSED(used);
 1312              		.loc 1 830 5 view .LVU373
 831:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1313              		.loc 1 831 5 view .LVU374
 1314              		.loc 1 831 5 view .LVU375
 1315 002e 2B68     		ldr	r3, [r5]
 1316 0030 B342     		cmp	r3, r6
 1317 0032 00D0     		beq	.L79
 1318              	.L80:
 1319              		.loc 1 831 5 discriminator 1 view .LVU376
 1320              		.loc 1 831 5 discriminator 1 view .LVU377
 1321              		.loc 1 831 5 discriminator 1 view .LVU378
 1322              		.loc 1 831 5 discriminator 1 view .LVU379
 1323              		.loc 1 831 5 discriminator 1 view .LVU380
 1324 0034 FEE7     		b	.L80
 1325              	.L79:
 1326              		.loc 1 831 5 discriminator 5 view .LVU381
 1327              		.loc 1 831 5 discriminator 5 view .LVU382
 1328              		.loc 1 831 83 discriminator 5 view .LVU383
 832:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_insist(size == this_block_size && "block size incorrect");
 1329              		.loc 1 832 5 discriminator 5 view .LVU384
 1330              		.loc 1 832 5 discriminator 5 view .LVU385
 1331 0036 B842     		cmp	r0, r7
 1332 0038 00D0     		beq	.L81
 1333              	.L82:
 1334              		.loc 1 832 5 discriminator 2 view .LVU386
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 39


 1335              		.loc 1 832 5 discriminator 2 view .LVU387
 1336              		.loc 1 832 5 discriminator 2 view .LVU388
 1337              		.loc 1 832 5 discriminator 2 view .LVU389
 1338              		.loc 1 832 5 discriminator 2 view .LVU390
 1339 003a FEE7     		b	.L82
 1340              	.L81:
 1341              		.loc 1 832 5 discriminator 5 view .LVU391
 1342              		.loc 1 832 5 discriminator 5 view .LVU392
 1343              		.loc 1 832 67 discriminator 5 view .LVU393
 833:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 834:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     integ->prev_status = this_status;
 1344              		.loc 1 834 5 discriminator 5 view .LVU394
 1345              		.loc 1 834 24 is_stmt 0 discriminator 5 view .LVU395
 1346 003c C5F80080 		str	r8, [r5]
 835:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     integ->status += status;
 1347              		.loc 1 835 5 is_stmt 1 discriminator 5 view .LVU396
 836:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1348              		.loc 1 836 1 is_stmt 0 discriminator 5 view .LVU397
 1349 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1350              		.loc 1 836 1 discriminator 5 view .LVU398
 1351              		.cfi_endproc
 1352              	.LFE43:
 1354              		.section	.text.default_walker,"ax",%progbits
 1355              		.align	1
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1360              	default_walker:
 1361              	.LVL112:
 1362              	.LFB45:
 837:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 838:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 839:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 840:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int i, j;
 841:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 842:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_t * control = tlsf_cast(control_t *, tlsf);
 843:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int status = 0;
 844:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 845:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Check that the free lists and bitmaps are accurate. */
 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     for(i = 0; i < FL_INDEX_COUNT; ++i) {
 847:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 848:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int fl_map = control->fl_bitmap & (1U << i);
 849:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_list = control->sl_bitmap[i];
 850:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_map = sl_list & (1U << j);
 851:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const block_header_t * block = control->blocks[i][j];
 852:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 853:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* Check that first- and second-level lists agree. */
 854:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(!fl_map) {
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!sl_map && "second-level map must be null");
 856:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 857:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 858:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(!sl_map) {
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block == &control->block_null && "block list must be null");
 860:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 861:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 862:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 863:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* Check that there is at least one free block. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 40


 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(sl_list && "no free blocks in second-level map");
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 866:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 867:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             while(block != &control->block_null) {
 868:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 int fli, sli;
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_free(block) && "block should be free");
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 874:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 875:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 mapping_insert(block_size(block), &fli, &sli);
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 877:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 878:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 879:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 880:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 881:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 882:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return status;
 883:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 884:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 885:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #undef tlsf_insist
 886:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 887:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** static void default_walker(void * ptr, size_t size, int used, void * user)
 888:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 1363              		.loc 1 888 1 is_stmt 1 view -0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
 889:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     LV_UNUSED(user);
 1368              		.loc 1 889 5 view .LVU400
 890:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void *)bloc
 1369              		.loc 1 890 5 view .LVU401
 1370              		.loc 1 890 5 view .LVU402
 1371              		.loc 1 890 5 view .LVU403
 891:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1372              		.loc 1 891 1 is_stmt 0 view .LVU404
 1373 0000 7047     		bx	lr
 1374              		.cfi_endproc
 1375              	.LFE45:
 1377              		.section	.text.tlsf_fls,"ax",%progbits
 1378              		.align	1
 1379              		.syntax unified
 1380              		.thumb
 1381              		.thumb_func
 1383              	tlsf_fls:
 1384              	.LVL113:
 1385              	.LFB3:
 102:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const int bit = word ? 32 - __builtin_clz(word) : 0;
 1386              		.loc 1 102 1 is_stmt 1 view -0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1391              		.loc 1 103 5 view .LVU406
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 41


 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1392              		.loc 1 103 53 is_stmt 0 view .LVU407
 1393 0000 28B1     		cbz	r0, .L87
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1394              		.loc 1 103 33 discriminator 1 view .LVU408
 1395 0002 B0FA80F0 		clz	r0, r0
 1396              	.LVL114:
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1397              		.loc 1 103 53 discriminator 1 view .LVU409
 1398 0006 C0F12000 		rsb	r0, r0, #32
 1399              	.L86:
 1400              	.LVL115:
 104:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1401              		.loc 1 104 5 is_stmt 1 discriminator 4 view .LVU410
 105:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1402              		.loc 1 105 1 is_stmt 0 discriminator 4 view .LVU411
 1403 000a 0138     		subs	r0, r0, #1
 1404              	.LVL116:
 105:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1405              		.loc 1 105 1 discriminator 4 view .LVU412
 1406 000c 7047     		bx	lr
 1407              	.LVL117:
 1408              	.L87:
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1409              		.loc 1 103 53 view .LVU413
 1410 000e 0020     		movs	r0, #0
 1411              	.LVL118:
 103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return bit - 1;
 1412              		.loc 1 103 53 view .LVU414
 1413 0010 FBE7     		b	.L86
 1414              		.cfi_endproc
 1415              	.LFE3:
 1417              		.section	.text.mapping_insert,"ax",%progbits
 1418              		.align	1
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1423              	mapping_insert:
 1424              	.LVL119:
 1425              	.LFB25:
 528:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1426              		.loc 1 528 1 is_stmt 1 view -0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 528:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1430              		.loc 1 528 1 is_stmt 0 view .LVU416
 1431 0000 70B5     		push	{r4, r5, r6, lr}
 1432              	.LCFI13:
 1433              		.cfi_def_cfa_offset 16
 1434              		.cfi_offset 4, -16
 1435              		.cfi_offset 5, -12
 1436              		.cfi_offset 6, -8
 1437              		.cfi_offset 14, -4
 1438 0002 0446     		mov	r4, r0
 1439 0004 0D46     		mov	r5, r1
 1440 0006 1646     		mov	r6, r2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 42


 529:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size < SMALL_BLOCK_SIZE) {
 1441              		.loc 1 529 5 is_stmt 1 view .LVU417
 530:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* Store small blocks in first list. */
 1442              		.loc 1 530 5 view .LVU418
 530:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* Store small blocks in first list. */
 1443              		.loc 1 530 7 is_stmt 0 view .LVU419
 1444 0008 7F28     		cmp	r0, #127
 1445 000a 09D8     		bhi	.L89
 532:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1446              		.loc 1 532 9 is_stmt 1 view .LVU420
 1447              	.LVL120:
 533:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1448              		.loc 1 533 9 view .LVU421
 533:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1449              		.loc 1 533 12 is_stmt 0 view .LVU422
 1450 000c 0346     		mov	r3, r0
 1451 000e 0028     		cmp	r0, #0
 1452 0010 04DB     		blt	.L93
 1453              	.L90:
 533:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1454              		.loc 1 533 12 view .LVU423
 1455 0012 9C10     		asrs	r4, r3, #2
 1456              	.LVL121:
 532:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1457              		.loc 1 532 12 view .LVU424
 1458 0014 0020     		movs	r0, #0
 1459              	.LVL122:
 1460              	.L91:
 540:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 1461              		.loc 1 540 5 is_stmt 1 view .LVU425
 540:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 1462              		.loc 1 540 10 is_stmt 0 view .LVU426
 1463 0016 2860     		str	r0, [r5]
 541:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1464              		.loc 1 541 5 is_stmt 1 view .LVU427
 541:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1465              		.loc 1 541 10 is_stmt 0 view .LVU428
 1466 0018 3460     		str	r4, [r6]
 542:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1467              		.loc 1 542 1 view .LVU429
 1468 001a 70BD     		pop	{r4, r5, r6, pc}
 1469              	.LVL123:
 1470              	.L93:
 533:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1471              		.loc 1 533 12 view .LVU430
 1472 001c C31C     		adds	r3, r0, #3
 1473 001e F8E7     		b	.L90
 1474              	.LVL124:
 1475              	.L89:
 536:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1476              		.loc 1 536 9 is_stmt 1 view .LVU431
 536:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1477              		.loc 1 536 14 is_stmt 0 view .LVU432
 1478 0020 FFF7FEFF 		bl	tlsf_fls
 1479              	.LVL125:
 537:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl -= (FL_INDEX_SHIFT - 1);
 1480              		.loc 1 537 9 is_stmt 1 view .LVU433
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 43


 537:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl -= (FL_INDEX_SHIFT - 1);
 1481              		.loc 1 537 14 is_stmt 0 view .LVU434
 1482 0024 431F     		subs	r3, r0, #5
 1483 0026 DC40     		lsrs	r4, r4, r3
 1484              	.LVL126:
 537:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         fl -= (FL_INDEX_SHIFT - 1);
 1485              		.loc 1 537 12 view .LVU435
 1486 0028 84F02004 		eor	r4, r4, #32
 1487              	.LVL127:
 538:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1488              		.loc 1 538 9 is_stmt 1 view .LVU436
 538:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1489              		.loc 1 538 12 is_stmt 0 view .LVU437
 1490 002c 0638     		subs	r0, r0, #6
 1491              	.LVL128:
 538:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1492              		.loc 1 538 12 view .LVU438
 1493 002e F2E7     		b	.L91
 1494              		.cfi_endproc
 1495              	.LFE25:
 1497              		.section	.text.block_insert,"ax",%progbits
 1498              		.align	1
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1503              	block_insert:
 1504              	.LVL129:
 1505              	.LFB31:
 641:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1506              		.loc 1 641 1 is_stmt 1 view -0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 8
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 641:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1510              		.loc 1 641 1 is_stmt 0 view .LVU440
 1511 0000 30B5     		push	{r4, r5, lr}
 1512              	.LCFI14:
 1513              		.cfi_def_cfa_offset 12
 1514              		.cfi_offset 4, -12
 1515              		.cfi_offset 5, -8
 1516              		.cfi_offset 14, -4
 1517 0002 83B0     		sub	sp, sp, #12
 1518              	.LCFI15:
 1519              		.cfi_def_cfa_offset 24
 1520 0004 0546     		mov	r5, r0
 1521 0006 0C46     		mov	r4, r1
 642:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(block_size(block), &fl, &sl);
 1522              		.loc 1 642 5 is_stmt 1 view .LVU441
 643:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     insert_free_block(control, block, fl, sl);
 1523              		.loc 1 643 5 view .LVU442
 1524 0008 0846     		mov	r0, r1
 1525              	.LVL130:
 643:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     insert_free_block(control, block, fl, sl);
 1526              		.loc 1 643 5 is_stmt 0 view .LVU443
 1527 000a FFF7FEFF 		bl	block_size
 1528              	.LVL131:
 643:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     insert_free_block(control, block, fl, sl);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 44


 1529              		.loc 1 643 5 view .LVU444
 1530 000e 6A46     		mov	r2, sp
 1531 0010 01A9     		add	r1, sp, #4
 1532 0012 FFF7FEFF 		bl	mapping_insert
 1533              	.LVL132:
 644:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1534              		.loc 1 644 5 is_stmt 1 view .LVU445
 1535 0016 009B     		ldr	r3, [sp]
 1536 0018 019A     		ldr	r2, [sp, #4]
 1537 001a 2146     		mov	r1, r4
 1538 001c 2846     		mov	r0, r5
 1539 001e FFF7FEFF 		bl	insert_free_block
 1540              	.LVL133:
 645:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1541              		.loc 1 645 1 is_stmt 0 view .LVU446
 1542 0022 03B0     		add	sp, sp, #12
 1543              	.LCFI16:
 1544              		.cfi_def_cfa_offset 12
 1545              		@ sp needed
 1546 0024 30BD     		pop	{r4, r5, pc}
 645:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1547              		.loc 1 645 1 view .LVU447
 1548              		.cfi_endproc
 1549              	.LFE31:
 1551              		.section	.text.block_trim_free,"ax",%progbits
 1552              		.align	1
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1557              	block_trim_free:
 1558              	.LVL134:
 1559              	.LFB37:
 715:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_is_free(block) && "block must be free");
 1560              		.loc 1 715 1 is_stmt 1 view -0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 715:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_is_free(block) && "block must be free");
 1564              		.loc 1 715 1 is_stmt 0 view .LVU449
 1565 0000 70B5     		push	{r4, r5, r6, lr}
 1566              	.LCFI17:
 1567              		.cfi_def_cfa_offset 16
 1568              		.cfi_offset 4, -16
 1569              		.cfi_offset 5, -12
 1570              		.cfi_offset 6, -8
 1571              		.cfi_offset 14, -4
 1572 0002 0646     		mov	r6, r0
 1573 0004 0C46     		mov	r4, r1
 1574 0006 1546     		mov	r5, r2
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1575              		.loc 1 716 5 is_stmt 1 view .LVU450
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1576              		.loc 1 716 5 view .LVU451
 1577 0008 0846     		mov	r0, r1
 1578              	.LVL135:
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1579              		.loc 1 716 5 is_stmt 0 view .LVU452
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 45


 1580 000a FFF7FEFF 		bl	block_is_free
 1581              	.LVL136:
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1582              		.loc 1 716 5 view .LVU453
 1583 000e 00B9     		cbnz	r0, .L97
 1584              	.L98:
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1585              		.loc 1 716 5 is_stmt 1 discriminator 1 view .LVU454
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1586              		.loc 1 716 5 discriminator 1 view .LVU455
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1587              		.loc 1 716 5 discriminator 1 view .LVU456
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1588              		.loc 1 716 5 discriminator 1 view .LVU457
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1589              		.loc 1 716 5 discriminator 1 view .LVU458
 1590 0010 FEE7     		b	.L98
 1591              	.L97:
 716:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1592              		.loc 1 716 5 discriminator 4 view .LVU459
 717:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * remaining_block = block_split(block, size);
 1593              		.loc 1 717 5 discriminator 4 view .LVU460
 717:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * remaining_block = block_split(block, size);
 1594              		.loc 1 717 8 is_stmt 0 discriminator 4 view .LVU461
 1595 0012 2946     		mov	r1, r5
 1596 0014 2046     		mov	r0, r4
 1597 0016 FFF7FEFF 		bl	block_can_split
 1598              	.LVL137:
 717:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * remaining_block = block_split(block, size);
 1599              		.loc 1 717 7 discriminator 4 view .LVU462
 1600 001a 00B9     		cbnz	r0, .L101
 1601              	.LVL138:
 1602              	.L96:
 723:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1603              		.loc 1 723 1 view .LVU463
 1604 001c 70BD     		pop	{r4, r5, r6, pc}
 1605              	.LVL139:
 1606              	.L101:
 1607              	.LBB3:
 718:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_link_next(block);
 1608              		.loc 1 718 9 is_stmt 1 view .LVU464
 718:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_link_next(block);
 1609              		.loc 1 718 44 is_stmt 0 view .LVU465
 1610 001e 2946     		mov	r1, r5
 1611 0020 2046     		mov	r0, r4
 1612 0022 FFF7FEFF 		bl	block_split
 1613              	.LVL140:
 1614 0026 0546     		mov	r5, r0
 1615              	.LVL141:
 719:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1616              		.loc 1 719 9 is_stmt 1 view .LVU466
 1617 0028 2046     		mov	r0, r4
 1618              	.LVL142:
 719:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1619              		.loc 1 719 9 is_stmt 0 view .LVU467
 1620 002a FFF7FEFF 		bl	block_link_next
 1621              	.LVL143:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 46


 720:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, remaining_block);
 1622              		.loc 1 720 9 is_stmt 1 view .LVU468
 1623 002e 2846     		mov	r0, r5
 1624 0030 FFF7FEFF 		bl	block_set_prev_free
 1625              	.LVL144:
 721:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1626              		.loc 1 721 9 view .LVU469
 1627 0034 2946     		mov	r1, r5
 1628 0036 3046     		mov	r0, r6
 1629 0038 FFF7FEFF 		bl	block_insert
 1630              	.LVL145:
 1631              	.LBE3:
 723:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1632              		.loc 1 723 1 is_stmt 0 view .LVU470
 1633 003c EEE7     		b	.L96
 1634              		.cfi_endproc
 1635              	.LFE37:
 1637              		.section	.text.block_prepare_used,"ax",%progbits
 1638              		.align	1
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	block_prepare_used:
 1644              	.LVL146:
 1645              	.LFB41:
 782:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     void * p = 0;
 1646              		.loc 1 782 1 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 782:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     void * p = 0;
 1650              		.loc 1 782 1 is_stmt 0 view .LVU472
 1651 0000 10B5     		push	{r4, lr}
 1652              	.LCFI18:
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 4, -8
 1655              		.cfi_offset 14, -4
 783:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block) {
 1656              		.loc 1 783 5 is_stmt 1 view .LVU473
 1657              	.LVL147:
 784:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(size && "size must be non-zero");
 1658              		.loc 1 784 5 view .LVU474
 784:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(size && "size must be non-zero");
 1659              		.loc 1 784 7 is_stmt 0 view .LVU475
 1660 0002 0C46     		mov	r4, r1
 1661 0004 51B1     		cbz	r1, .L106
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1662              		.loc 1 785 9 is_stmt 1 view .LVU476
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1663              		.loc 1 785 9 view .LVU477
 1664 0006 02B9     		cbnz	r2, .L104
 1665              	.L105:
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1666              		.loc 1 785 9 discriminator 1 view .LVU478
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1667              		.loc 1 785 9 discriminator 1 view .LVU479
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 47


 1668              		.loc 1 785 9 discriminator 1 view .LVU480
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1669              		.loc 1 785 9 discriminator 1 view .LVU481
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1670              		.loc 1 785 9 discriminator 1 view .LVU482
 1671 0008 FEE7     		b	.L105
 1672              	.L104:
 785:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_trim_free(control, block, size);
 1673              		.loc 1 785 9 discriminator 2 view .LVU483
 786:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_mark_as_used(block);
 1674              		.loc 1 786 9 discriminator 2 view .LVU484
 1675 000a FFF7FEFF 		bl	block_trim_free
 1676              	.LVL148:
 787:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         p = block_to_ptr(block);
 1677              		.loc 1 787 9 discriminator 2 view .LVU485
 1678 000e 2046     		mov	r0, r4
 1679 0010 FFF7FEFF 		bl	block_mark_as_used
 1680              	.LVL149:
 788:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1681              		.loc 1 788 9 discriminator 2 view .LVU486
 788:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1682              		.loc 1 788 13 is_stmt 0 discriminator 2 view .LVU487
 1683 0014 2046     		mov	r0, r4
 1684 0016 FFF7FEFF 		bl	block_to_ptr
 1685              	.LVL150:
 1686              	.L102:
 791:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1687              		.loc 1 791 1 view .LVU488
 1688 001a 10BD     		pop	{r4, pc}
 1689              	.LVL151:
 1690              	.L106:
 783:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block) {
 1691              		.loc 1 783 12 view .LVU489
 1692 001c 0846     		mov	r0, r1
 1693              	.LVL152:
 790:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1694              		.loc 1 790 5 is_stmt 1 view .LVU490
 790:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1695              		.loc 1 790 12 is_stmt 0 view .LVU491
 1696 001e FCE7     		b	.L102
 1697              		.cfi_endproc
 1698              	.LFE41:
 1700              		.section	.text.block_trim_free_leading,"ax",%progbits
 1701              		.align	1
 1702              		.syntax unified
 1703              		.thumb
 1704              		.thumb_func
 1706              	block_trim_free_leading:
 1707              	.LVL153:
 1708              	.LFB39:
 740:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * remaining_block = block;
 1709              		.loc 1 740 1 is_stmt 1 view -0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 740:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * remaining_block = block;
 1713              		.loc 1 740 1 is_stmt 0 view .LVU493
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 48


 1714 0000 70B5     		push	{r4, r5, r6, lr}
 1715              	.LCFI19:
 1716              		.cfi_def_cfa_offset 16
 1717              		.cfi_offset 4, -16
 1718              		.cfi_offset 5, -12
 1719              		.cfi_offset 6, -8
 1720              		.cfi_offset 14, -4
 1721 0002 0646     		mov	r6, r0
 1722 0004 0C46     		mov	r4, r1
 1723 0006 1546     		mov	r5, r2
 741:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 1724              		.loc 1 741 5 is_stmt 1 view .LVU494
 1725              	.LVL154:
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 1726              		.loc 1 742 5 view .LVU495
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 1727              		.loc 1 742 8 is_stmt 0 view .LVU496
 1728 0008 1146     		mov	r1, r2
 1729              	.LVL155:
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 1730              		.loc 1 742 8 view .LVU497
 1731 000a 2046     		mov	r0, r4
 1732              	.LVL156:
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 1733              		.loc 1 742 8 view .LVU498
 1734 000c FFF7FEFF 		bl	block_can_split
 1735              	.LVL157:
 742:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* We want the 2nd block. */
 1736              		.loc 1 742 7 view .LVU499
 1737 0010 08B9     		cbnz	r0, .L111
 1738              	.LVL158:
 1739              	.L109:
 751:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1740              		.loc 1 751 5 is_stmt 1 view .LVU500
 752:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1741              		.loc 1 752 1 is_stmt 0 view .LVU501
 1742 0012 2046     		mov	r0, r4
 1743 0014 70BD     		pop	{r4, r5, r6, pc}
 1744              	.LVL159:
 1745              	.L111:
 744:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1746              		.loc 1 744 9 is_stmt 1 view .LVU502
 744:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1747              		.loc 1 744 27 is_stmt 0 view .LVU503
 1748 0016 291F     		subs	r1, r5, #4
 1749 0018 2046     		mov	r0, r4
 1750 001a FFF7FEFF 		bl	block_split
 1751              	.LVL160:
 1752 001e 0546     		mov	r5, r0
 1753              	.LVL161:
 745:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1754              		.loc 1 745 9 is_stmt 1 view .LVU504
 1755 0020 FFF7FEFF 		bl	block_set_prev_free
 1756              	.LVL162:
 747:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, block);
 1757              		.loc 1 747 9 view .LVU505
 1758 0024 2046     		mov	r0, r4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 49


 1759 0026 FFF7FEFF 		bl	block_link_next
 1760              	.LVL163:
 748:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1761              		.loc 1 748 9 view .LVU506
 1762 002a 2146     		mov	r1, r4
 1763 002c 3046     		mov	r0, r6
 1764 002e FFF7FEFF 		bl	block_insert
 1765              	.LVL164:
 744:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1766              		.loc 1 744 27 is_stmt 0 view .LVU507
 1767 0032 2C46     		mov	r4, r5
 1768              	.LVL165:
 744:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_free(remaining_block);
 1769              		.loc 1 744 27 view .LVU508
 1770 0034 EDE7     		b	.L109
 1771              		.cfi_endproc
 1772              	.LFE39:
 1774              		.section	.text.block_remove,"ax",%progbits
 1775              		.align	1
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1780              	block_remove:
 1781              	.LVL166:
 1782              	.LFB30:
 633:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1783              		.loc 1 633 1 is_stmt 1 view -0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 8
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 633:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl, sl;
 1787              		.loc 1 633 1 is_stmt 0 view .LVU510
 1788 0000 30B5     		push	{r4, r5, lr}
 1789              	.LCFI20:
 1790              		.cfi_def_cfa_offset 12
 1791              		.cfi_offset 4, -12
 1792              		.cfi_offset 5, -8
 1793              		.cfi_offset 14, -4
 1794 0002 83B0     		sub	sp, sp, #12
 1795              	.LCFI21:
 1796              		.cfi_def_cfa_offset 24
 1797 0004 0546     		mov	r5, r0
 1798 0006 0C46     		mov	r4, r1
 634:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(block_size(block), &fl, &sl);
 1799              		.loc 1 634 5 is_stmt 1 view .LVU511
 635:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     remove_free_block(control, block, fl, sl);
 1800              		.loc 1 635 5 view .LVU512
 1801 0008 0846     		mov	r0, r1
 1802              	.LVL167:
 635:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     remove_free_block(control, block, fl, sl);
 1803              		.loc 1 635 5 is_stmt 0 view .LVU513
 1804 000a FFF7FEFF 		bl	block_size
 1805              	.LVL168:
 635:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     remove_free_block(control, block, fl, sl);
 1806              		.loc 1 635 5 view .LVU514
 1807 000e 6A46     		mov	r2, sp
 1808 0010 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 50


 1809 0012 FFF7FEFF 		bl	mapping_insert
 1810              	.LVL169:
 636:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1811              		.loc 1 636 5 is_stmt 1 view .LVU515
 1812 0016 009B     		ldr	r3, [sp]
 1813 0018 019A     		ldr	r2, [sp, #4]
 1814 001a 2146     		mov	r1, r4
 1815 001c 2846     		mov	r0, r5
 1816 001e FFF7FEFF 		bl	remove_free_block
 1817              	.LVL170:
 637:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1818              		.loc 1 637 1 is_stmt 0 view .LVU516
 1819 0022 03B0     		add	sp, sp, #12
 1820              	.LCFI22:
 1821              		.cfi_def_cfa_offset 12
 1822              		@ sp needed
 1823 0024 30BD     		pop	{r4, r5, pc}
 637:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1824              		.loc 1 637 1 view .LVU517
 1825              		.cfi_endproc
 1826              	.LFE30:
 1828              		.section	.text.block_merge_prev,"ax",%progbits
 1829              		.align	1
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1834              	block_merge_prev:
 1835              	.LVL171:
 1836              	.LFB35:
 686:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_is_prev_free(block)) {
 1837              		.loc 1 686 1 is_stmt 1 view -0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 686:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_is_prev_free(block)) {
 1841              		.loc 1 686 1 is_stmt 0 view .LVU519
 1842 0000 70B5     		push	{r4, r5, r6, lr}
 1843              	.LCFI23:
 1844              		.cfi_def_cfa_offset 16
 1845              		.cfi_offset 4, -16
 1846              		.cfi_offset 5, -12
 1847              		.cfi_offset 6, -8
 1848              		.cfi_offset 14, -4
 1849 0002 0546     		mov	r5, r0
 1850 0004 0C46     		mov	r4, r1
 687:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * prev = block_prev(block);
 1851              		.loc 1 687 5 is_stmt 1 view .LVU520
 687:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * prev = block_prev(block);
 1852              		.loc 1 687 8 is_stmt 0 view .LVU521
 1853 0006 0846     		mov	r0, r1
 1854              	.LVL172:
 687:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * prev = block_prev(block);
 1855              		.loc 1 687 8 view .LVU522
 1856 0008 FFF7FEFF 		bl	block_is_prev_free
 1857              	.LVL173:
 687:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * prev = block_prev(block);
 1858              		.loc 1 687 7 view .LVU523
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 51


 1859 000c 08B9     		cbnz	r0, .L121
 1860              	.L115:
 695:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 1861              		.loc 1 695 5 is_stmt 1 view .LVU524
 696:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1862              		.loc 1 696 1 is_stmt 0 view .LVU525
 1863 000e 2046     		mov	r0, r4
 1864 0010 70BD     		pop	{r4, r5, r6, pc}
 1865              	.LVL174:
 1866              	.L121:
 1867              	.LBB4:
 688:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(prev && "prev physical block can't be null");
 1868              		.loc 1 688 9 is_stmt 1 view .LVU526
 688:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(prev && "prev physical block can't be null");
 1869              		.loc 1 688 33 is_stmt 0 view .LVU527
 1870 0012 2046     		mov	r0, r4
 1871 0014 FFF7FEFF 		bl	block_prev
 1872              	.LVL175:
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1873              		.loc 1 689 9 is_stmt 1 view .LVU528
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1874              		.loc 1 689 9 view .LVU529
 1875 0018 0646     		mov	r6, r0
 1876 001a 18B1     		cbz	r0, .L117
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1877              		.loc 1 689 9 discriminator 2 view .LVU530
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1878              		.loc 1 690 9 discriminator 2 view .LVU531
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1879              		.loc 1 690 9 discriminator 2 view .LVU532
 1880 001c FFF7FEFF 		bl	block_is_free
 1881              	.LVL176:
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1882              		.loc 1 690 9 is_stmt 0 discriminator 2 view .LVU533
 1883 0020 08B9     		cbnz	r0, .L118
 1884              	.L119:
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1885              		.loc 1 690 9 is_stmt 1 discriminator 2 view .LVU534
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1886              		.loc 1 690 9 discriminator 2 view .LVU535
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1887              		.loc 1 690 9 discriminator 2 view .LVU536
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1888              		.loc 1 690 9 discriminator 2 view .LVU537
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1889              		.loc 1 690 9 discriminator 2 view .LVU538
 1890 0022 FEE7     		b	.L119
 1891              	.LVL177:
 1892              	.L117:
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1893              		.loc 1 689 9 discriminator 1 view .LVU539
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1894              		.loc 1 689 9 discriminator 1 view .LVU540
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1895              		.loc 1 689 9 discriminator 1 view .LVU541
 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1896              		.loc 1 689 9 discriminator 1 view .LVU542
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 52


 689:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1897              		.loc 1 689 9 discriminator 1 view .LVU543
 1898 0024 FEE7     		b	.L117
 1899              	.LVL178:
 1900              	.L118:
 690:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, prev);
 1901              		.loc 1 690 9 discriminator 4 view .LVU544
 691:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_absorb(prev, block);
 1902              		.loc 1 691 9 discriminator 4 view .LVU545
 1903 0026 3146     		mov	r1, r6
 1904 0028 2846     		mov	r0, r5
 1905 002a FFF7FEFF 		bl	block_remove
 1906              	.LVL179:
 692:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1907              		.loc 1 692 9 discriminator 4 view .LVU546
 692:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1908              		.loc 1 692 17 is_stmt 0 discriminator 4 view .LVU547
 1909 002e 2146     		mov	r1, r4
 1910 0030 3046     		mov	r0, r6
 1911 0032 FFF7FEFF 		bl	block_absorb
 1912              	.LVL180:
 1913 0036 0446     		mov	r4, r0
 1914              	.LVL181:
 692:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1915              		.loc 1 692 17 discriminator 4 view .LVU548
 1916 0038 E9E7     		b	.L115
 1917              	.LBE4:
 1918              		.cfi_endproc
 1919              	.LFE35:
 1921              		.section	.text.block_merge_next,"ax",%progbits
 1922              		.align	1
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1927              	block_merge_next:
 1928              	.LVL182:
 1929              	.LFB36:
 700:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_next(block);
 1930              		.loc 1 700 1 is_stmt 1 view -0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 700:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next = block_next(block);
 1934              		.loc 1 700 1 is_stmt 0 view .LVU550
 1935 0000 70B5     		push	{r4, r5, r6, lr}
 1936              	.LCFI24:
 1937              		.cfi_def_cfa_offset 16
 1938              		.cfi_offset 4, -16
 1939              		.cfi_offset 5, -12
 1940              		.cfi_offset 6, -8
 1941              		.cfi_offset 14, -4
 1942 0002 0546     		mov	r5, r0
 1943 0004 0C46     		mov	r4, r1
 701:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next physical block can't be null");
 1944              		.loc 1 701 5 is_stmt 1 view .LVU551
 701:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next physical block can't be null");
 1945              		.loc 1 701 29 is_stmt 0 view .LVU552
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 53


 1946 0006 0846     		mov	r0, r1
 1947              	.LVL183:
 701:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(next && "next physical block can't be null");
 1948              		.loc 1 701 29 view .LVU553
 1949 0008 FFF7FEFF 		bl	block_next
 1950              	.LVL184:
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1951              		.loc 1 702 5 is_stmt 1 view .LVU554
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1952              		.loc 1 702 5 view .LVU555
 1953 000c 40B1     		cbz	r0, .L124
 1954 000e 0646     		mov	r6, r0
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1955              		.loc 1 702 5 discriminator 2 view .LVU556
 704:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_last(block) && "previous block can't be last");
 1956              		.loc 1 704 5 discriminator 2 view .LVU557
 704:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_last(block) && "previous block can't be last");
 1957              		.loc 1 704 8 is_stmt 0 discriminator 2 view .LVU558
 1958 0010 FFF7FEFF 		bl	block_is_free
 1959              	.LVL185:
 704:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_last(block) && "previous block can't be last");
 1960              		.loc 1 704 7 discriminator 2 view .LVU559
 1961 0014 70B1     		cbz	r0, .L125
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1962              		.loc 1 705 9 is_stmt 1 view .LVU560
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1963              		.loc 1 705 9 view .LVU561
 1964 0016 2046     		mov	r0, r4
 1965 0018 FFF7FEFF 		bl	block_is_last
 1966              	.LVL186:
 1967 001c 08B1     		cbz	r0, .L126
 1968              	.L127:
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1969              		.loc 1 705 9 discriminator 2 view .LVU562
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1970              		.loc 1 705 9 discriminator 2 view .LVU563
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1971              		.loc 1 705 9 discriminator 2 view .LVU564
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1972              		.loc 1 705 9 discriminator 2 view .LVU565
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1973              		.loc 1 705 9 discriminator 2 view .LVU566
 1974 001e FEE7     		b	.L127
 1975              	.LVL187:
 1976              	.L124:
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1977              		.loc 1 702 5 discriminator 1 view .LVU567
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1978              		.loc 1 702 5 discriminator 1 view .LVU568
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1979              		.loc 1 702 5 discriminator 1 view .LVU569
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1980              		.loc 1 702 5 discriminator 1 view .LVU570
 702:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 1981              		.loc 1 702 5 discriminator 1 view .LVU571
 1982 0020 FEE7     		b	.L124
 1983              	.LVL188:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 54


 1984              	.L126:
 705:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_remove(control, next);
 1985              		.loc 1 705 9 discriminator 2 view .LVU572
 706:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_absorb(block, next);
 1986              		.loc 1 706 9 discriminator 2 view .LVU573
 1987 0022 3146     		mov	r1, r6
 1988 0024 2846     		mov	r0, r5
 1989 0026 FFF7FEFF 		bl	block_remove
 1990              	.LVL189:
 707:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1991              		.loc 1 707 9 discriminator 2 view .LVU574
 707:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 1992              		.loc 1 707 17 is_stmt 0 discriminator 2 view .LVU575
 1993 002a 3146     		mov	r1, r6
 1994 002c 2046     		mov	r0, r4
 1995 002e FFF7FEFF 		bl	block_absorb
 1996              	.LVL190:
 1997 0032 0446     		mov	r4, r0
 1998              	.LVL191:
 1999              	.L125:
 710:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2000              		.loc 1 710 5 is_stmt 1 view .LVU576
 711:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2001              		.loc 1 711 1 is_stmt 0 view .LVU577
 2002 0034 2046     		mov	r0, r4
 2003 0036 70BD     		pop	{r4, r5, r6, pc}
 711:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2004              		.loc 1 711 1 view .LVU578
 2005              		.cfi_endproc
 2006              	.LFE36:
 2008              		.section	.text.block_trim_used,"ax",%progbits
 2009              		.align	1
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2014              	block_trim_used:
 2015              	.LVL192:
 2016              	.LFB38:
 727:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_free(block) && "block must be used");
 2017              		.loc 1 727 1 is_stmt 1 view -0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 727:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_free(block) && "block must be used");
 2021              		.loc 1 727 1 is_stmt 0 view .LVU580
 2022 0000 70B5     		push	{r4, r5, r6, lr}
 2023              	.LCFI25:
 2024              		.cfi_def_cfa_offset 16
 2025              		.cfi_offset 4, -16
 2026              		.cfi_offset 5, -12
 2027              		.cfi_offset 6, -8
 2028              		.cfi_offset 14, -4
 2029 0002 0646     		mov	r6, r0
 2030 0004 0C46     		mov	r4, r1
 2031 0006 1546     		mov	r5, r2
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2032              		.loc 1 728 5 is_stmt 1 view .LVU581
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 55


 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2033              		.loc 1 728 5 view .LVU582
 2034 0008 0846     		mov	r0, r1
 2035              	.LVL193:
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2036              		.loc 1 728 5 is_stmt 0 view .LVU583
 2037 000a FFF7FEFF 		bl	block_is_free
 2038              	.LVL194:
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2039              		.loc 1 728 5 view .LVU584
 2040 000e 00B1     		cbz	r0, .L130
 2041              	.L131:
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2042              		.loc 1 728 5 is_stmt 1 discriminator 1 view .LVU585
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2043              		.loc 1 728 5 discriminator 1 view .LVU586
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2044              		.loc 1 728 5 discriminator 1 view .LVU587
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2045              		.loc 1 728 5 discriminator 1 view .LVU588
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2046              		.loc 1 728 5 discriminator 1 view .LVU589
 2047 0010 FEE7     		b	.L131
 2048              	.L130:
 728:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block_can_split(block, size)) {
 2049              		.loc 1 728 5 discriminator 2 view .LVU590
 729:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If the next block is free, we must coalesce. */
 2050              		.loc 1 729 5 discriminator 2 view .LVU591
 729:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If the next block is free, we must coalesce. */
 2051              		.loc 1 729 8 is_stmt 0 discriminator 2 view .LVU592
 2052 0012 2946     		mov	r1, r5
 2053 0014 2046     		mov	r0, r4
 2054 0016 FFF7FEFF 		bl	block_can_split
 2055              	.LVL195:
 729:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If the next block is free, we must coalesce. */
 2056              		.loc 1 729 7 discriminator 2 view .LVU593
 2057 001a 00B9     		cbnz	r0, .L134
 2058              	.LVL196:
 2059              	.L129:
 737:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2060              		.loc 1 737 1 view .LVU594
 2061 001c 70BD     		pop	{r4, r5, r6, pc}
 2062              	.LVL197:
 2063              	.L134:
 2064              	.LBB5:
 731:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_used(remaining_block);
 2065              		.loc 1 731 9 is_stmt 1 view .LVU595
 731:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_set_prev_used(remaining_block);
 2066              		.loc 1 731 44 is_stmt 0 view .LVU596
 2067 001e 2946     		mov	r1, r5
 2068 0020 2046     		mov	r0, r4
 2069 0022 FFF7FEFF 		bl	block_split
 2070              	.LVL198:
 2071 0026 0446     		mov	r4, r0
 2072              	.LVL199:
 732:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2073              		.loc 1 732 9 is_stmt 1 view .LVU597
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 56


 2074 0028 FFF7FEFF 		bl	block_set_prev_used
 2075              	.LVL200:
 734:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, remaining_block);
 2076              		.loc 1 734 9 view .LVU598
 734:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, remaining_block);
 2077              		.loc 1 734 27 is_stmt 0 view .LVU599
 2078 002c 2146     		mov	r1, r4
 2079 002e 3046     		mov	r0, r6
 2080 0030 FFF7FEFF 		bl	block_merge_next
 2081              	.LVL201:
 2082 0034 0146     		mov	r1, r0
 2083              	.LVL202:
 735:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2084              		.loc 1 735 9 is_stmt 1 view .LVU600
 2085 0036 3046     		mov	r0, r6
 2086              	.LVL203:
 735:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2087              		.loc 1 735 9 is_stmt 0 view .LVU601
 2088 0038 FFF7FEFF 		bl	block_insert
 2089              	.LVL204:
 735:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2090              		.loc 1 735 9 view .LVU602
 2091              	.LBE5:
 737:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2092              		.loc 1 737 1 view .LVU603
 2093 003c EEE7     		b	.L129
 2094              		.cfi_endproc
 2095              	.LFE38:
 2097              		.section	.text.mapping_search,"ax",%progbits
 2098              		.align	1
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2103              	mapping_search:
 2104              	.LVL205:
 2105              	.LFB26:
 546:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size >= SMALL_BLOCK_SIZE) {
 2106              		.loc 1 546 1 is_stmt 1 view -0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
 546:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(size >= SMALL_BLOCK_SIZE) {
 2110              		.loc 1 546 1 is_stmt 0 view .LVU605
 2111 0000 70B5     		push	{r4, r5, r6, lr}
 2112              	.LCFI26:
 2113              		.cfi_def_cfa_offset 16
 2114              		.cfi_offset 4, -16
 2115              		.cfi_offset 5, -12
 2116              		.cfi_offset 6, -8
 2117              		.cfi_offset 14, -4
 2118 0002 0446     		mov	r4, r0
 2119 0004 0D46     		mov	r5, r1
 2120 0006 1646     		mov	r6, r2
 547:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 2121              		.loc 1 547 5 is_stmt 1 view .LVU606
 547:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 2122              		.loc 1 547 7 is_stmt 0 view .LVU607
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 57


 2123 0008 7F28     		cmp	r0, #127
 2124 000a 06D9     		bls	.L136
 2125              	.LBB6:
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 2126              		.loc 1 548 9 is_stmt 1 view .LVU608
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 2127              		.loc 1 548 37 is_stmt 0 view .LVU609
 2128 000c FFF7FEFF 		bl	tlsf_fls
 2129              	.LVL206:
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 2130              		.loc 1 548 58 view .LVU610
 2131 0010 0538     		subs	r0, r0, #5
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 2132              		.loc 1 548 33 view .LVU611
 2133 0012 0123     		movs	r3, #1
 2134 0014 8340     		lsls	r3, r3, r0
 548:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size += round;
 2135              		.loc 1 548 82 view .LVU612
 2136 0016 013B     		subs	r3, r3, #1
 2137              	.LVL207:
 549:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2138              		.loc 1 549 9 is_stmt 1 view .LVU613
 549:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2139              		.loc 1 549 14 is_stmt 0 view .LVU614
 2140 0018 1C44     		add	r4, r4, r3
 2141              	.LVL208:
 2142              	.L136:
 549:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2143              		.loc 1 549 14 view .LVU615
 2144              	.LBE6:
 551:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2145              		.loc 1 551 5 is_stmt 1 view .LVU616
 2146 001a 3246     		mov	r2, r6
 2147 001c 2946     		mov	r1, r5
 2148 001e 2046     		mov	r0, r4
 2149 0020 FFF7FEFF 		bl	mapping_insert
 2150              	.LVL209:
 552:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2151              		.loc 1 552 1 is_stmt 0 view .LVU617
 2152 0024 70BD     		pop	{r4, r5, r6, pc}
 552:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2153              		.loc 1 552 1 view .LVU618
 2154              		.cfi_endproc
 2155              	.LFE26:
 2157              		.section	.text.tlsf_ffs,"ax",%progbits
 2158              		.align	1
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2163              	tlsf_ffs:
 2164              	.LVL210:
 2165              	.LFB2:
  95:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return __builtin_ffs(word) - 1;
 2166              		.loc 1 95 1 is_stmt 1 view -0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 58


 2170              		@ link register save eliminated.
  95:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return __builtin_ffs(word) - 1;
 2171              		.loc 1 95 1 is_stmt 0 view .LVU620
 2172 0000 0346     		mov	r3, r0
  96:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2173              		.loc 1 96 5 is_stmt 1 view .LVU621
  96:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2174              		.loc 1 96 12 is_stmt 0 view .LVU622
 2175 0002 90FAA0F0 		rbit	r0, r0
 2176              	.LVL211:
  96:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2177              		.loc 1 96 12 view .LVU623
 2178 0006 B0FA80F0 		clz	r0, r0
 2179 000a 0BB9     		cbnz	r3, .L139
 2180 000c 4FF0FF30 		mov	r0, #-1
 2181              	.L139:
  97:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2182              		.loc 1 97 1 view .LVU624
 2183 0010 7047     		bx	lr
 2184              		.cfi_endproc
 2185              	.LFE2:
 2187              		.section	.text.search_suitable_block,"ax",%progbits
 2188              		.align	1
 2189              		.syntax unified
 2190              		.thumb
 2191              		.thumb_func
 2193              	search_suitable_block:
 2194              	.LVL212:
 2195              	.LFB27:
 555:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = *fli;
 2196              		.loc 1 555 1 is_stmt 1 view -0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
 555:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = *fli;
 2200              		.loc 1 555 1 is_stmt 0 view .LVU626
 2201 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2202              	.LCFI27:
 2203              		.cfi_def_cfa_offset 24
 2204              		.cfi_offset 3, -24
 2205              		.cfi_offset 4, -20
 2206              		.cfi_offset 5, -16
 2207              		.cfi_offset 6, -12
 2208              		.cfi_offset 7, -8
 2209              		.cfi_offset 14, -4
 2210 0002 0446     		mov	r4, r0
 2211 0004 1646     		mov	r6, r2
 556:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int sl = *sli;
 2212              		.loc 1 556 5 is_stmt 1 view .LVU627
 556:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int sl = *sli;
 2213              		.loc 1 556 9 is_stmt 0 view .LVU628
 2214 0006 0D68     		ldr	r5, [r1]
 2215              	.LVL213:
 557:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2216              		.loc 1 557 5 is_stmt 1 view .LVU629
 557:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2217              		.loc 1 557 9 is_stmt 0 view .LVU630
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 59


 2218 0008 1268     		ldr	r2, [r2]
 2219              	.LVL214:
 563:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(!sl_map) {
 2220              		.loc 1 563 5 is_stmt 1 view .LVU631
 563:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(!sl_map) {
 2221              		.loc 1 563 45 is_stmt 0 view .LVU632
 2222 000a 2B1D     		adds	r3, r5, #4
 2223 000c 00EB8303 		add	r3, r0, r3, lsl #2
 2224 0010 5868     		ldr	r0, [r3, #4]
 2225              	.LVL215:
 563:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(!sl_map) {
 2226              		.loc 1 563 57 view .LVU633
 2227 0012 4FF0FF33 		mov	r3, #-1
 2228 0016 9340     		lsls	r3, r3, r2
 2229              	.LVL216:
 564:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* No block exists. Search in the next largest first-level list. */
 2230              		.loc 1 564 5 is_stmt 1 view .LVU634
 564:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* No block exists. Search in the next largest first-level list. */
 2231              		.loc 1 564 7 is_stmt 0 view .LVU635
 2232 0018 1840     		ands	r0, r0, r3
 2233              	.LVL217:
 564:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* No block exists. Search in the next largest first-level list. */
 2234              		.loc 1 564 7 view .LVU636
 2235 001a 11D1     		bne	.L141
 2236 001c 0F46     		mov	r7, r1
 2237              	.LBB7:
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 2238              		.loc 1 566 9 is_stmt 1 view .LVU637
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 2239              		.loc 1 566 44 is_stmt 0 view .LVU638
 2240 001e 2069     		ldr	r0, [r4, #16]
 2241              	.LVL218:
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 2242              		.loc 1 566 70 view .LVU639
 2243 0020 0135     		adds	r5, r5, #1
 2244              	.LVL219:
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 2245              		.loc 1 566 63 view .LVU640
 2246 0022 4FF0FF33 		mov	r3, #-1
 2247              	.LVL220:
 566:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(!fl_map) {
 2248              		.loc 1 566 63 view .LVU641
 2249 0026 AB40     		lsls	r3, r3, r5
 2250              	.LVL221:
 567:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* No free blocks available, memory has been exhausted. */
 2251              		.loc 1 567 9 is_stmt 1 view .LVU642
 567:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* No free blocks available, memory has been exhausted. */
 2252              		.loc 1 567 11 is_stmt 0 view .LVU643
 2253 0028 1840     		ands	r0, r0, r3
 2254              	.LVL222:
 567:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* No free blocks available, memory has been exhausted. */
 2255              		.loc 1 567 11 view .LVU644
 2256 002a 13D0     		beq	.L144
 572:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         *fli = fl;
 2257              		.loc 1 572 9 is_stmt 1 view .LVU645
 572:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         *fli = fl;
 2258              		.loc 1 572 14 is_stmt 0 view .LVU646
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 60


 2259 002c FFF7FEFF 		bl	tlsf_ffs
 2260              	.LVL223:
 572:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         *fli = fl;
 2261              		.loc 1 572 14 view .LVU647
 2262 0030 0546     		mov	r5, r0
 2263              	.LVL224:
 573:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl_map = control->sl_bitmap[fl];
 2264              		.loc 1 573 9 is_stmt 1 view .LVU648
 573:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         sl_map = control->sl_bitmap[fl];
 2265              		.loc 1 573 14 is_stmt 0 view .LVU649
 2266 0032 3860     		str	r0, [r7]
 574:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2267              		.loc 1 574 9 is_stmt 1 view .LVU650
 574:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2268              		.loc 1 574 16 is_stmt 0 view .LVU651
 2269 0034 031D     		adds	r3, r0, #4
 2270 0036 04EB8303 		add	r3, r4, r3, lsl #2
 2271 003a 5868     		ldr	r0, [r3, #4]
 2272              	.LVL225:
 574:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2273              		.loc 1 574 16 view .LVU652
 2274              	.LBE7:
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2275              		.loc 1 576 5 is_stmt 1 view .LVU653
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2276              		.loc 1 576 5 view .LVU654
 2277 003c 00B9     		cbnz	r0, .L141
 2278              	.L143:
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2279              		.loc 1 576 5 discriminator 1 view .LVU655
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2280              		.loc 1 576 5 discriminator 1 view .LVU656
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2281              		.loc 1 576 5 discriminator 1 view .LVU657
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2282              		.loc 1 576 5 discriminator 1 view .LVU658
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2283              		.loc 1 576 5 discriminator 1 view .LVU659
 2284 003e FEE7     		b	.L143
 2285              	.LVL226:
 2286              	.L141:
 576:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     sl = tlsf_ffs(sl_map);
 2287              		.loc 1 576 5 discriminator 2 view .LVU660
 577:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 2288              		.loc 1 577 5 discriminator 2 view .LVU661
 577:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     *sli = sl;
 2289              		.loc 1 577 10 is_stmt 0 discriminator 2 view .LVU662
 2290 0040 FFF7FEFF 		bl	tlsf_ffs
 2291              	.LVL227:
 578:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2292              		.loc 1 578 5 is_stmt 1 discriminator 2 view .LVU663
 578:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2293              		.loc 1 578 10 is_stmt 0 discriminator 2 view .LVU664
 2294 0044 3060     		str	r0, [r6]
 581:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2295              		.loc 1 581 5 is_stmt 1 discriminator 2 view .LVU665
 581:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 61


 2296              		.loc 1 581 31 is_stmt 0 discriminator 2 view .LVU666
 2297 0046 00EB4510 		add	r0, r0, r5, lsl #5
 2298              	.LVL228:
 581:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2299              		.loc 1 581 31 discriminator 2 view .LVU667
 2300 004a 0E30     		adds	r0, r0, #14
 2301 004c 04EB8004 		add	r4, r4, r0, lsl #2
 2302              	.LVL229:
 581:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2303              		.loc 1 581 31 discriminator 2 view .LVU668
 2304 0050 6068     		ldr	r0, [r4, #4]
 2305              	.LVL230:
 2306              	.L140:
 582:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2307              		.loc 1 582 1 view .LVU669
 2308 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2309              	.LVL231:
 2310              	.L144:
 2311              	.LBB8:
 569:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 2312              		.loc 1 569 20 view .LVU670
 2313 0054 0020     		movs	r0, #0
 2314              	.LVL232:
 569:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 2315              		.loc 1 569 20 view .LVU671
 2316 0056 FCE7     		b	.L140
 2317              	.LBE8:
 2318              		.cfi_endproc
 2319              	.LFE27:
 2321              		.section	.text.block_locate_free,"ax",%progbits
 2322              		.align	1
 2323              		.syntax unified
 2324              		.thumb
 2325              		.thumb_func
 2327              	block_locate_free:
 2328              	.LVL233:
 2329              	.LFB40:
 755:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = 0, sl = 0;
 2330              		.loc 1 755 1 is_stmt 1 view -0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 8
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 755:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = 0, sl = 0;
 2334              		.loc 1 755 1 is_stmt 0 view .LVU673
 2335 0000 70B5     		push	{r4, r5, r6, lr}
 2336              	.LCFI28:
 2337              		.cfi_def_cfa_offset 16
 2338              		.cfi_offset 4, -16
 2339              		.cfi_offset 5, -12
 2340              		.cfi_offset 6, -8
 2341              		.cfi_offset 14, -4
 2342 0002 82B0     		sub	sp, sp, #8
 2343              	.LCFI29:
 2344              		.cfi_def_cfa_offset 24
 756:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = 0;
 2345              		.loc 1 756 5 is_stmt 1 view .LVU674
 756:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = 0;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 62


 2346              		.loc 1 756 9 is_stmt 0 view .LVU675
 2347 0004 0023     		movs	r3, #0
 2348 0006 0193     		str	r3, [sp, #4]
 756:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = 0;
 2349              		.loc 1 756 17 view .LVU676
 2350 0008 0093     		str	r3, [sp]
 757:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2351              		.loc 1 757 5 is_stmt 1 view .LVU677
 2352              	.LVL234:
 759:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         mapping_search(size, &fl, &sl);
 2353              		.loc 1 759 5 view .LVU678
 759:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         mapping_search(size, &fl, &sl);
 2354              		.loc 1 759 7 is_stmt 0 view .LVU679
 2355 000a E1B1     		cbz	r1, .L150
 2356 000c 0446     		mov	r4, r0
 2357 000e 0E46     		mov	r6, r1
 760:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2358              		.loc 1 760 9 is_stmt 1 view .LVU680
 2359 0010 6A46     		mov	r2, sp
 2360 0012 01A9     		add	r1, sp, #4
 2361              	.LVL235:
 760:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2362              		.loc 1 760 9 is_stmt 0 view .LVU681
 2363 0014 3046     		mov	r0, r6
 2364              	.LVL236:
 760:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2365              		.loc 1 760 9 view .LVU682
 2366 0016 FFF7FEFF 		bl	mapping_search
 2367              	.LVL237:
 768:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block = search_suitable_block(control, &fl, &sl);
 2368              		.loc 1 768 9 is_stmt 1 view .LVU683
 768:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block = search_suitable_block(control, &fl, &sl);
 2369              		.loc 1 768 15 is_stmt 0 view .LVU684
 2370 001a 019B     		ldr	r3, [sp, #4]
 768:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block = search_suitable_block(control, &fl, &sl);
 2371              		.loc 1 768 11 view .LVU685
 2372 001c 092B     		cmp	r3, #9
 2373 001e 16DC     		bgt	.L151
 769:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 2374              		.loc 1 769 13 is_stmt 1 view .LVU686
 769:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 2375              		.loc 1 769 21 is_stmt 0 view .LVU687
 2376 0020 6A46     		mov	r2, sp
 2377 0022 01A9     		add	r1, sp, #4
 2378 0024 2046     		mov	r0, r4
 2379 0026 FFF7FEFF 		bl	search_suitable_block
 2380              	.LVL238:
 773:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_size(block) >= size);
 2381              		.loc 1 773 5 is_stmt 1 view .LVU688
 773:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(block_size(block) >= size);
 2382              		.loc 1 773 7 is_stmt 0 view .LVU689
 2383 002a 0546     		mov	r5, r0
 2384 002c 60B1     		cbz	r0, .L146
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2385              		.loc 1 774 9 is_stmt 1 view .LVU690
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2386              		.loc 1 774 9 view .LVU691
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 63


 2387 002e FFF7FEFF 		bl	block_size
 2388              	.LVL239:
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2389              		.loc 1 774 9 is_stmt 0 view .LVU692
 2390 0032 B042     		cmp	r0, r6
 2391 0034 00D2     		bcs	.L148
 2392              	.L149:
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2393              		.loc 1 774 9 is_stmt 1 discriminator 1 view .LVU693
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2394              		.loc 1 774 9 discriminator 1 view .LVU694
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2395              		.loc 1 774 9 discriminator 1 view .LVU695
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2396              		.loc 1 774 9 discriminator 1 view .LVU696
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2397              		.loc 1 774 9 discriminator 1 view .LVU697
 2398 0036 FEE7     		b	.L149
 2399              	.L148:
 774:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         remove_free_block(control, block, fl, sl);
 2400              		.loc 1 774 9 discriminator 2 view .LVU698
 775:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 2401              		.loc 1 775 9 discriminator 2 view .LVU699
 2402 0038 009B     		ldr	r3, [sp]
 2403 003a 019A     		ldr	r2, [sp, #4]
 2404 003c 2946     		mov	r1, r5
 2405 003e 2046     		mov	r0, r4
 2406 0040 FFF7FEFF 		bl	remove_free_block
 2407              	.LVL240:
 2408 0044 00E0     		b	.L146
 2409              	.LVL241:
 2410              	.L150:
 757:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2411              		.loc 1 757 22 is_stmt 0 view .LVU700
 2412 0046 0025     		movs	r5, #0
 2413              	.LVL242:
 2414              	.L146:
 779:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2415              		.loc 1 779 1 view .LVU701
 2416 0048 2846     		mov	r0, r5
 2417 004a 02B0     		add	sp, sp, #8
 2418              	.LCFI30:
 2419              		.cfi_remember_state
 2420              		.cfi_def_cfa_offset 16
 2421              		@ sp needed
 2422 004c 70BD     		pop	{r4, r5, r6, pc}
 2423              	.LVL243:
 2424              	.L151:
 2425              	.LCFI31:
 2426              		.cfi_restore_state
 757:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2427              		.loc 1 757 22 view .LVU702
 2428 004e 0025     		movs	r5, #0
 2429              	.LVL244:
 778:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2430              		.loc 1 778 5 is_stmt 1 view .LVU703
 778:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 64


 2431              		.loc 1 778 12 is_stmt 0 view .LVU704
 2432 0050 FAE7     		b	.L146
 2433              		.cfi_endproc
 2434              	.LFE40:
 2436              		.section	.text.lv_tlsf_check,"ax",%progbits
 2437              		.align	1
 2438              		.global	lv_tlsf_check
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2443              	lv_tlsf_check:
 2444              	.LVL245:
 2445              	.LFB44:
 839:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int i, j;
 2446              		.loc 1 839 1 is_stmt 1 view -0
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 8
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 839:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int i, j;
 2450              		.loc 1 839 1 is_stmt 0 view .LVU706
 2451 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2452              	.LCFI32:
 2453              		.cfi_def_cfa_offset 24
 2454              		.cfi_offset 4, -24
 2455              		.cfi_offset 5, -20
 2456              		.cfi_offset 6, -16
 2457              		.cfi_offset 7, -12
 2458              		.cfi_offset 8, -8
 2459              		.cfi_offset 14, -4
 2460 0004 82B0     		sub	sp, sp, #8
 2461              	.LCFI33:
 2462              		.cfi_def_cfa_offset 32
 2463 0006 0546     		mov	r5, r0
 840:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2464              		.loc 1 840 5 is_stmt 1 view .LVU707
 842:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int status = 0;
 2465              		.loc 1 842 5 view .LVU708
 2466              	.LVL246:
 843:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2467              		.loc 1 843 5 view .LVU709
 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 2468              		.loc 1 846 5 view .LVU710
 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 2469              		.loc 1 846 11 is_stmt 0 view .LVU711
 2470 0008 0026     		movs	r6, #0
 2471              	.LVL247:
 2472              	.L154:
 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 2473              		.loc 1 846 18 is_stmt 1 discriminator 1 view .LVU712
 2474 000a 092E     		cmp	r6, #9
 2475 000c 4FDC     		bgt	.L181
 847:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int fl_map = control->fl_bitmap & (1U << i);
 2476              		.loc 1 847 15 is_stmt 0 view .LVU713
 2477 000e 0027     		movs	r7, #0
 2478              	.L178:
 2479              	.LVL248:
 847:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int fl_map = control->fl_bitmap & (1U << i);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 65


 2480              		.loc 1 847 22 is_stmt 1 discriminator 1 view .LVU714
 2481 0010 1F2F     		cmp	r7, #31
 2482 0012 4ADC     		bgt	.L182
 2483              	.LBB9:
 848:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_list = control->sl_bitmap[i];
 2484              		.loc 1 848 13 view .LVU715
 848:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_list = control->sl_bitmap[i];
 2485              		.loc 1 848 57 is_stmt 0 view .LVU716
 2486 0014 0123     		movs	r3, #1
 2487 0016 03FA06F0 		lsl	r0, r3, r6
 2488              	.LVL249:
 849:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_map = sl_list & (1U << j);
 2489              		.loc 1 849 13 is_stmt 1 view .LVU717
 849:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int sl_map = sl_list & (1U << j);
 2490              		.loc 1 849 51 is_stmt 0 view .LVU718
 2491 001a 311D     		adds	r1, r6, #4
 2492 001c 05EB8101 		add	r1, r5, r1, lsl #2
 2493 0020 4A68     		ldr	r2, [r1, #4]
 2494              	.LVL250:
 850:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const block_header_t * block = control->blocks[i][j];
 2495              		.loc 1 850 13 is_stmt 1 view .LVU719
 850:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const block_header_t * block = control->blocks[i][j];
 2496              		.loc 1 850 46 is_stmt 0 view .LVU720
 2497 0022 BB40     		lsls	r3, r3, r7
 850:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const block_header_t * block = control->blocks[i][j];
 2498              		.loc 1 850 40 view .LVU721
 2499 0024 1340     		ands	r3, r3, r2
 2500              	.LVL251:
 851:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2501              		.loc 1 851 13 is_stmt 1 view .LVU722
 851:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2502              		.loc 1 851 36 is_stmt 0 view .LVU723
 2503 0026 07EB4611 		add	r1, r7, r6, lsl #5
 2504 002a 0E31     		adds	r1, r1, #14
 2505 002c 05EB8101 		add	r1, r5, r1, lsl #2
 2506 0030 4C68     		ldr	r4, [r1, #4]
 2507              	.LVL252:
 854:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!sl_map && "second-level map must be null");
 2508              		.loc 1 854 13 is_stmt 1 view .LVU724
 854:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!sl_map && "second-level map must be null");
 2509              		.loc 1 854 15 is_stmt 0 view .LVU725
 2510 0032 2969     		ldr	r1, [r5, #16]
 2511 0034 0142     		tst	r1, r0
 2512 0036 00D1     		bne	.L155
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2513              		.loc 1 855 17 is_stmt 1 view .LVU726
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2514              		.loc 1 855 17 view .LVU727
 2515 0038 1BB9     		cbnz	r3, .L156
 2516              	.L155:
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2517              		.loc 1 855 72 discriminator 5 view .LVU728
 858:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block == &control->block_null && "block list must be null");
 2518              		.loc 1 858 13 discriminator 5 view .LVU729
 858:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block == &control->block_null && "block list must be null");
 2519              		.loc 1 858 15 is_stmt 0 discriminator 5 view .LVU730
 2520 003a 1BB9     		cbnz	r3, .L157
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 66


 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2521              		.loc 1 859 17 is_stmt 1 view .LVU731
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2522              		.loc 1 859 17 view .LVU732
 2523 003c A542     		cmp	r5, r4
 2524 003e 32D0     		beq	.L158
 2525              	.L159:
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2526              		.loc 1 859 17 discriminator 2 view .LVU733
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2527              		.loc 1 859 17 discriminator 2 view .LVU734
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2528              		.loc 1 859 17 discriminator 2 view .LVU735
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2529              		.loc 1 859 17 discriminator 2 view .LVU736
 859:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 continue;
 2530              		.loc 1 859 17 discriminator 2 view .LVU737
 2531 0040 FEE7     		b	.L159
 2532              	.LVL253:
 2533              	.L156:
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2534              		.loc 1 855 17 discriminator 1 view .LVU738
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2535              		.loc 1 855 17 discriminator 1 view .LVU739
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2536              		.loc 1 855 17 discriminator 1 view .LVU740
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2537              		.loc 1 855 17 discriminator 1 view .LVU741
 855:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2538              		.loc 1 855 17 discriminator 1 view .LVU742
 2539 0042 FEE7     		b	.L156
 2540              	.L157:
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2541              		.loc 1 864 13 view .LVU743
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2542              		.loc 1 864 13 view .LVU744
 2543 0044 3AB3     		cbz	r2, .L161
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2544              		.loc 1 864 13 discriminator 5 view .LVU745
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2545              		.loc 1 864 13 discriminator 5 view .LVU746
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2546              		.loc 1 864 73 discriminator 5 view .LVU747
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2547              		.loc 1 865 13 discriminator 5 view .LVU748
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2548              		.loc 1 865 13 discriminator 5 view .LVU749
 2549 0046 A542     		cmp	r5, r4
 2550 0048 26D0     		beq	.L163
 2551              	.LVL254:
 2552              	.L162:
 867:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 int fli, sli;
 2553              		.loc 1 867 25 view .LVU750
 2554 004a A542     		cmp	r5, r4
 2555 004c 2BD0     		beq	.L158
 2556              	.LBB10:
 868:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_free(block) && "block should be free");
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 67


 2557              		.loc 1 868 17 view .LVU751
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2558              		.loc 1 869 17 view .LVU752
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2559              		.loc 1 869 17 view .LVU753
 2560 004e 2046     		mov	r0, r4
 2561 0050 FFF7FEFF 		bl	block_is_free
 2562              	.LVL255:
 2563 0054 08B3     		cbz	r0, .L165
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2564              		.loc 1 869 17 discriminator 9 view .LVU754
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2565              		.loc 1 869 17 discriminator 9 view .LVU755
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2566              		.loc 1 869 76 discriminator 9 view .LVU756
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2567              		.loc 1 870 17 discriminator 9 view .LVU757
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2568              		.loc 1 870 17 discriminator 9 view .LVU758
 2569 0056 2046     		mov	r0, r4
 2570 0058 FFF7FEFF 		bl	block_is_prev_free
 2571              	.LVL256:
 2572 005c F0B9     		cbnz	r0, .L167
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2573              		.loc 1 870 17 discriminator 5 view .LVU759
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2574              		.loc 1 870 17 discriminator 5 view .LVU760
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2575              		.loc 1 870 90 discriminator 5 view .LVU761
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2576              		.loc 1 871 17 discriminator 5 view .LVU762
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2577              		.loc 1 871 17 discriminator 5 view .LVU763
 2578 005e 2046     		mov	r0, r4
 2579 0060 FFF7FEFF 		bl	block_next
 2580              	.LVL257:
 2581 0064 8046     		mov	r8, r0
 2582 0066 FFF7FEFF 		bl	block_is_free
 2583              	.LVL258:
 2584 006a C0B9     		cbnz	r0, .L169
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2585              		.loc 1 871 17 discriminator 5 view .LVU764
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2586              		.loc 1 871 17 discriminator 5 view .LVU765
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2587              		.loc 1 871 97 discriminator 5 view .LVU766
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2588              		.loc 1 872 17 discriminator 5 view .LVU767
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2589              		.loc 1 872 17 discriminator 5 view .LVU768
 2590 006c 4046     		mov	r0, r8
 2591 006e FFF7FEFF 		bl	block_is_prev_free
 2592              	.LVL259:
 2593 0072 A8B1     		cbz	r0, .L171
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2594              		.loc 1 872 17 discriminator 9 view .LVU769
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 68


 2595              		.loc 1 872 17 discriminator 9 view .LVU770
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2596              		.loc 1 872 93 discriminator 9 view .LVU771
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2597              		.loc 1 873 17 discriminator 9 view .LVU772
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2598              		.loc 1 873 17 discriminator 9 view .LVU773
 2599 0074 2046     		mov	r0, r4
 2600 0076 FFF7FEFF 		bl	block_size
 2601              	.LVL260:
 2602 007a 0B28     		cmp	r0, #11
 2603 007c 11D9     		bls	.L173
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2604              		.loc 1 873 17 discriminator 9 view .LVU774
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2605              		.loc 1 873 17 discriminator 9 view .LVU775
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2606              		.loc 1 873 93 discriminator 9 view .LVU776
 875:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2607              		.loc 1 875 17 discriminator 9 view .LVU777
 2608 007e 01AA     		add	r2, sp, #4
 2609 0080 6946     		mov	r1, sp
 2610 0082 FFF7FEFF 		bl	mapping_insert
 2611              	.LVL261:
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2612              		.loc 1 876 17 discriminator 9 view .LVU778
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2613              		.loc 1 876 17 discriminator 9 view .LVU779
 2614 0086 009B     		ldr	r3, [sp]
 2615 0088 B342     		cmp	r3, r6
 2616 008a 0BD1     		bne	.L174
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2617              		.loc 1 876 17 is_stmt 0 discriminator 2 view .LVU780
 2618 008c 019B     		ldr	r3, [sp, #4]
 2619 008e BB42     		cmp	r3, r7
 2620 0090 08D1     		bne	.L174
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2621              		.loc 1 876 17 is_stmt 1 discriminator 9 view .LVU781
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2622              		.loc 1 876 17 discriminator 9 view .LVU782
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2623              		.loc 1 876 88 discriminator 9 view .LVU783
 877:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2624              		.loc 1 877 17 discriminator 9 view .LVU784
 877:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2625              		.loc 1 877 23 is_stmt 0 discriminator 9 view .LVU785
 2626 0092 A468     		ldr	r4, [r4, #8]
 2627              	.LVL262:
 877:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2628              		.loc 1 877 23 discriminator 9 view .LVU786
 2629 0094 D9E7     		b	.L162
 2630              	.LVL263:
 2631              	.L161:
 877:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 2632              		.loc 1 877 23 discriminator 9 view .LVU787
 2633              	.LBE10:
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 69


 2634              		.loc 1 864 13 is_stmt 1 discriminator 3 view .LVU788
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2635              		.loc 1 864 13 discriminator 3 view .LVU789
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2636              		.loc 1 864 13 discriminator 3 view .LVU790
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2637              		.loc 1 864 13 discriminator 3 view .LVU791
 864:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_insist(block != &control->block_null && "block should not be null");
 2638              		.loc 1 864 13 discriminator 3 view .LVU792
 2639 0096 FEE7     		b	.L161
 2640              	.L163:
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2641              		.loc 1 865 13 discriminator 4 view .LVU793
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2642              		.loc 1 865 13 discriminator 4 view .LVU794
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2643              		.loc 1 865 13 discriminator 4 view .LVU795
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2644              		.loc 1 865 13 discriminator 4 view .LVU796
 865:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2645              		.loc 1 865 13 discriminator 4 view .LVU797
 2646 0098 FEE7     		b	.L163
 2647              	.LVL264:
 2648              	.L165:
 2649              	.LBB11:
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2650              		.loc 1 869 17 discriminator 5 view .LVU798
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2651              		.loc 1 869 17 discriminator 5 view .LVU799
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2652              		.loc 1 869 17 discriminator 5 view .LVU800
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2653              		.loc 1 869 17 discriminator 5 view .LVU801
 869:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2654              		.loc 1 869 17 discriminator 5 view .LVU802
 2655 009a FEE7     		b	.L165
 2656              	.L167:
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2657              		.loc 1 870 17 discriminator 6 view .LVU803
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2658              		.loc 1 870 17 discriminator 6 view .LVU804
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2659              		.loc 1 870 17 discriminator 6 view .LVU805
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2660              		.loc 1 870 17 discriminator 6 view .LVU806
 870:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2661              		.loc 1 870 17 discriminator 6 view .LVU807
 2662 009c FEE7     		b	.L167
 2663              	.L169:
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2664              		.loc 1 871 17 discriminator 7 view .LVU808
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2665              		.loc 1 871 17 discriminator 7 view .LVU809
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2666              		.loc 1 871 17 discriminator 7 view .LVU810
 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2667              		.loc 1 871 17 discriminator 7 view .LVU811
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 70


 871:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2668              		.loc 1 871 17 discriminator 7 view .LVU812
 2669 009e FEE7     		b	.L169
 2670              	.L171:
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2671              		.loc 1 872 17 discriminator 8 view .LVU813
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2672              		.loc 1 872 17 discriminator 8 view .LVU814
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2673              		.loc 1 872 17 discriminator 8 view .LVU815
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2674              		.loc 1 872 17 discriminator 8 view .LVU816
 872:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2675              		.loc 1 872 17 discriminator 8 view .LVU817
 2676 00a0 FEE7     		b	.L171
 2677              	.L173:
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2678              		.loc 1 873 17 discriminator 9 view .LVU818
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2679              		.loc 1 873 17 discriminator 9 view .LVU819
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2680              		.loc 1 873 17 discriminator 9 view .LVU820
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2681              		.loc 1 873 17 discriminator 9 view .LVU821
 873:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2682              		.loc 1 873 17 discriminator 9 view .LVU822
 2683 00a2 FEE7     		b	.L173
 2684              	.L174:
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2685              		.loc 1 876 17 discriminator 10 view .LVU823
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2686              		.loc 1 876 17 discriminator 10 view .LVU824
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2687              		.loc 1 876 17 discriminator 10 view .LVU825
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2688              		.loc 1 876 17 discriminator 10 view .LVU826
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2689              		.loc 1 876 17 discriminator 10 view .LVU827
 2690 00a4 FEE7     		b	.L174
 2691              	.L158:
 876:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block = block->next_free;
 2692              		.loc 1 876 17 is_stmt 0 discriminator 10 view .LVU828
 2693              	.LBE11:
 2694              	.LBE9:
 847:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int fl_map = control->fl_bitmap & (1U << i);
 2695              		.loc 1 847 40 is_stmt 1 discriminator 2 view .LVU829
 2696 00a6 0137     		adds	r7, r7, #1
 2697              	.LVL265:
 847:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const int fl_map = control->fl_bitmap & (1U << i);
 2698              		.loc 1 847 40 is_stmt 0 discriminator 2 view .LVU830
 2699 00a8 B2E7     		b	.L178
 2700              	.LVL266:
 2701              	.L182:
 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 2702              		.loc 1 846 36 is_stmt 1 discriminator 2 view .LVU831
 2703 00aa 0136     		adds	r6, r6, #1
 2704              	.LVL267:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 71


 846:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         for(j = 0; j < SL_INDEX_COUNT; ++j) {
 2705              		.loc 1 846 36 is_stmt 0 discriminator 2 view .LVU832
 2706 00ac ADE7     		b	.L154
 2707              	.LVL268:
 2708              	.L181:
 882:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2709              		.loc 1 882 5 is_stmt 1 view .LVU833
 883:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2710              		.loc 1 883 1 is_stmt 0 view .LVU834
 2711 00ae 0020     		movs	r0, #0
 2712 00b0 02B0     		add	sp, sp, #8
 2713              	.LCFI34:
 2714              		.cfi_def_cfa_offset 24
 2715              		@ sp needed
 2716 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 883:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 2717              		.loc 1 883 1 view .LVU835
 2718              		.cfi_endproc
 2719              	.LFE44:
 2721              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2722              		.align	1
 2723              		.global	lv_tlsf_walk_pool
 2724              		.syntax unified
 2725              		.thumb
 2726              		.thumb_func
 2728              	lv_tlsf_walk_pool:
 2729              	.LVL269:
 2730              	.LFB46:
 892:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 893:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void * user)
 894:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2731              		.loc 1 894 1 is_stmt 1 view -0
 2732              		.cfi_startproc
 2733              		@ args = 0, pretend = 0, frame = 0
 2734              		@ frame_needed = 0, uses_anonymous_args = 0
 2735              		.loc 1 894 1 is_stmt 0 view .LVU837
 2736 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2737              	.LCFI35:
 2738              		.cfi_def_cfa_offset 24
 2739              		.cfi_offset 4, -24
 2740              		.cfi_offset 5, -20
 2741              		.cfi_offset 6, -16
 2742              		.cfi_offset 7, -12
 2743              		.cfi_offset 8, -8
 2744              		.cfi_offset 14, -4
 2745 0004 1746     		mov	r7, r2
 895:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2746              		.loc 1 895 5 is_stmt 1 view .LVU838
 2747              		.loc 1 895 50 is_stmt 0 view .LVU839
 2748 0006 8846     		mov	r8, r1
 2749 0008 29B1     		cbz	r1, .L190
 2750              	.L184:
 2751              	.LVL270:
 896:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block =
 2752              		.loc 1 896 5 is_stmt 1 discriminator 4 view .LVU840
 897:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         offset_to_block(pool, -(int)block_header_overhead);
 2753              		.loc 1 897 9 is_stmt 0 discriminator 4 view .LVU841
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 72


 2754 000a 6FF00301 		mvn	r1, #3
 2755              	.LVL271:
 2756              		.loc 1 897 9 discriminator 4 view .LVU842
 2757 000e FFF7FEFF 		bl	offset_to_block
 2758              	.LVL272:
 2759              		.loc 1 897 9 discriminator 4 view .LVU843
 2760 0012 0446     		mov	r4, r0
 2761              	.LVL273:
 898:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 899:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     while(block && !block_is_last(block)) {
 2762              		.loc 1 899 5 is_stmt 1 discriminator 4 view .LVU844
 2763              		.loc 1 899 10 is_stmt 0 discriminator 4 view .LVU845
 2764 0014 18E0     		b	.L185
 2765              	.LVL274:
 2766              	.L190:
 895:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block =
 2767              		.loc 1 895 50 view .LVU846
 2768 0016 DFF84080 		ldr	r8, .L191
 2769 001a F6E7     		b	.L184
 2770              	.LVL275:
 2771              	.L187:
 900:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2772              		.loc 1 900 9 is_stmt 1 view .LVU847
 2773 001c 2046     		mov	r0, r4
 2774 001e FFF7FEFF 		bl	block_to_ptr
 2775              	.LVL276:
 2776 0022 0546     		mov	r5, r0
 2777 0024 2046     		mov	r0, r4
 2778 0026 FFF7FEFF 		bl	block_size
 2779              	.LVL277:
 2780 002a 0646     		mov	r6, r0
 901:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block_to_ptr(block),
 902:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block_size(block),
 903:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             !block_is_free(block),
 2781              		.loc 1 903 14 is_stmt 0 view .LVU848
 2782 002c 2046     		mov	r0, r4
 2783 002e FFF7FEFF 		bl	block_is_free
 2784              	.LVL278:
 900:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2785              		.loc 1 900 9 view .LVU849
 2786 0032 3B46     		mov	r3, r7
 2787 0034 B0FA80F2 		clz	r2, r0
 2788 0038 5209     		lsrs	r2, r2, #5
 2789 003a 3146     		mov	r1, r6
 2790 003c 2846     		mov	r0, r5
 2791 003e C047     		blx	r8
 2792              	.LVL279:
 904:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             user);
 905:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_next(block);
 2793              		.loc 1 905 9 is_stmt 1 view .LVU850
 2794              		.loc 1 905 17 is_stmt 0 view .LVU851
 2795 0040 2046     		mov	r0, r4
 2796 0042 FFF7FEFF 		bl	block_next
 2797              	.LVL280:
 2798 0046 0446     		mov	r4, r0
 2799              	.LVL281:
 2800              	.L185:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 73


 899:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2801              		.loc 1 899 17 is_stmt 1 view .LVU852
 2802 0048 24B1     		cbz	r4, .L183
 899:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2803              		.loc 1 899 21 is_stmt 0 discriminator 1 view .LVU853
 2804 004a 2046     		mov	r0, r4
 899:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2805              		.loc 1 899 21 discriminator 1 view .LVU854
 2806 004c FFF7FEFF 		bl	block_is_last
 2807              	.LVL282:
 899:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         pool_walker(
 2808              		.loc 1 899 17 discriminator 1 view .LVU855
 2809 0050 0028     		cmp	r0, #0
 2810 0052 E3D0     		beq	.L187
 2811              	.L183:
 906:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 907:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2812              		.loc 1 907 1 view .LVU856
 2813 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2814              	.LVL283:
 2815              	.L192:
 2816              		.loc 1 907 1 view .LVU857
 2817              		.align	2
 2818              	.L191:
 2819 0058 00000000 		.word	default_walker
 2820              		.cfi_endproc
 2821              	.LFE46:
 2823              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2824              		.align	1
 2825              		.global	lv_tlsf_block_size
 2826              		.syntax unified
 2827              		.thumb
 2828              		.thumb_func
 2830              	lv_tlsf_block_size:
 2831              	.LVL284:
 2832              	.LFB47:
 908:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 909:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_block_size(void * ptr)
 910:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2833              		.loc 1 910 1 is_stmt 1 view -0
 2834              		.cfi_startproc
 2835              		@ args = 0, pretend = 0, frame = 0
 2836              		@ frame_needed = 0, uses_anonymous_args = 0
 911:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     size_t size = 0;
 2837              		.loc 1 911 5 view .LVU859
 912:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(ptr) {
 2838              		.loc 1 912 5 view .LVU860
 2839              		.loc 1 912 7 is_stmt 0 view .LVU861
 2840 0000 28B1     		cbz	r0, .L195
 910:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     size_t size = 0;
 2841              		.loc 1 910 1 view .LVU862
 2842 0002 08B5     		push	{r3, lr}
 2843              	.LCFI36:
 2844              		.cfi_def_cfa_offset 8
 2845              		.cfi_offset 3, -8
 2846              		.cfi_offset 14, -4
 2847              	.LBB12:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 74


 913:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const block_header_t * block = block_from_ptr(ptr);
 2848              		.loc 1 913 9 is_stmt 1 view .LVU863
 2849              		.loc 1 913 40 is_stmt 0 view .LVU864
 2850 0004 FFF7FEFF 		bl	block_from_ptr
 2851              	.LVL285:
 914:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size = block_size(block);
 2852              		.loc 1 914 9 is_stmt 1 view .LVU865
 2853              		.loc 1 914 16 is_stmt 0 view .LVU866
 2854 0008 FFF7FEFF 		bl	block_size
 2855              	.LVL286:
 2856              		.loc 1 914 16 view .LVU867
 2857              	.LBE12:
 915:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 916:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return size;
 917:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2858              		.loc 1 917 1 view .LVU868
 2859 000c 08BD     		pop	{r3, pc}
 2860              	.LVL287:
 2861              	.L195:
 2862              	.LCFI37:
 2863              		.cfi_def_cfa_offset 0
 2864              		.cfi_restore 3
 2865              		.cfi_restore 14
 911:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(ptr) {
 2866              		.loc 1 911 12 view .LVU869
 2867 000e 0020     		movs	r0, #0
 2868              	.LVL288:
 916:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2869              		.loc 1 916 5 is_stmt 1 view .LVU870
 2870              		.loc 1 917 1 is_stmt 0 view .LVU871
 2871 0010 7047     		bx	lr
 2872              		.cfi_endproc
 2873              	.LFE47:
 2875              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
 2876              		.align	1
 2877              		.global	lv_tlsf_check_pool
 2878              		.syntax unified
 2879              		.thumb
 2880              		.thumb_func
 2882              	lv_tlsf_check_pool:
 2883              	.LVL289:
 2884              	.LFB48:
 918:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 919:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 920:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2885              		.loc 1 920 1 is_stmt 1 view -0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 8
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              		.loc 1 920 1 is_stmt 0 view .LVU873
 2890 0000 00B5     		push	{lr}
 2891              	.LCFI38:
 2892              		.cfi_def_cfa_offset 4
 2893              		.cfi_offset 14, -4
 2894 0002 83B0     		sub	sp, sp, #12
 2895              	.LCFI39:
 2896              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 75


 921:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Check that the blocks are physically correct. */
 922:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     integrity_t integ = { 0, 0 };
 2897              		.loc 1 922 5 is_stmt 1 view .LVU874
 2898              		.loc 1 922 17 is_stmt 0 view .LVU875
 2899 0004 0023     		movs	r3, #0
 2900 0006 0093     		str	r3, [sp]
 2901 0008 0193     		str	r3, [sp, #4]
 923:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2902              		.loc 1 923 5 is_stmt 1 view .LVU876
 2903 000a 6A46     		mov	r2, sp
 2904 000c 0349     		ldr	r1, .L202
 2905 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2906              	.LVL290:
 924:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 925:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return integ.status;
 2907              		.loc 1 925 5 view .LVU877
 926:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2908              		.loc 1 926 1 is_stmt 0 view .LVU878
 2909 0012 0198     		ldr	r0, [sp, #4]
 2910 0014 03B0     		add	sp, sp, #12
 2911              	.LCFI40:
 2912              		.cfi_def_cfa_offset 4
 2913              		@ sp needed
 2914 0016 5DF804FB 		ldr	pc, [sp], #4
 2915              	.L203:
 2916 001a 00BF     		.align	2
 2917              	.L202:
 2918 001c 00000000 		.word	integrity_walker
 2919              		.cfi_endproc
 2920              	.LFE48:
 2922              		.section	.text.lv_tlsf_size,"ax",%progbits
 2923              		.align	1
 2924              		.global	lv_tlsf_size
 2925              		.syntax unified
 2926              		.thumb
 2927              		.thumb_func
 2929              	lv_tlsf_size:
 2930              	.LFB49:
 927:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 928:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 929:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 930:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 931:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 932:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_size(void)
 933:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2931              		.loc 1 933 1 is_stmt 1 view -0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              		@ link register save eliminated.
 934:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return sizeof(control_t);
 2936              		.loc 1 934 5 view .LVU880
 935:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2937              		.loc 1 935 1 is_stmt 0 view .LVU881
 2938 0000 40F23C50 		movw	r0, #1340
 2939 0004 7047     		bx	lr
 2940              		.cfi_endproc
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 76


 2941              	.LFE49:
 2943              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2944              		.align	1
 2945              		.global	lv_tlsf_align_size
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2950              	lv_tlsf_align_size:
 2951              	.LFB50:
 936:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 937:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 938:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2952              		.loc 1 938 1 is_stmt 1 view -0
 2953              		.cfi_startproc
 2954              		@ args = 0, pretend = 0, frame = 0
 2955              		@ frame_needed = 0, uses_anonymous_args = 0
 2956              		@ link register save eliminated.
 939:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return ALIGN_SIZE;
 2957              		.loc 1 939 5 view .LVU883
 940:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2958              		.loc 1 940 1 is_stmt 0 view .LVU884
 2959 0000 0420     		movs	r0, #4
 2960 0002 7047     		bx	lr
 2961              		.cfi_endproc
 2962              	.LFE50:
 2964              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2965              		.align	1
 2966              		.global	lv_tlsf_block_size_min
 2967              		.syntax unified
 2968              		.thumb
 2969              		.thumb_func
 2971              	lv_tlsf_block_size_min:
 2972              	.LFB51:
 941:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 942:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 943:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2973              		.loc 1 943 1 is_stmt 1 view -0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 0
 2976              		@ frame_needed = 0, uses_anonymous_args = 0
 2977              		@ link register save eliminated.
 944:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_size_min;
 2978              		.loc 1 944 5 view .LVU886
 945:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 2979              		.loc 1 945 1 is_stmt 0 view .LVU887
 2980 0000 0C20     		movs	r0, #12
 2981 0002 7047     		bx	lr
 2982              		.cfi_endproc
 2983              	.LFE51:
 2985              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2986              		.align	1
 2987              		.global	lv_tlsf_block_size_max
 2988              		.syntax unified
 2989              		.thumb
 2990              		.thumb_func
 2992              	lv_tlsf_block_size_max:
 2993              	.LFB52:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 77


 946:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 947:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 948:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 2994              		.loc 1 948 1 is_stmt 1 view -0
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 0, uses_anonymous_args = 0
 2998              		@ link register save eliminated.
 949:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_size_max;
 2999              		.loc 1 949 5 view .LVU889
 950:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3000              		.loc 1 950 1 is_stmt 0 view .LVU890
 3001 0000 4FF48030 		mov	r0, #65536
 3002 0004 7047     		bx	lr
 3003              		.cfi_endproc
 3004              	.LFE52:
 3006              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 3007              		.align	1
 3008              		.global	lv_tlsf_pool_overhead
 3009              		.syntax unified
 3010              		.thumb
 3011              		.thumb_func
 3013              	lv_tlsf_pool_overhead:
 3014              	.LFB53:
 951:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 952:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
 953:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 954:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 955:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** sentinel block.
 956:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
 957:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 958:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3015              		.loc 1 958 1 is_stmt 1 view -0
 3016              		.cfi_startproc
 3017              		@ args = 0, pretend = 0, frame = 0
 3018              		@ frame_needed = 0, uses_anonymous_args = 0
 3019              		@ link register save eliminated.
 959:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return 2 * block_header_overhead;
 3020              		.loc 1 959 5 view .LVU892
 960:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3021              		.loc 1 960 1 is_stmt 0 view .LVU893
 3022 0000 0820     		movs	r0, #8
 3023 0002 7047     		bx	lr
 3024              		.cfi_endproc
 3025              	.LFE53:
 3027              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 3028              		.align	1
 3029              		.global	lv_tlsf_alloc_overhead
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3034              	lv_tlsf_alloc_overhead:
 3035              	.LFB54:
 961:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 962:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 963:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3036              		.loc 1 963 1 is_stmt 1 view -0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 78


 3037              		.cfi_startproc
 3038              		@ args = 0, pretend = 0, frame = 0
 3039              		@ frame_needed = 0, uses_anonymous_args = 0
 3040              		@ link register save eliminated.
 964:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_header_overhead;
 3041              		.loc 1 964 5 view .LVU895
 965:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3042              		.loc 1 965 1 is_stmt 0 view .LVU896
 3043 0000 0420     		movs	r0, #4
 3044 0002 7047     		bx	lr
 3045              		.cfi_endproc
 3046              	.LFE54:
 3048              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3049              		.align	1
 3050              		.global	lv_tlsf_add_pool
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
 3055              	lv_tlsf_add_pool:
 3056              	.LVL291:
 3057              	.LFB55:
 966:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 967:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void * mem, size_t bytes)
 968:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3058              		.loc 1 968 1 is_stmt 1 view -0
 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 0
 3061              		@ frame_needed = 0, uses_anonymous_args = 0
 3062              		.loc 1 968 1 is_stmt 0 view .LVU898
 3063 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3064              	.LCFI41:
 3065              		.cfi_def_cfa_offset 24
 3066              		.cfi_offset 3, -24
 3067              		.cfi_offset 4, -20
 3068              		.cfi_offset 5, -16
 3069              		.cfi_offset 6, -12
 3070              		.cfi_offset 7, -8
 3071              		.cfi_offset 14, -4
 3072 0002 0746     		mov	r7, r0
 3073 0004 0C46     		mov	r4, r1
 3074 0006 1546     		mov	r5, r2
 969:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block;
 3075              		.loc 1 969 5 is_stmt 1 view .LVU899
 970:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * next;
 3076              		.loc 1 970 5 view .LVU900
 971:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 972:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t pool_overhead = lv_tlsf_pool_overhead();
 3077              		.loc 1 972 5 view .LVU901
 3078              		.loc 1 972 34 is_stmt 0 view .LVU902
 3079 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3080              	.LVL292:
 973:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3081              		.loc 1 973 5 is_stmt 1 view .LVU903
 3082              		.loc 1 973 31 is_stmt 0 view .LVU904
 3083 000c 0421     		movs	r1, #4
 3084 000e 281A     		subs	r0, r5, r0
 3085              	.LVL293:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 79


 3086              		.loc 1 973 31 view .LVU905
 3087 0010 FFF7FEFF 		bl	align_down
 3088              	.LVL294:
 974:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 975:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(((ptrdiff_t)mem % ALIGN_SIZE) != 0) {
 3089              		.loc 1 975 5 is_stmt 1 view .LVU906
 3090              		.loc 1 975 7 is_stmt 0 view .LVU907
 3091 0014 14F0030F 		tst	r4, #3
 3092 0018 28D1     		bne	.L212
 3093 001a 0546     		mov	r5, r0
 3094              	.LVL295:
 976:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
 977:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)ALIGN_SIZE);
 978:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         return 0;
 979:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 980:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 981:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(pool_bytes < block_size_min || pool_bytes > block_size_max) {
 3095              		.loc 1 981 5 is_stmt 1 view .LVU908
 3096              		.loc 1 981 36 is_stmt 0 view .LVU909
 3097 001c A0F10C02 		sub	r2, r0, #12
 3098              		.loc 1 981 7 view .LVU910
 3099 0020 4FF6F473 		movw	r3, #65524
 3100 0024 9A42     		cmp	r2, r3
 3101 0026 23D8     		bhi	.L213
 982:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (TLSF_64BIT)
 983:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n",
 984:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)(pool_overhead + block_size_min),
 985:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)((pool_overhead + block_size_max) / 256));
 986:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #else
 987:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n",
 988:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)(pool_overhead + block_size_min),
 989:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)(pool_overhead + block_size_max));
 990:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
 991:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         return 0;
 992:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 993:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 994:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
 995:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** Create the main free block. Offset the start of the block slightly
 996:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** so that the prev_phys_block field falls outside of the pool -
 997:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** it will never be used.
 998:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
 999:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3102              		.loc 1 999 5 is_stmt 1 view .LVU911
 3103              		.loc 1 999 13 is_stmt 0 view .LVU912
 3104 0028 6FF00301 		mvn	r1, #3
 3105 002c 2046     		mov	r0, r4
 3106              	.LVL296:
 3107              		.loc 1 999 13 view .LVU913
 3108 002e FFF7FEFF 		bl	offset_to_block
 3109              	.LVL297:
 3110 0032 0646     		mov	r6, r0
 3111              	.LVL298:
1000:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_size(block, pool_bytes);
 3112              		.loc 1 1000 5 is_stmt 1 view .LVU914
 3113 0034 2946     		mov	r1, r5
 3114 0036 FFF7FEFF 		bl	block_set_size
 3115              	.LVL299:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 80


1001:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_free(block);
 3116              		.loc 1 1001 5 view .LVU915
 3117 003a 3046     		mov	r0, r6
 3118 003c FFF7FEFF 		bl	block_set_free
 3119              	.LVL300:
1002:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_prev_used(block);
 3120              		.loc 1 1002 5 view .LVU916
 3121 0040 3046     		mov	r0, r6
 3122 0042 FFF7FEFF 		bl	block_set_prev_used
 3123              	.LVL301:
1003:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_insert(tlsf_cast(control_t *, tlsf), block);
 3124              		.loc 1 1003 5 view .LVU917
 3125 0046 3146     		mov	r1, r6
 3126 0048 3846     		mov	r0, r7
 3127 004a FFF7FEFF 		bl	block_insert
 3128              	.LVL302:
1004:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1005:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Split the block to create a zero-size sentinel block. */
1006:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     next = block_link_next(block);
 3129              		.loc 1 1006 5 view .LVU918
 3130              		.loc 1 1006 12 is_stmt 0 view .LVU919
 3131 004e 3046     		mov	r0, r6
 3132 0050 FFF7FEFF 		bl	block_link_next
 3133              	.LVL303:
 3134 0054 0546     		mov	r5, r0
 3135              	.LVL304:
1007:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_size(next, 0);
 3136              		.loc 1 1007 5 is_stmt 1 view .LVU920
 3137 0056 0021     		movs	r1, #0
 3138 0058 FFF7FEFF 		bl	block_set_size
 3139              	.LVL305:
1008:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_used(next);
 3140              		.loc 1 1008 5 view .LVU921
 3141 005c 2846     		mov	r0, r5
 3142 005e FFF7FEFF 		bl	block_set_used
 3143              	.LVL306:
1009:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_set_prev_free(next);
 3144              		.loc 1 1009 5 view .LVU922
 3145 0062 2846     		mov	r0, r5
 3146 0064 FFF7FEFF 		bl	block_set_prev_free
 3147              	.LVL307:
1010:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1011:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return mem;
 3148              		.loc 1 1011 5 view .LVU923
 3149              		.loc 1 1011 12 is_stmt 0 view .LVU924
 3150 0068 2046     		mov	r0, r4
 3151              	.LVL308:
 3152              	.L210:
1012:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3153              		.loc 1 1012 1 view .LVU925
 3154 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3155              	.LVL309:
 3156              	.L212:
 978:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3157              		.loc 1 978 16 view .LVU926
 3158 006c 0020     		movs	r0, #0
 3159              	.LVL310:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 81


 978:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3160              		.loc 1 978 16 view .LVU927
 3161 006e FCE7     		b	.L210
 3162              	.LVL311:
 3163              	.L213:
 991:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3164              		.loc 1 991 16 view .LVU928
 3165 0070 0020     		movs	r0, #0
 3166              	.LVL312:
 991:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3167              		.loc 1 991 16 view .LVU929
 3168 0072 FAE7     		b	.L210
 3169              		.cfi_endproc
 3170              	.LFE55:
 3172              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3173              		.align	1
 3174              		.global	lv_tlsf_remove_pool
 3175              		.syntax unified
 3176              		.thumb
 3177              		.thumb_func
 3179              	lv_tlsf_remove_pool:
 3180              	.LVL313:
 3181              	.LFB56:
1013:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1014:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1015:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3182              		.loc 1 1015 1 is_stmt 1 view -0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 8
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              		.loc 1 1015 1 is_stmt 0 view .LVU931
 3187 0000 70B5     		push	{r4, r5, r6, lr}
 3188              	.LCFI42:
 3189              		.cfi_def_cfa_offset 16
 3190              		.cfi_offset 4, -16
 3191              		.cfi_offset 5, -12
 3192              		.cfi_offset 6, -8
 3193              		.cfi_offset 14, -4
 3194 0002 82B0     		sub	sp, sp, #8
 3195              	.LCFI43:
 3196              		.cfi_def_cfa_offset 24
 3197 0004 0546     		mov	r5, r0
 3198 0006 0846     		mov	r0, r1
 3199              	.LVL314:
1016:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_t * control = tlsf_cast(control_t *, tlsf);
 3200              		.loc 1 1016 5 is_stmt 1 view .LVU932
1017:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = offset_to_block(pool, -(int)block_header_overhead);
 3201              		.loc 1 1017 5 view .LVU933
 3202              		.loc 1 1017 30 is_stmt 0 view .LVU934
 3203 0008 6FF00301 		mvn	r1, #3
 3204              	.LVL315:
 3205              		.loc 1 1017 30 view .LVU935
 3206 000c FFF7FEFF 		bl	offset_to_block
 3207              	.LVL316:
 3208              		.loc 1 1017 30 view .LVU936
 3209 0010 0446     		mov	r4, r0
 3210              	.LVL317:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 82


1018:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1019:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int fl = 0, sl = 0;
 3211              		.loc 1 1019 5 is_stmt 1 view .LVU937
 3212              		.loc 1 1019 9 is_stmt 0 view .LVU938
 3213 0012 0023     		movs	r3, #0
 3214 0014 0193     		str	r3, [sp, #4]
 3215              		.loc 1 1019 17 view .LVU939
 3216 0016 0093     		str	r3, [sp]
1020:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1021:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_is_free(block) && "block should be free");
 3217              		.loc 1 1021 5 is_stmt 1 view .LVU940
 3218              		.loc 1 1021 5 view .LVU941
 3219 0018 FFF7FEFF 		bl	block_is_free
 3220              	.LVL318:
 3221              		.loc 1 1021 5 is_stmt 0 view .LVU942
 3222 001c 00B9     		cbnz	r0, .L216
 3223              	.L217:
 3224              		.loc 1 1021 5 is_stmt 1 discriminator 1 view .LVU943
 3225              		.loc 1 1021 5 discriminator 1 view .LVU944
 3226              		.loc 1 1021 5 discriminator 1 view .LVU945
 3227              		.loc 1 1021 5 discriminator 1 view .LVU946
 3228              		.loc 1 1021 5 discriminator 1 view .LVU947
 3229 001e FEE7     		b	.L217
 3230              	.L216:
 3231              		.loc 1 1021 5 discriminator 4 view .LVU948
1022:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3232              		.loc 1 1022 5 discriminator 4 view .LVU949
 3233              		.loc 1 1022 5 discriminator 4 view .LVU950
 3234 0020 2046     		mov	r0, r4
 3235 0022 FFF7FEFF 		bl	block_next
 3236              	.LVL319:
 3237 0026 0646     		mov	r6, r0
 3238 0028 FFF7FEFF 		bl	block_is_free
 3239              	.LVL320:
 3240 002c 00B1     		cbz	r0, .L218
 3241              	.L219:
 3242              		.loc 1 1022 5 discriminator 2 view .LVU951
 3243              		.loc 1 1022 5 discriminator 2 view .LVU952
 3244              		.loc 1 1022 5 discriminator 2 view .LVU953
 3245              		.loc 1 1022 5 discriminator 2 view .LVU954
 3246              		.loc 1 1022 5 discriminator 2 view .LVU955
 3247 002e FEE7     		b	.L219
 3248              	.L218:
 3249              		.loc 1 1022 5 discriminator 2 view .LVU956
1023:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3250              		.loc 1 1023 5 discriminator 2 view .LVU957
 3251              		.loc 1 1023 5 discriminator 2 view .LVU958
 3252 0030 3046     		mov	r0, r6
 3253 0032 FFF7FEFF 		bl	block_size
 3254              	.LVL321:
 3255 0036 00B1     		cbz	r0, .L220
 3256              	.L221:
 3257              		.loc 1 1023 5 discriminator 3 view .LVU959
 3258              		.loc 1 1023 5 discriminator 3 view .LVU960
 3259              		.loc 1 1023 5 discriminator 3 view .LVU961
 3260              		.loc 1 1023 5 discriminator 3 view .LVU962
 3261              		.loc 1 1023 5 discriminator 3 view .LVU963
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 83


 3262 0038 FEE7     		b	.L221
 3263              	.L220:
 3264              		.loc 1 1023 5 discriminator 2 view .LVU964
1024:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1025:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     mapping_insert(block_size(block), &fl, &sl);
 3265              		.loc 1 1025 5 discriminator 2 view .LVU965
 3266 003a 2046     		mov	r0, r4
 3267 003c FFF7FEFF 		bl	block_size
 3268              	.LVL322:
 3269 0040 6A46     		mov	r2, sp
 3270 0042 01A9     		add	r1, sp, #4
 3271 0044 FFF7FEFF 		bl	mapping_insert
 3272              	.LVL323:
1026:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     remove_free_block(control, block, fl, sl);
 3273              		.loc 1 1026 5 discriminator 2 view .LVU966
 3274 0048 009B     		ldr	r3, [sp]
 3275 004a 019A     		ldr	r2, [sp, #4]
 3276 004c 2146     		mov	r1, r4
 3277 004e 2846     		mov	r0, r5
 3278 0050 FFF7FEFF 		bl	remove_free_block
 3279              	.LVL324:
1027:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3280              		.loc 1 1027 1 is_stmt 0 discriminator 2 view .LVU967
 3281 0054 02B0     		add	sp, sp, #8
 3282              	.LCFI44:
 3283              		.cfi_def_cfa_offset 16
 3284              		@ sp needed
 3285 0056 70BD     		pop	{r4, r5, r6, pc}
 3286              		.loc 1 1027 1 discriminator 2 view .LVU968
 3287              		.cfi_endproc
 3288              	.LFE56:
 3290              		.section	.text.lv_tlsf_create,"ax",%progbits
 3291              		.align	1
 3292              		.global	lv_tlsf_create
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3297              	lv_tlsf_create:
 3298              	.LVL325:
 3299              	.LFB57:
1028:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1029:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
1030:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** TLSF main interface.
1031:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
1032:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1033:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if _DEBUG
1034:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** int test_ffs_fls()
1035:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
1036:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Verify ffs/fls work properly. */
1037:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     int rv = 0;
1038:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1039:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1040:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1041:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1042:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1043:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1044:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 84


1045:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1046:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1047:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if defined (TLSF_64BIT)
1048:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1049:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1050:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1051:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
1052:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1053:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(rv) {
1054:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1055:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1056:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return rv;
1057:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
1058:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
1059:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1060:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void * mem)
1061:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3300              		.loc 1 1061 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1062:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if _DEBUG
1063:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(test_ffs_fls()) {
1064:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         return 0;
1065:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1066:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #endif
1067:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1068:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(((tlsfptr_t)mem % ALIGN_SIZE) != 0) {
 3304              		.loc 1 1068 5 view .LVU970
 3305              		.loc 1 1068 7 is_stmt 0 view .LVU971
 3306 0000 10F0030F 		tst	r0, #3
 3307 0004 05D1     		bne	.L225
1061:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** #if _DEBUG
 3308              		.loc 1 1061 1 view .LVU972
 3309 0006 10B5     		push	{r4, lr}
 3310              	.LCFI45:
 3311              		.cfi_def_cfa_offset 8
 3312              		.cfi_offset 4, -8
 3313              		.cfi_offset 14, -4
 3314 0008 0446     		mov	r4, r0
1069:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1070:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                (unsigned int)ALIGN_SIZE);
1071:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         return 0;
1072:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1073:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1074:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_constructor(tlsf_cast(control_t *, mem));
 3315              		.loc 1 1074 5 is_stmt 1 view .LVU973
 3316 000a FFF7FEFF 		bl	control_constructor
 3317              	.LVL326:
1075:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1076:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(lv_tlsf_t, mem);
 3318              		.loc 1 1076 5 view .LVU974
 3319              		.loc 1 1076 12 is_stmt 0 view .LVU975
 3320 000e 2046     		mov	r0, r4
1077:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3321              		.loc 1 1077 1 view .LVU976
 3322 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 85


 3323              	.LVL327:
 3324              	.L225:
 3325              	.LCFI46:
 3326              		.cfi_def_cfa_offset 0
 3327              		.cfi_restore 4
 3328              		.cfi_restore 14
1071:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3329              		.loc 1 1071 16 view .LVU977
 3330 0012 0020     		movs	r0, #0
 3331              	.LVL328:
 3332              		.loc 1 1077 1 view .LVU978
 3333 0014 7047     		bx	lr
 3334              		.cfi_endproc
 3335              	.LFE57:
 3337              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3338              		.align	1
 3339              		.global	lv_tlsf_create_with_pool
 3340              		.syntax unified
 3341              		.thumb
 3342              		.thumb_func
 3344              	lv_tlsf_create_with_pool:
 3345              	.LVL329:
 3346              	.LFB58:
1078:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1079:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void * mem, size_t bytes)
1080:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3347              		.loc 1 1080 1 is_stmt 1 view -0
 3348              		.cfi_startproc
 3349              		@ args = 0, pretend = 0, frame = 0
 3350              		@ frame_needed = 0, uses_anonymous_args = 0
 3351              		.loc 1 1080 1 is_stmt 0 view .LVU980
 3352 0000 70B5     		push	{r4, r5, r6, lr}
 3353              	.LCFI47:
 3354              		.cfi_def_cfa_offset 16
 3355              		.cfi_offset 4, -16
 3356              		.cfi_offset 5, -12
 3357              		.cfi_offset 6, -8
 3358              		.cfi_offset 14, -4
 3359 0002 0546     		mov	r5, r0
 3360 0004 0E46     		mov	r6, r1
1081:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3361              		.loc 1 1081 5 is_stmt 1 view .LVU981
 3362              		.loc 1 1081 22 is_stmt 0 view .LVU982
 3363 0006 FFF7FEFF 		bl	lv_tlsf_create
 3364              	.LVL330:
 3365              		.loc 1 1081 22 view .LVU983
 3366 000a 0446     		mov	r4, r0
 3367              	.LVL331:
1082:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     lv_tlsf_add_pool(tlsf, (char *)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3368              		.loc 1 1082 5 is_stmt 1 view .LVU984
 3369              		.loc 1 1082 42 is_stmt 0 view .LVU985
 3370 000c FFF7FEFF 		bl	lv_tlsf_size
 3371              	.LVL332:
 3372              		.loc 1 1082 5 view .LVU986
 3373 0010 321A     		subs	r2, r6, r0
 3374 0012 2918     		adds	r1, r5, r0
 3375 0014 2046     		mov	r0, r4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 86


 3376 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3377              	.LVL333:
1083:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf;
 3378              		.loc 1 1083 5 is_stmt 1 view .LVU987
1084:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3379              		.loc 1 1084 1 is_stmt 0 view .LVU988
 3380 001a 2046     		mov	r0, r4
 3381 001c 70BD     		pop	{r4, r5, r6, pc}
 3382              		.loc 1 1084 1 view .LVU989
 3383              		.cfi_endproc
 3384              	.LFE58:
 3386              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3387              		.align	1
 3388              		.global	lv_tlsf_destroy
 3389              		.syntax unified
 3390              		.thumb
 3391              		.thumb_func
 3393              	lv_tlsf_destroy:
 3394              	.LVL334:
 3395              	.LFB59:
1085:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1086:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1087:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3396              		.loc 1 1087 1 is_stmt 1 view -0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 0
 3399              		@ frame_needed = 0, uses_anonymous_args = 0
 3400              		@ link register save eliminated.
1088:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Nothing to do. */
1089:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     LV_UNUSED(tlsf);
 3401              		.loc 1 1089 5 view .LVU991
1090:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3402              		.loc 1 1090 1 is_stmt 0 view .LVU992
 3403 0000 7047     		bx	lr
 3404              		.cfi_endproc
 3405              	.LFE59:
 3407              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3408              		.align	1
 3409              		.global	lv_tlsf_get_pool
 3410              		.syntax unified
 3411              		.thumb
 3412              		.thumb_func
 3414              	lv_tlsf_get_pool:
 3415              	.LVL335:
 3416              	.LFB60:
1091:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1092:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1093:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3417              		.loc 1 1093 1 is_stmt 1 view -0
 3418              		.cfi_startproc
 3419              		@ args = 0, pretend = 0, frame = 0
 3420              		@ frame_needed = 0, uses_anonymous_args = 0
 3421              		.loc 1 1093 1 is_stmt 0 view .LVU994
 3422 0000 10B5     		push	{r4, lr}
 3423              	.LCFI48:
 3424              		.cfi_def_cfa_offset 8
 3425              		.cfi_offset 4, -8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 87


 3426              		.cfi_offset 14, -4
 3427 0002 0446     		mov	r4, r0
1094:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return tlsf_cast(lv_pool_t, (char *)tlsf + lv_tlsf_size());
 3428              		.loc 1 1094 5 is_stmt 1 view .LVU995
 3429              		.loc 1 1094 12 is_stmt 0 view .LVU996
 3430 0004 FFF7FEFF 		bl	lv_tlsf_size
 3431              	.LVL336:
1095:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3432              		.loc 1 1095 1 view .LVU997
 3433 0008 2044     		add	r0, r0, r4
 3434 000a 10BD     		pop	{r4, pc}
 3435              		.loc 1 1095 1 view .LVU998
 3436              		.cfi_endproc
 3437              	.LFE60:
 3439              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3440              		.align	1
 3441              		.global	lv_tlsf_malloc
 3442              		.syntax unified
 3443              		.thumb
 3444              		.thumb_func
 3446              	lv_tlsf_malloc:
 3447              	.LVL337:
 3448              	.LFB61:
1096:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1097:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void * lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1098:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3449              		.loc 1 1098 1 is_stmt 1 view -0
 3450              		.cfi_startproc
 3451              		@ args = 0, pretend = 0, frame = 0
 3452              		@ frame_needed = 0, uses_anonymous_args = 0
 3453              		.loc 1 1098 1 is_stmt 0 view .LVU1000
 3454 0000 38B5     		push	{r3, r4, r5, lr}
 3455              	.LCFI49:
 3456              		.cfi_def_cfa_offset 16
 3457              		.cfi_offset 3, -16
 3458              		.cfi_offset 4, -12
 3459              		.cfi_offset 5, -8
 3460              		.cfi_offset 14, -4
 3461 0002 0446     		mov	r4, r0
 3462 0004 0846     		mov	r0, r1
 3463              	.LVL338:
1099:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_t * control = tlsf_cast(control_t *, tlsf);
 3464              		.loc 1 1099 5 is_stmt 1 view .LVU1001
1100:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3465              		.loc 1 1100 5 view .LVU1002
 3466              		.loc 1 1100 27 is_stmt 0 view .LVU1003
 3467 0006 0421     		movs	r1, #4
 3468              	.LVL339:
 3469              		.loc 1 1100 27 view .LVU1004
 3470 0008 FFF7FEFF 		bl	adjust_request_size
 3471              	.LVL340:
 3472              		.loc 1 1100 27 view .LVU1005
 3473 000c 0546     		mov	r5, r0
 3474              	.LVL341:
1101:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = block_locate_free(control, adjust);
 3475              		.loc 1 1101 5 is_stmt 1 view .LVU1006
 3476              		.loc 1 1101 30 is_stmt 0 view .LVU1007
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 88


 3477 000e 0146     		mov	r1, r0
 3478 0010 2046     		mov	r0, r4
 3479              	.LVL342:
 3480              		.loc 1 1101 30 view .LVU1008
 3481 0012 FFF7FEFF 		bl	block_locate_free
 3482              	.LVL343:
 3483              		.loc 1 1101 30 view .LVU1009
 3484 0016 0146     		mov	r1, r0
 3485              	.LVL344:
1102:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_prepare_used(control, block, adjust);
 3486              		.loc 1 1102 5 is_stmt 1 view .LVU1010
 3487              		.loc 1 1102 12 is_stmt 0 view .LVU1011
 3488 0018 2A46     		mov	r2, r5
 3489 001a 2046     		mov	r0, r4
 3490              	.LVL345:
 3491              		.loc 1 1102 12 view .LVU1012
 3492 001c FFF7FEFF 		bl	block_prepare_used
 3493              	.LVL346:
1103:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3494              		.loc 1 1103 1 view .LVU1013
 3495 0020 38BD     		pop	{r3, r4, r5, pc}
 3496              		.loc 1 1103 1 view .LVU1014
 3497              		.cfi_endproc
 3498              	.LFE61:
 3500              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3501              		.align	1
 3502              		.global	lv_tlsf_memalign
 3503              		.syntax unified
 3504              		.thumb
 3505              		.thumb_func
 3507              	lv_tlsf_memalign:
 3508              	.LVL347:
 3509              	.LFB62:
1104:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1105:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void * lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1106:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3510              		.loc 1 1106 1 is_stmt 1 view -0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
 3513              		@ frame_needed = 0, uses_anonymous_args = 0
 3514              		.loc 1 1106 1 is_stmt 0 view .LVU1016
 3515 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3516              	.LCFI50:
 3517              		.cfi_def_cfa_offset 24
 3518              		.cfi_offset 4, -24
 3519              		.cfi_offset 5, -20
 3520              		.cfi_offset 6, -16
 3521              		.cfi_offset 7, -12
 3522              		.cfi_offset 8, -8
 3523              		.cfi_offset 14, -4
 3524 0004 0646     		mov	r6, r0
 3525 0006 0C46     		mov	r4, r1
1107:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_t * control = tlsf_cast(control_t *, tlsf);
 3526              		.loc 1 1107 5 is_stmt 1 view .LVU1017
 3527              	.LVL348:
1108:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3528              		.loc 1 1108 5 view .LVU1018
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 89


 3529              		.loc 1 1108 27 is_stmt 0 view .LVU1019
 3530 0008 0421     		movs	r1, #4
 3531              	.LVL349:
 3532              		.loc 1 1108 27 view .LVU1020
 3533 000a 1046     		mov	r0, r2
 3534              	.LVL350:
 3535              		.loc 1 1108 27 view .LVU1021
 3536 000c FFF7FEFF 		bl	adjust_request_size
 3537              	.LVL351:
 3538              		.loc 1 1108 27 view .LVU1022
 3539 0010 0546     		mov	r5, r0
 3540              	.LVL352:
1109:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1110:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
1111:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** We must allocate an additional minimum block size bytes so that if
1112:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** our free block will leave an alignment gap which is smaller, we can
1113:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** trim a leading free block and release it back to the pool. We must
1114:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** do this because the previous physical block is in use, therefore
1115:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** the prev_phys_block field is not valid, and we can't simply adjust
1116:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** the size of that block.
1117:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
1118:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t gap_minimum = sizeof(block_header_t);
 3541              		.loc 1 1118 5 is_stmt 1 view .LVU1023
1119:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3542              		.loc 1 1119 5 view .LVU1024
 3543              		.loc 1 1119 61 is_stmt 0 view .LVU1025
 3544 0012 2044     		add	r0, r0, r4
 3545              	.LVL353:
 3546              		.loc 1 1119 34 view .LVU1026
 3547 0014 2146     		mov	r1, r4
 3548 0016 1030     		adds	r0, r0, #16
 3549 0018 FFF7FEFF 		bl	adjust_request_size
 3550              	.LVL354:
1120:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1121:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /*
1122:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** If alignment is less than or equals base alignment, we're done.
1123:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     ** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1124:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     */
1125:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3551              		.loc 1 1125 5 is_stmt 1 view .LVU1027
 3552              		.loc 1 1125 80 is_stmt 0 view .LVU1028
 3553 001c 25B1     		cbz	r5, .L243
 3554 001e 0146     		mov	r1, r0
 3555              		.loc 1 1125 41 discriminator 1 view .LVU1029
 3556 0020 042C     		cmp	r4, #4
 3557 0022 02D8     		bhi	.L238
 3558              		.loc 1 1125 80 view .LVU1030
 3559 0024 2946     		mov	r1, r5
 3560 0026 00E0     		b	.L238
 3561              	.L243:
 3562              		.loc 1 1125 80 view .LVU1031
 3563 0028 2946     		mov	r1, r5
 3564              	.L238:
 3565              	.LVL355:
1126:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1127:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     block_header_t * block = block_locate_free(control, aligned_size);
 3566              		.loc 1 1127 5 is_stmt 1 discriminator 6 view .LVU1032
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 90


 3567              		.loc 1 1127 30 is_stmt 0 discriminator 6 view .LVU1033
 3568 002a 3046     		mov	r0, r6
 3569              	.LVL356:
 3570              		.loc 1 1127 30 discriminator 6 view .LVU1034
 3571 002c FFF7FEFF 		bl	block_locate_free
 3572              	.LVL357:
1128:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1129:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* This can't be a static assert. */
1130:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3573              		.loc 1 1130 5 is_stmt 1 discriminator 6 view .LVU1035
 3574              		.loc 1 1130 5 discriminator 6 view .LVU1036
 3575              		.loc 1 1130 5 discriminator 6 view .LVU1037
1131:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1132:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(block) {
 3576              		.loc 1 1132 5 discriminator 6 view .LVU1038
 3577              		.loc 1 1132 7 is_stmt 0 discriminator 6 view .LVU1039
 3578 0030 0746     		mov	r7, r0
 3579 0032 F8B1     		cbz	r0, .L239
 3580              	.LBB13:
1133:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         void * ptr = block_to_ptr(block);
 3581              		.loc 1 1133 9 is_stmt 1 view .LVU1040
 3582              		.loc 1 1133 22 is_stmt 0 view .LVU1041
 3583 0034 FFF7FEFF 		bl	block_to_ptr
 3584              	.LVL358:
 3585              		.loc 1 1133 22 view .LVU1042
 3586 0038 8046     		mov	r8, r0
 3587              	.LVL359:
1134:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         void * aligned = align_ptr(ptr, align);
 3588              		.loc 1 1134 9 is_stmt 1 view .LVU1043
 3589              		.loc 1 1134 26 is_stmt 0 view .LVU1044
 3590 003a 2146     		mov	r1, r4
 3591 003c FFF7FEFF 		bl	align_ptr
 3592              	.LVL360:
1135:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size_t gap = tlsf_cast(size_t,
 3593              		.loc 1 1135 9 is_stmt 1 view .LVU1045
 3594              		.loc 1 1135 22 is_stmt 0 view .LVU1046
 3595 0040 A0EB0802 		sub	r2, r0, r8
 3596              	.LVL361:
1136:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                                tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1137:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1138:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /* If gap size is too small, offset to next aligned boundary. */
1139:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(gap && gap < gap_minimum) {
 3597              		.loc 1 1139 9 is_stmt 1 view .LVU1047
 3598              		.loc 1 1139 16 is_stmt 0 view .LVU1048
 3599 0044 531E     		subs	r3, r2, #1
 3600              		.loc 1 1139 11 view .LVU1049
 3601 0046 0E2B     		cmp	r3, #14
 3602 0048 03D9     		bls	.L245
 3603              	.L240:
1140:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const size_t gap_remain = gap_minimum - gap;
1141:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const size_t offset = tlsf_max(gap_remain, align);
1142:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const void * next_aligned = tlsf_cast(void *,
1143:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                                                   tlsf_cast(tlsfptr_t, aligned) + offset);
1144:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1145:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             aligned = align_ptr(next_aligned, align);
1146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             gap = tlsf_cast(size_t,
1147:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                             tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 91


1148:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
1149:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1150:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(gap) {
 3604              		.loc 1 1150 9 is_stmt 1 view .LVU1050
 3605              		.loc 1 1150 11 is_stmt 0 view .LVU1051
 3606 004a 9AB1     		cbz	r2, .L239
1151:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             tlsf_assert(gap >= gap_minimum && "gap size too small");
 3607              		.loc 1 1151 13 is_stmt 1 view .LVU1052
 3608              		.loc 1 1151 13 view .LVU1053
 3609 004c 0F2A     		cmp	r2, #15
 3610 004e 0CD8     		bhi	.L241
 3611              	.L242:
 3612              		.loc 1 1151 13 discriminator 2 view .LVU1054
 3613              		.loc 1 1151 13 discriminator 2 view .LVU1055
 3614              		.loc 1 1151 13 discriminator 2 view .LVU1056
 3615              		.loc 1 1151 13 discriminator 2 view .LVU1057
 3616              		.loc 1 1151 13 discriminator 2 view .LVU1058
 3617 0050 FEE7     		b	.L242
 3618              	.L245:
 3619              	.LBB14:
1140:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const size_t gap_remain = gap_minimum - gap;
 3620              		.loc 1 1140 13 view .LVU1059
1140:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const size_t gap_remain = gap_minimum - gap;
 3621              		.loc 1 1140 26 is_stmt 0 view .LVU1060
 3622 0052 C2F11002 		rsb	r2, r2, #16
 3623              	.LVL362:
1141:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             const void * next_aligned = tlsf_cast(void *,
 3624              		.loc 1 1141 13 is_stmt 1 view .LVU1061
1142:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                                                   tlsf_cast(tlsfptr_t, aligned) + offset);
 3625              		.loc 1 1142 13 view .LVU1062
1145:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             gap = tlsf_cast(size_t,
 3626              		.loc 1 1145 13 view .LVU1063
1145:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             gap = tlsf_cast(size_t,
 3627              		.loc 1 1145 23 is_stmt 0 view .LVU1064
 3628 0056 2146     		mov	r1, r4
 3629 0058 9442     		cmp	r4, r2
 3630 005a 2CBF     		ite	cs
 3631 005c 0019     		addcs	r0, r0, r4
 3632 005e 8018     		addcc	r0, r0, r2
 3633              	.LVL363:
1145:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             gap = tlsf_cast(size_t,
 3634              		.loc 1 1145 23 view .LVU1065
 3635 0060 FFF7FEFF 		bl	align_ptr
 3636              	.LVL364:
1146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                             tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3637              		.loc 1 1146 13 is_stmt 1 view .LVU1066
1146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                             tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3638              		.loc 1 1146 19 is_stmt 0 view .LVU1067
 3639 0064 A0EB0802 		sub	r2, r0, r8
 3640              	.LVL365:
1146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                             tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3641              		.loc 1 1146 19 view .LVU1068
 3642 0068 EFE7     		b	.L240
 3643              	.LVL366:
 3644              	.L241:
1146:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                             tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3645              		.loc 1 1146 19 view .LVU1069
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 92


 3646              	.LBE14:
 3647              		.loc 1 1151 13 is_stmt 1 discriminator 2 view .LVU1070
1152:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block = block_trim_free_leading(control, block, gap);
 3648              		.loc 1 1152 13 discriminator 2 view .LVU1071
 3649              		.loc 1 1152 21 is_stmt 0 discriminator 2 view .LVU1072
 3650 006a 3946     		mov	r1, r7
 3651 006c 3046     		mov	r0, r6
 3652              	.LVL367:
 3653              		.loc 1 1152 21 discriminator 2 view .LVU1073
 3654 006e FFF7FEFF 		bl	block_trim_free_leading
 3655              	.LVL368:
 3656              		.loc 1 1152 21 discriminator 2 view .LVU1074
 3657 0072 0746     		mov	r7, r0
 3658              	.LVL369:
 3659              	.L239:
 3660              		.loc 1 1152 21 discriminator 2 view .LVU1075
 3661              	.LBE13:
1153:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
1154:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1155:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1156:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return block_prepare_used(control, block, adjust);
 3662              		.loc 1 1156 5 is_stmt 1 view .LVU1076
 3663              		.loc 1 1156 12 is_stmt 0 view .LVU1077
 3664 0074 2A46     		mov	r2, r5
 3665 0076 3946     		mov	r1, r7
 3666 0078 3046     		mov	r0, r6
 3667 007a FFF7FEFF 		bl	block_prepare_used
 3668              	.LVL370:
1157:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3669              		.loc 1 1157 1 view .LVU1078
 3670 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3671              		.loc 1 1157 1 view .LVU1079
 3672              		.cfi_endproc
 3673              	.LFE62:
 3675              		.section	.text.lv_tlsf_free,"ax",%progbits
 3676              		.align	1
 3677              		.global	lv_tlsf_free
 3678              		.syntax unified
 3679              		.thumb
 3680              		.thumb_func
 3682              	lv_tlsf_free:
 3683              	.LVL371:
 3684              	.LFB63:
1158:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1159:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** size_t lv_tlsf_free(lv_tlsf_t tlsf, const void * ptr)
1160:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3685              		.loc 1 1160 1 is_stmt 1 view -0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 0
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
 3689              		.loc 1 1160 1 is_stmt 0 view .LVU1081
 3690 0000 70B5     		push	{r4, r5, r6, lr}
 3691              	.LCFI51:
 3692              		.cfi_def_cfa_offset 16
 3693              		.cfi_offset 4, -16
 3694              		.cfi_offset 5, -12
 3695              		.cfi_offset 6, -8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 93


 3696              		.cfi_offset 14, -4
1161:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     size_t size = 0;
 3697              		.loc 1 1161 5 is_stmt 1 view .LVU1082
 3698              	.LVL372:
1162:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Don't attempt to free a NULL pointer. */
1163:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(ptr) {
 3699              		.loc 1 1163 5 view .LVU1083
 3700              		.loc 1 1163 7 is_stmt 0 view .LVU1084
 3701 0002 C9B1     		cbz	r1, .L250
 3702 0004 0546     		mov	r5, r0
 3703 0006 0846     		mov	r0, r1
 3704              	.LVL373:
 3705              	.LBB15:
1164:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         control_t * control = tlsf_cast(control_t *, tlsf);
 3706              		.loc 1 1164 9 is_stmt 1 view .LVU1085
1165:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * block = block_from_ptr(ptr);
 3707              		.loc 1 1165 9 view .LVU1086
 3708              		.loc 1 1165 34 is_stmt 0 view .LVU1087
 3709 0008 FFF7FEFF 		bl	block_from_ptr
 3710              	.LVL374:
 3711              		.loc 1 1165 34 view .LVU1088
 3712 000c 0446     		mov	r4, r0
 3713              	.LVL375:
1166:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_free(block) && "block already marked as free");
 3714              		.loc 1 1166 9 is_stmt 1 view .LVU1089
 3715              		.loc 1 1166 9 view .LVU1090
 3716 000e FFF7FEFF 		bl	block_is_free
 3717              	.LVL376:
 3718              		.loc 1 1166 9 is_stmt 0 view .LVU1091
 3719 0012 00B1     		cbz	r0, .L248
 3720              	.L249:
 3721              		.loc 1 1166 9 is_stmt 1 discriminator 1 view .LVU1092
 3722              		.loc 1 1166 9 discriminator 1 view .LVU1093
 3723              		.loc 1 1166 9 discriminator 1 view .LVU1094
 3724              		.loc 1 1166 9 discriminator 1 view .LVU1095
 3725              		.loc 1 1166 9 discriminator 1 view .LVU1096
 3726 0014 FEE7     		b	.L249
 3727              	.L248:
 3728              		.loc 1 1166 9 discriminator 2 view .LVU1097
1167:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         size = block->size;
 3729              		.loc 1 1167 9 discriminator 2 view .LVU1098
 3730              		.loc 1 1167 14 is_stmt 0 discriminator 2 view .LVU1099
 3731 0016 6668     		ldr	r6, [r4, #4]
 3732              	.LVL377:
1168:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_mark_as_free(block);
 3733              		.loc 1 1168 9 is_stmt 1 discriminator 2 view .LVU1100
 3734 0018 2046     		mov	r0, r4
 3735 001a FFF7FEFF 		bl	block_mark_as_free
 3736              	.LVL378:
1169:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_merge_prev(control, block);
 3737              		.loc 1 1169 9 discriminator 2 view .LVU1101
 3738              		.loc 1 1169 17 is_stmt 0 discriminator 2 view .LVU1102
 3739 001e 2146     		mov	r1, r4
 3740 0020 2846     		mov	r0, r5
 3741 0022 FFF7FEFF 		bl	block_merge_prev
 3742              	.LVL379:
 3743 0026 0146     		mov	r1, r0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 94


 3744              	.LVL380:
1170:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block = block_merge_next(control, block);
 3745              		.loc 1 1170 9 is_stmt 1 discriminator 2 view .LVU1103
 3746              		.loc 1 1170 17 is_stmt 0 discriminator 2 view .LVU1104
 3747 0028 2846     		mov	r0, r5
 3748              	.LVL381:
 3749              		.loc 1 1170 17 discriminator 2 view .LVU1105
 3750 002a FFF7FEFF 		bl	block_merge_next
 3751              	.LVL382:
 3752              		.loc 1 1170 17 discriminator 2 view .LVU1106
 3753 002e 0146     		mov	r1, r0
 3754              	.LVL383:
1171:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_insert(control, block);
 3755              		.loc 1 1171 9 is_stmt 1 discriminator 2 view .LVU1107
 3756 0030 2846     		mov	r0, r5
 3757              	.LVL384:
 3758              		.loc 1 1171 9 is_stmt 0 discriminator 2 view .LVU1108
 3759 0032 FFF7FEFF 		bl	block_insert
 3760              	.LVL385:
 3761              		.loc 1 1171 9 discriminator 2 view .LVU1109
 3762 0036 00E0     		b	.L246
 3763              	.LVL386:
 3764              	.L250:
 3765              		.loc 1 1171 9 discriminator 2 view .LVU1110
 3766              	.LBE15:
1161:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Don't attempt to free a NULL pointer. */
 3767              		.loc 1 1161 12 view .LVU1111
 3768 0038 0026     		movs	r6, #0
1172:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1173:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1174:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return size;
 3769              		.loc 1 1174 5 is_stmt 1 view .LVU1112
 3770              	.LVL387:
 3771              	.L246:
1175:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3772              		.loc 1 1175 1 is_stmt 0 view .LVU1113
 3773 003a 3046     		mov	r0, r6
 3774 003c 70BD     		pop	{r4, r5, r6, pc}
 3775              		.cfi_endproc
 3776              	.LFE63:
 3778              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 3779              		.align	1
 3780              		.global	lv_tlsf_realloc
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3785              	lv_tlsf_realloc:
 3786              	.LVL388:
 3787              	.LFB64:
1176:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1177:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** /*
1178:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1179:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1180:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1181:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **
1182:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1183:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 95


1184:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1185:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1186:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **   untouched
1187:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1188:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** **   contents undefined
1189:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** */
1190:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** void * lv_tlsf_realloc(lv_tlsf_t tlsf, void * ptr, size_t size)
1191:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** {
 3788              		.loc 1 1191 1 is_stmt 1 view -0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              		.loc 1 1191 1 is_stmt 0 view .LVU1115
 3793 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3794              	.LCFI52:
 3795              		.cfi_def_cfa_offset 40
 3796              		.cfi_offset 3, -40
 3797              		.cfi_offset 4, -36
 3798              		.cfi_offset 5, -32
 3799              		.cfi_offset 6, -28
 3800              		.cfi_offset 7, -24
 3801              		.cfi_offset 8, -20
 3802              		.cfi_offset 9, -16
 3803              		.cfi_offset 10, -12
 3804              		.cfi_offset 11, -8
 3805              		.cfi_offset 14, -4
 3806 0004 0546     		mov	r5, r0
 3807 0006 1446     		mov	r4, r2
1192:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     control_t * control = tlsf_cast(control_t *, tlsf);
 3808              		.loc 1 1192 5 is_stmt 1 view .LVU1116
 3809              	.LVL389:
1193:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     void * p = 0;
 3810              		.loc 1 1193 5 view .LVU1117
1194:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1195:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Zero-size requests are treated as free. */
1196:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     if(ptr && size == 0) {
 3811              		.loc 1 1196 5 view .LVU1118
 3812              		.loc 1 1196 7 is_stmt 0 view .LVU1119
 3813 0008 29B3     		cbz	r1, .L253
 3814 000a 8946     		mov	r9, r1
 3815              		.loc 1 1196 12 discriminator 1 view .LVU1120
 3816 000c EAB1     		cbz	r2, .L264
1197:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         lv_tlsf_free(tlsf, ptr);
1198:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1199:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     /* Requests with NULL pointers are treated as malloc. */
1200:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     else if(!ptr) {
 3817              		.loc 1 1200 10 is_stmt 1 view .LVU1121
 3818              	.LBB16:
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         p = lv_tlsf_malloc(tlsf, size);
1202:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1203:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     else {
1204:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * block = block_from_ptr(ptr);
 3819              		.loc 1 1204 9 view .LVU1122
 3820              		.loc 1 1204 34 is_stmt 0 view .LVU1123
 3821 000e 0846     		mov	r0, r1
 3822              	.LVL390:
 3823              		.loc 1 1204 34 view .LVU1124
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 96


 3824 0010 FFF7FEFF 		bl	block_from_ptr
 3825              	.LVL391:
 3826              		.loc 1 1204 34 view .LVU1125
 3827 0014 0746     		mov	r7, r0
 3828              	.LVL392:
1205:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         block_header_t * next = block_next(block);
 3829              		.loc 1 1205 9 is_stmt 1 view .LVU1126
 3830              		.loc 1 1205 33 is_stmt 0 view .LVU1127
 3831 0016 FFF7FEFF 		bl	block_next
 3832              	.LVL393:
 3833              		.loc 1 1205 33 view .LVU1128
 3834 001a 8246     		mov	r10, r0
 3835              	.LVL394:
1206:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1207:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t cursize = block_size(block);
 3836              		.loc 1 1207 9 is_stmt 1 view .LVU1129
 3837              		.loc 1 1207 32 is_stmt 0 view .LVU1130
 3838 001c 3846     		mov	r0, r7
 3839              	.LVL395:
 3840              		.loc 1 1207 32 view .LVU1131
 3841 001e FFF7FEFF 		bl	block_size
 3842              	.LVL396:
 3843 0022 0646     		mov	r6, r0
 3844              	.LVL397:
1208:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t combined = cursize + block_size(next) + block_header_overhead;
 3845              		.loc 1 1208 9 is_stmt 1 view .LVU1132
 3846              		.loc 1 1208 43 is_stmt 0 view .LVU1133
 3847 0024 5046     		mov	r0, r10
 3848              	.LVL398:
 3849              		.loc 1 1208 43 view .LVU1134
 3850 0026 FFF7FEFF 		bl	block_size
 3851              	.LVL399:
 3852              		.loc 1 1208 41 view .LVU1135
 3853 002a 8319     		adds	r3, r0, r6
 3854              		.loc 1 1208 22 view .LVU1136
 3855 002c 03F1040B 		add	fp, r3, #4
 3856              	.LVL400:
1209:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3857              		.loc 1 1209 9 is_stmt 1 view .LVU1137
 3858              		.loc 1 1209 31 is_stmt 0 view .LVU1138
 3859 0030 0421     		movs	r1, #4
 3860 0032 2046     		mov	r0, r4
 3861 0034 FFF7FEFF 		bl	adjust_request_size
 3862              	.LVL401:
 3863 0038 8046     		mov	r8, r0
 3864              	.LVL402:
1210:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(size > cursize && adjust == 0) {
 3865              		.loc 1 1210 9 is_stmt 1 view .LVU1139
 3866              		.loc 1 1210 11 is_stmt 0 view .LVU1140
 3867 003a B442     		cmp	r4, r6
 3868 003c 00D9     		bls	.L256
 3869              		.loc 1 1210 27 discriminator 1 view .LVU1141
 3870 003e D8B3     		cbz	r0, .L262
 3871              	.L256:
1211:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* The request is probably too large, fail */
1212:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             return NULL;
1213:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 97


1214:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1215:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         tlsf_assert(!block_is_free(block) && "block already marked as free");
 3872              		.loc 1 1215 9 is_stmt 1 view .LVU1142
 3873              		.loc 1 1215 9 view .LVU1143
 3874 0040 3846     		mov	r0, r7
 3875              	.LVL403:
 3876              		.loc 1 1215 9 is_stmt 0 view .LVU1144
 3877 0042 FFF7FEFF 		bl	block_is_free
 3878              	.LVL404:
 3879 0046 58B1     		cbz	r0, .L257
 3880              	.L258:
 3881              		.loc 1 1215 9 is_stmt 1 discriminator 1 view .LVU1145
 3882              		.loc 1 1215 9 discriminator 1 view .LVU1146
 3883              		.loc 1 1215 9 discriminator 1 view .LVU1147
 3884              		.loc 1 1215 9 discriminator 1 view .LVU1148
 3885              		.loc 1 1215 9 discriminator 1 view .LVU1149
 3886 0048 FEE7     		b	.L258
 3887              	.LVL405:
 3888              	.L264:
 3889              		.loc 1 1215 9 is_stmt 0 discriminator 1 view .LVU1150
 3890              	.LBE16:
1197:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3891              		.loc 1 1197 9 is_stmt 1 view .LVU1151
 3892 004a FFF7FEFF 		bl	lv_tlsf_free
 3893              	.LVL406:
1193:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 3894              		.loc 1 1193 12 is_stmt 0 view .LVU1152
 3895 004e 0027     		movs	r7, #0
 3896              	.LVL407:
 3897              	.L252:
1216:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1217:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         /*
1218:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** If the next block is used, or when combined with the current
1219:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         ** block, does not offer enough space, we must reallocate and copy.
1220:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         */
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         if(adjust > cursize && (!block_is_free(next) || adjust > combined)) {
1222:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
1223:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(p) {
1224:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 const size_t minsize = tlsf_min(cursize, size);
1225:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 lv_memcpy(p, ptr, minsize);
1226:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 lv_tlsf_free(tlsf, ptr);
1227:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
1228:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
1229:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         else {
1230:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* Do we need to expand to the next block? */
1231:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(adjust > cursize) {
1232:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block_merge_next(control, block);
1233:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block_mark_as_used(block);
1234:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
1235:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1236:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             /* Trim the resulting block and return the original pointer. */
1237:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             block_trim_used(control, block, adjust);
1238:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = ptr;
1239:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
1240:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
1241:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
1242:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     return p;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 98


1243:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** }
 3898              		.loc 1 1243 1 view .LVU1153
 3899 0050 3846     		mov	r0, r7
 3900 0052 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3901              	.LVL408:
 3902              	.L253:
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3903              		.loc 1 1201 9 is_stmt 1 view .LVU1154
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3904              		.loc 1 1201 13 is_stmt 0 view .LVU1155
 3905 0056 1146     		mov	r1, r2
 3906              	.LVL409:
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3907              		.loc 1 1201 13 view .LVU1156
 3908 0058 FFF7FEFF 		bl	lv_tlsf_malloc
 3909              	.LVL410:
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3910              		.loc 1 1201 13 view .LVU1157
 3911 005c 0746     		mov	r7, r0
 3912              	.LVL411:
1201:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****     }
 3913              		.loc 1 1201 13 view .LVU1158
 3914 005e F7E7     		b	.L252
 3915              	.LVL412:
 3916              	.L257:
 3917              	.LBB18:
1215:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c **** 
 3918              		.loc 1 1215 9 is_stmt 1 discriminator 2 view .LVU1159
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
 3919              		.loc 1 1221 9 discriminator 2 view .LVU1160
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
 3920              		.loc 1 1221 11 is_stmt 0 discriminator 2 view .LVU1161
 3921 0060 4645     		cmp	r6, r8
 3922 0062 18D2     		bcs	.L259
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
 3923              		.loc 1 1221 34 discriminator 1 view .LVU1162
 3924 0064 5046     		mov	r0, r10
 3925 0066 FFF7FEFF 		bl	block_is_free
 3926              	.LVL413:
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
 3927              		.loc 1 1221 29 discriminator 1 view .LVU1163
 3928 006a 08B1     		cbz	r0, .L260
1221:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = lv_tlsf_malloc(tlsf, size);
 3929              		.loc 1 1221 54 discriminator 2 view .LVU1164
 3930 006c C345     		cmp	fp, r8
 3931 006e 12D2     		bcs	.L259
 3932              	.L260:
1222:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(p) {
 3933              		.loc 1 1222 13 is_stmt 1 view .LVU1165
1222:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             if(p) {
 3934              		.loc 1 1222 17 is_stmt 0 view .LVU1166
 3935 0070 2146     		mov	r1, r4
 3936 0072 2846     		mov	r0, r5
 3937 0074 FFF7FEFF 		bl	lv_tlsf_malloc
 3938              	.LVL414:
1223:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 const size_t minsize = tlsf_min(cursize, size);
 3939              		.loc 1 1223 13 is_stmt 1 view .LVU1167
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 99


1223:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 const size_t minsize = tlsf_min(cursize, size);
 3940              		.loc 1 1223 15 is_stmt 0 view .LVU1168
 3941 0078 0746     		mov	r7, r0
 3942              	.LVL415:
1223:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 const size_t minsize = tlsf_min(cursize, size);
 3943              		.loc 1 1223 15 view .LVU1169
 3944 007a 0028     		cmp	r0, #0
 3945 007c E8D0     		beq	.L252
 3946              	.LBB17:
1224:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 lv_memcpy(p, ptr, minsize);
 3947              		.loc 1 1224 17 is_stmt 1 view .LVU1170
 3948              	.LVL416:
1225:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 lv_tlsf_free(tlsf, ptr);
 3949              		.loc 1 1225 17 view .LVU1171
 3950 007e 2246     		mov	r2, r4
 3951 0080 B442     		cmp	r4, r6
 3952 0082 28BF     		it	cs
 3953 0084 3246     		movcs	r2, r6
 3954 0086 4946     		mov	r1, r9
 3955 0088 FFF7FEFF 		bl	lv_memcpy
 3956              	.LVL417:
1226:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 3957              		.loc 1 1226 17 view .LVU1172
 3958 008c 4946     		mov	r1, r9
 3959 008e 2846     		mov	r0, r5
 3960 0090 FFF7FEFF 		bl	lv_tlsf_free
 3961              	.LVL418:
 3962 0094 DCE7     		b	.L252
 3963              	.LVL419:
 3964              	.L259:
1226:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 3965              		.loc 1 1226 17 is_stmt 0 view .LVU1173
 3966              	.LBE17:
1231:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block_merge_next(control, block);
 3967              		.loc 1 1231 13 is_stmt 1 view .LVU1174
1231:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block_merge_next(control, block);
 3968              		.loc 1 1231 15 is_stmt 0 view .LVU1175
 3969 0096 4645     		cmp	r6, r8
 3970 0098 06D3     		bcc	.L265
 3971              	.L261:
1237:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             p = ptr;
 3972              		.loc 1 1237 13 is_stmt 1 view .LVU1176
 3973 009a 4246     		mov	r2, r8
 3974 009c 3946     		mov	r1, r7
 3975 009e 2846     		mov	r0, r5
 3976 00a0 FFF7FEFF 		bl	block_trim_used
 3977              	.LVL420:
1238:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 3978              		.loc 1 1238 13 view .LVU1177
1238:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 3979              		.loc 1 1238 15 is_stmt 0 view .LVU1178
 3980 00a4 4F46     		mov	r7, r9
 3981              	.LVL421:
1238:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 3982              		.loc 1 1238 15 view .LVU1179
 3983 00a6 D3E7     		b	.L252
 3984              	.LVL422:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 100


 3985              	.L265:
1232:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****                 block_mark_as_used(block);
 3986              		.loc 1 1232 17 is_stmt 1 view .LVU1180
 3987 00a8 3946     		mov	r1, r7
 3988 00aa 2846     		mov	r0, r5
 3989 00ac FFF7FEFF 		bl	block_merge_next
 3990              	.LVL423:
1233:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****             }
 3991              		.loc 1 1233 17 view .LVU1181
 3992 00b0 3846     		mov	r0, r7
 3993 00b2 FFF7FEFF 		bl	block_mark_as_used
 3994              	.LVL424:
 3995 00b6 F0E7     		b	.L261
 3996              	.LVL425:
 3997              	.L262:
1212:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 3998              		.loc 1 1212 20 is_stmt 0 view .LVU1182
 3999 00b8 0027     		movs	r7, #0
 4000              	.LVL426:
1212:Lib/lvgl/src/stdlib/builtin/lv_tlsf.c ****         }
 4001              		.loc 1 1212 20 view .LVU1183
 4002 00ba C9E7     		b	.L252
 4003              	.LBE18:
 4004              		.cfi_endproc
 4005              	.LFE64:
 4007              		.text
 4008              	.Letext0:
 4009              		.file 2 "e:\\programms\\gnu_mcu_eclipse\\toolchain\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-
 4010              		.file 3 "Lib/lvgl/src/stdlib/builtin/lv_tlsf.h"
 4011              		.file 4 "Lib/lvgl/src/stdlib/builtin/../../stdlib/lv_string.h"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 101


DEFINED SYMBOLS
                            *ABS*:00000000 lv_tlsf.c
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:21     .text.block_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:26     .text.block_size:00000000 block_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:45     .text.block_set_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:50     .text.block_set_size:00000000 block_set_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:77     .text.block_is_last:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:82     .text.block_is_last:00000000 block_is_last
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:107    .text.block_is_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:112    .text.block_is_free:00000000 block_is_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:131    .text.block_set_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:136    .text.block_set_free:00000000 block_set_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:156    .text.block_set_used:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:161    .text.block_set_used:00000000 block_set_used
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:181    .text.block_is_prev_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:186    .text.block_is_prev_free:00000000 block_is_prev_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:205    .text.block_set_prev_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:210    .text.block_set_prev_free:00000000 block_set_prev_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:230    .text.block_set_prev_used:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:235    .text.block_set_prev_used:00000000 block_set_prev_used
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:255    .text.block_from_ptr:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:260    .text.block_from_ptr:00000000 block_from_ptr
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:278    .text.block_to_ptr:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:283    .text.block_to_ptr:00000000 block_to_ptr
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:301    .text.offset_to_block:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:306    .text.offset_to_block:00000000 offset_to_block
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:324    .text.block_prev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:329    .text.block_prev:00000000 block_prev
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:367    .text.block_next:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:372    .text.block_next:00000000 block_next
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:429    .text.block_link_next:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:434    .text.block_link_next:00000000 block_link_next
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:463    .text.block_mark_as_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:468    .text.block_mark_as_free:00000000 block_mark_as_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:500    .text.block_mark_as_used:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:505    .text.block_mark_as_used:00000000 block_mark_as_used
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:537    .text.align_up:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:542    .text.align_up:00000000 align_up
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:580    .text.align_down:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:585    .text.align_down:00000000 align_down
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:620    .text.align_ptr:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:625    .text.align_ptr:00000000 align_ptr
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:665    .text.adjust_request_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:670    .text.adjust_request_size:00000000 adjust_request_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:725    .text.remove_free_block:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:730    .text.remove_free_block:00000000 remove_free_block
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:840    .text.insert_free_block:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:845    .text.insert_free_block:00000000 insert_free_block
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:965    .text.block_can_split:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:970    .text.block_can_split:00000000 block_can_split
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1002   .text.block_split:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1007   .text.block_split:00000000 block_split
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1125   .text.block_absorb:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1130   .text.block_absorb:00000000 block_absorb
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1187   .text.control_constructor:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1192   .text.control_constructor:00000000 control_constructor
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1255   .text.integrity_walker:00000000 $t
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 102


C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1260   .text.integrity_walker:00000000 integrity_walker
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1355   .text.default_walker:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1360   .text.default_walker:00000000 default_walker
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1378   .text.tlsf_fls:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1383   .text.tlsf_fls:00000000 tlsf_fls
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1418   .text.mapping_insert:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1423   .text.mapping_insert:00000000 mapping_insert
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1498   .text.block_insert:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1503   .text.block_insert:00000000 block_insert
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1552   .text.block_trim_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1557   .text.block_trim_free:00000000 block_trim_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1638   .text.block_prepare_used:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1643   .text.block_prepare_used:00000000 block_prepare_used
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1701   .text.block_trim_free_leading:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1706   .text.block_trim_free_leading:00000000 block_trim_free_leading
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1775   .text.block_remove:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1780   .text.block_remove:00000000 block_remove
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1829   .text.block_merge_prev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1834   .text.block_merge_prev:00000000 block_merge_prev
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1922   .text.block_merge_next:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:1927   .text.block_merge_next:00000000 block_merge_next
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2009   .text.block_trim_used:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2014   .text.block_trim_used:00000000 block_trim_used
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2098   .text.mapping_search:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2103   .text.mapping_search:00000000 mapping_search
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2158   .text.tlsf_ffs:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2163   .text.tlsf_ffs:00000000 tlsf_ffs
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2188   .text.search_suitable_block:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2193   .text.search_suitable_block:00000000 search_suitable_block
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2322   .text.block_locate_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2327   .text.block_locate_free:00000000 block_locate_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2437   .text.lv_tlsf_check:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2443   .text.lv_tlsf_check:00000000 lv_tlsf_check
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2722   .text.lv_tlsf_walk_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2728   .text.lv_tlsf_walk_pool:00000000 lv_tlsf_walk_pool
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2819   .text.lv_tlsf_walk_pool:00000058 $d
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2824   .text.lv_tlsf_block_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2830   .text.lv_tlsf_block_size:00000000 lv_tlsf_block_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2876   .text.lv_tlsf_check_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2882   .text.lv_tlsf_check_pool:00000000 lv_tlsf_check_pool
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2918   .text.lv_tlsf_check_pool:0000001c $d
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2923   .text.lv_tlsf_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2929   .text.lv_tlsf_size:00000000 lv_tlsf_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2944   .text.lv_tlsf_align_size:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2950   .text.lv_tlsf_align_size:00000000 lv_tlsf_align_size
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2965   .text.lv_tlsf_block_size_min:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2971   .text.lv_tlsf_block_size_min:00000000 lv_tlsf_block_size_min
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2986   .text.lv_tlsf_block_size_max:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:2992   .text.lv_tlsf_block_size_max:00000000 lv_tlsf_block_size_max
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3007   .text.lv_tlsf_pool_overhead:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3013   .text.lv_tlsf_pool_overhead:00000000 lv_tlsf_pool_overhead
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3028   .text.lv_tlsf_alloc_overhead:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3034   .text.lv_tlsf_alloc_overhead:00000000 lv_tlsf_alloc_overhead
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3049   .text.lv_tlsf_add_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3055   .text.lv_tlsf_add_pool:00000000 lv_tlsf_add_pool
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3173   .text.lv_tlsf_remove_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3179   .text.lv_tlsf_remove_pool:00000000 lv_tlsf_remove_pool
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s 			page 103


C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3291   .text.lv_tlsf_create:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3297   .text.lv_tlsf_create:00000000 lv_tlsf_create
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3338   .text.lv_tlsf_create_with_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3344   .text.lv_tlsf_create_with_pool:00000000 lv_tlsf_create_with_pool
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3387   .text.lv_tlsf_destroy:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3393   .text.lv_tlsf_destroy:00000000 lv_tlsf_destroy
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3408   .text.lv_tlsf_get_pool:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3414   .text.lv_tlsf_get_pool:00000000 lv_tlsf_get_pool
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3440   .text.lv_tlsf_malloc:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3446   .text.lv_tlsf_malloc:00000000 lv_tlsf_malloc
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3501   .text.lv_tlsf_memalign:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3507   .text.lv_tlsf_memalign:00000000 lv_tlsf_memalign
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3676   .text.lv_tlsf_free:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3682   .text.lv_tlsf_free:00000000 lv_tlsf_free
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3779   .text.lv_tlsf_realloc:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccbKOCIJ.s:3785   .text.lv_tlsf_realloc:00000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
